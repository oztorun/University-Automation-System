<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Fintek.Common</name>
    </assembly>
    <members>
        <member name="T:Fintek.Common.AppHelper">
            <summary>
            Provides general purpose functions and properties for applications.
            </summary>
            <remarks>
            AppHelper includes three sub-classes AppOptions, AppLogger, AppRemoting.
            All these can be accessable from static properties.
            </remarks>
        </member>
        <member name="F:Fintek.Common.AppHelper.m_AppEnvironment">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fintek.Common.AppHelper.AppTier">
            <summary>
            Gets a value indicating the current application tier.
            </summary>
        </member>
        <member name="P:Fintek.Common.AppHelper.AppEnvironment">
            <summary>
            Gets the current application environment.
            </summary>
        </member>
        <member name="P:Fintek.Common.AppHelper.AppEnvironmentDomain">
            <summary>
            Gets the current application environment domain.
            Tempest.Client.P4.Emlak, Tempest.App.P4.Emlak -> Returns Emlak
            </summary>
        </member>
        <member name="P:Fintek.Common.AppHelper.Options">
            <summary>
            Gets the AppOptions static property.
            </summary>
        </member>
        <member name="P:Fintek.Common.AppHelper.Logger">
            <summary>
            Getst the AppLogger static property.
            </summary>
        </member>
        <member name="P:Fintek.Common.AppHelper.Remoting">
            <summary>
            Getst the AppRemoting static property.
            </summary>
        </member>
        <member name="P:Fintek.Common.AppHelper.ApplicationName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fintek.Common.AppHelper.DebugCompiled">
            <summary>
            Gets a value indicating the build configuration of Fintek.Common.dll is "Debug".
            </summary>
        </member>
        <member name="P:Fintek.Common.AppHelper.DebugLocated">
            <summary>
            Gets a value indicating, that current directory placament of the application is 
            VS.NET default or not.
            </summary>
        </member>
        <member name="P:Fintek.Common.AppHelper.MachineIP">
            <summary>
            Gets current computer's IP address.
            </summary>
        </member>
        <member name="P:Fintek.Common.AppHelper.IsWebApplication">
            <summary>
            Gets the application type.
            </summary>
        </member>
        <member name="T:Fintek.Common.AppHelper.ConfigurationSource">
            <summary>
            States the option source type for the AppOptions class.
            </summary>
        </member>
        <member name="F:Fintek.Common.AppHelper.ConfigurationSource.File">
            <summary>
            File configuration source.
            </summary>
        </member>
        <member name="F:Fintek.Common.AppHelper.ConfigurationSource.Registry">
            <summary>
            Registry configuration source.
            </summary>
        </member>
        <member name="T:Fintek.Common.AppHelper.AppOptions">
            <summary>
            Provides access for application options. Monitors the options changes.
            </summary>
        </member>
        <member name="M:Fintek.Common.AppHelper.AppOptions.#ctor(System.String)">
            <summary>
            Initializes a new instance of the AppOptions class for an application.
            </summary>
            <param name="assemblyName">Current application name.</param>
        </member>
        <member name="M:Fintek.Common.AppHelper.AppOptions.#ctor(Fintek.Common.AppHelper.ConfigurationSource,System.String)">
            <summary>
            Initializes a new instance of the AppOptions class.
            </summary>
            <param name="source">Source for option data will be read.</param>
            <param name="path">Path of the configuration file, if file configuration source is selected.</param>
        </member>
        <member name="M:Fintek.Common.AppHelper.AppOptions.OnChange(System.Object,System.IO.FileSystemEventArgs)">
            <summary>
            Raises the Change event.
            </summary>
            <param name="sender">Object that event raised from.</param>
            <param name="fsea">FileSystemEventArgs that stores the event data.</param>
        </member>
        <member name="M:Fintek.Common.AppHelper.AppOptions.Refresh">
            <summary>
            Refreshes the option names and values by clearing and reloding the option information
            from its source.
            </summary>
        </member>
        <member name="M:Fintek.Common.AppHelper.AppOptions.Save">
            <summary>
            Saves the current option value, if configuration source is registry.
            </summary>
        </member>
        <member name="M:Fintek.Common.AppHelper.AppOptions.Exists(System.String)">
            <summary>
            Checks the existance of an option name.
            </summary>
            <param name="optionName">Option name to check.</param>
            <returns>"true" if option name exists, "false" if option name is absent.</returns>
        </member>
        <member name="M:Fintek.Common.AppHelper.AppOptions.Add(System.String,System.String)">
            <summary>
            Adds a new string option with its name and value.
            </summary>
            <remarks>
            This function work properly if ConfigurationSource is Registry.
            </remarks>
            <param name="optionName">Name of the option to add.</param>
            <param name="optionValue">Option value.</param>
        </member>
        <member name="M:Fintek.Common.AppHelper.AppOptions.Add(System.String,System.Int32)">
            <summary>
            Adds a new integer option with its name and value.
            </summary>
            <remarks>
            This function work properly if ConfigurationSource is Registry.
            </remarks>
            <param name="optionName">Name of the option to add.</param>
            <param name="optionValue">Option value.</param>
        </member>
        <member name="M:Fintek.Common.AppHelper.AppOptions.Add(System.String,System.Boolean)">
            <summary>
            Adds a new boolean option with its name and value.
            </summary>
            <remarks>
            This function work properly if ConfigurationSource is Registry.
            </remarks>
            <param name="optionName">Name of the option to add.</param>
            <param name="optionValue">Option value.</param>
        </member>
        <member name="M:Fintek.Common.AppHelper.AppOptions.Remove(System.String)">
            <summary>
            Deletes an option.
            </summary>
            <remarks>
            This function work properly if ConfigurationSource is Registry.
            </remarks>
            <param name="optionName">Option name to delete.</param>
        </member>
        <member name="P:Fintek.Common.AppHelper.AppOptions.Source">
            <summary>
            Gets the current configuration source.
            </summary>
        </member>
        <member name="P:Fintek.Common.AppHelper.AppOptions.ConfigPath">
            <summary>
            Gets the current configuration path.
            </summary>
        </member>
        <member name="P:Fintek.Common.AppHelper.AppOptions.ConfigFolder">
            <summary>
            Gets the current configuration folder.
            </summary>
        </member>
        <member name="P:Fintek.Common.AppHelper.AppOptions.AutoRefresh">
            <summary>
            Gets or sets the autorefresh flag of the options.
            </summary>
        </member>
        <member name="E:Fintek.Common.AppHelper.AppOptions.Change">
            <summary>
            Occurs when option file is changed.
            </summary>
            <remarks>
            By handling this event, you can change the current option values
            in the application.
            </remarks>
        </member>
        <member name="P:Fintek.Common.AppHelper.AppOptions.Item(System.String)">
            <summary>
            Gets or sets the value with the specified option name.
            </summary>
        </member>
        <member name="P:Fintek.Common.AppHelper.AppOptions.Item(System.String,System.String)">
            <summary>
            Gets the string value with the specified option name.
            If option is missing default value returned.
            </summary>
        </member>
        <member name="P:Fintek.Common.AppHelper.AppOptions.Item(System.String,System.Boolean)">
            <summary>
            Gets the boolean value with the specified option name.
            If option is missing default value returned.
            </summary>
        </member>
        <member name="P:Fintek.Common.AppHelper.AppOptions.Item(System.String,System.Int32)">
            <summary>
            Gets the integer value with the specified option name.
            If option is missing default value returned.
            </summary>
        </member>
        <member name="T:Fintek.Common.AppHelper.AppLogger">
            <summary>
            Provides several methods and properties to perform logging operations.
            </summary>
            <remarks>
            This shall user AppLogger class via the static Logger property of the AppHelper class.
            </remarks>
        </member>
        <member name="M:Fintek.Common.AppHelper.AppLogger.#ctor">
            <summary>
            Initializes a new instance of AppLogger class.
            </summary>
        </member>
        <member name="M:Fintek.Common.AppHelper.AppLogger.Append(System.String)">
            <summary>
            Appends a line to the default log file.
            </summary>
            <param name="log">Log data.</param>
        </member>
        <member name="M:Fintek.Common.AppHelper.AppLogger.Append(System.String,System.String)">
            <summary>
            Appends a line to the log file in the specified folder.
            </summary>
            <param name="folder"></param>
            <param name="log"></param>
        </member>
        <member name="M:Fintek.Common.AppHelper.AppLogger.MessageLog(System.String)">
            <summary>
            Appends a log line to the message log file.
            </summary>
            <param name="messageLog">Log data.</param>
        </member>
        <member name="M:Fintek.Common.AppHelper.AppLogger.DebugLog(System.String)">
            <summary>
            Appends a log line to the debug log file.
            </summary>
            <param name="debugLog">Log data.</param>
        </member>
        <member name="M:Fintek.Common.AppHelper.AppLogger.TraceLog(System.String)">
            <summary>
            Appends a log line to the trace log file without a trace level.
            </summary>
            <param name="traceLog">Log data.</param>
        </member>
        <member name="M:Fintek.Common.AppHelper.AppLogger.TraceLog(System.String,System.Int32)">
            <summary>
            Appends a log line to the trace log file by checking the trace level.
            </summary>
            <param name="traceLog">Log data.</param>
            <param name="traceLevel">Specifies the trace level.</param>
        </member>
        <member name="M:Fintek.Common.AppHelper.AppLogger.EventLog(System.String,System.String,System.Diagnostics.EventLogEntryType)">
            <summary>
            Add an entry to the application event log.
            </summary>
            <param name="source">Event source</param>
            <param name="eventLog">Log data</param>
            <param name="eventLogEntryType">Log type</param>
        </member>
        <member name="M:Fintek.Common.AppHelper.AppLogger.EventLog(System.String,System.String)">
            <summary>
            Add an entry to the application event log with error type.
            </summary>
            <param name="source">Event source</param>
            <param name="eventLog">Log data</param>
        </member>
        <member name="M:Fintek.Common.AppHelper.AppLogger.OnLogAppend(System.Object,Fintek.Common.AppHelper.LogAppendEventArgs)">
            <summary>
            Raises the LogAppend event.
            </summary>
            <param name="sender">Sender of the event.</param>
            <param name="laea">Event args that contains the event data.</param>
        </member>
        <member name="P:Fintek.Common.AppHelper.AppLogger.FileByDate">
            <summary>
            Gets or sets the flag, that indicates the log file name is specified by system date.
            </summary>
        </member>
        <member name="P:Fintek.Common.AppHelper.AppLogger.Folder">
            <summary>
            Gets or set the path of the log file will be placed in.
            </summary>
        </member>
        <member name="P:Fintek.Common.AppHelper.AppLogger.SubFolder">
            <summary>
            Gets or set the sub (module) path of the log file will be placed in.
            </summary>
        </member>
        <member name="P:Fintek.Common.AppHelper.AppLogger.FileName">
            <summary>
            Gets or sets the log file name.
            </summary>
        </member>
        <member name="P:Fintek.Common.AppHelper.AppLogger.TimeEnabled">
            <summary>
            Gets or sets the flag, indicates that every log line will start with a 
            time expression.
            </summary>
        </member>
        <member name="P:Fintek.Common.AppHelper.AppLogger.UseSingleFile">
            <summary>
            Gets or sets the flag, indicating single log file extention will be user for 
            all types of logging.
            </summary>
        </member>
        <member name="P:Fintek.Common.AppHelper.AppLogger.TimeFormat">
            <summary>
            Gets or sets the time format of the log lines.
            </summary>
        </member>
        <member name="P:Fintek.Common.AppHelper.AppLogger.DateFormat">
            <summary>
            Gets or sets the date format of the log file names.
            </summary>
        </member>
        <member name="P:Fintek.Common.AppHelper.AppLogger.DebugOn">
            <summary>
            Sets the flag indicating debug logging will performed.
            </summary>
        </member>
        <member name="P:Fintek.Common.AppHelper.AppLogger.TraceOn">
            <summary>
            Sets the flag indicating trace logging will performed.
            </summary>
        </member>
        <member name="P:Fintek.Common.AppHelper.AppLogger.TraceLevel">
            <summary>
            Sets the value indicating the trace level.
            </summary>
        </member>
        <member name="E:Fintek.Common.AppHelper.AppLogger.LogAppend">
            <summary>
            Occurs when a log line appended to the log file.
            </summary>
        </member>
        <member name="T:Fintek.Common.AppHelper.LogAppendEventHandler">
            <summary>
            Represents a method that can handle a LogAppend event.
            </summary>
        </member>
        <member name="T:Fintek.Common.AppHelper.LogAppendEventArgs">
            <summary>
            Provides data for LogAppend event.
            </summary>
        </member>
        <member name="M:Fintek.Common.AppHelper.LogAppendEventArgs.#ctor(System.String)">
            <summary>
            Initializes an instance for LogAppendEventArgs class.
            </summary>
            <param name="log">Log line that appended to the log file.</param>
        </member>
        <member name="P:Fintek.Common.AppHelper.LogAppendEventArgs.Log">
            <summary>
            Gets the value indicating the log line appended the log file.
            </summary>
        </member>
        <member name="T:Fintek.Common.AppHelper.AppRemoting">
            <summary>
            Provides helper functions to manipulate the remoting infrastructure.
            </summary>
            <remarks>
            Normally, you would access the AppRemoting class via the static Remoting property
            of the AppHelper class.
            </remarks>
        </member>
        <member name="M:Fintek.Common.AppHelper.AppRemoting.#ctor">
            <summary>
            Creates an instance for AppRemoting class.
            </summary>
        </member>
        <member name="M:Fintek.Common.AppHelper.AppRemoting.SetCallerInfo(System.String,System.String)">
            <summary>
            Sets the caller info to perform login on Tempest channel.
            </summary>
            <param name="userName">Login user name.</param>
            <param name="password">Login password.</param>
        </member>
        <member name="M:Fintek.Common.AppHelper.AppRemoting.SetCallerInfo(System.String,System.String,Fintek.Common.CustomContextData)">
            <summary>
            Sets the caller info to perform login on Tempest channel with context data.
            </summary>
            <param name="userName">Login user name.</param>
            <param name="password">Login password.</param>
            <param name="contextData">Custom context data object.</param>
        </member>
        <member name="M:Fintek.Common.AppHelper.AppRemoting.Configure(System.String)">
            <summary>
            Configures the http channel with the specified channel configuration file.
            </summary>
            <param name="configurationFile">Path of the channel configuration file.</param>
        </member>
        <member name="M:Fintek.Common.AppHelper.AppRemoting.Configure">
            <summary>
            Configures the channel with default values.
            </summary>
        </member>
        <member name="M:Fintek.Common.AppHelper.AppRemoting.UnConfigure">
            <summary>
            Unconfigures the all channels configured in the current application.
            </summary>
        </member>
        <member name="P:Fintek.Common.AppHelper.AppRemoting.ChannelConfigured">
            <summary>
            Gets the value indicating any channel configuration in the application.
            </summary>
        </member>
        <member name="P:Fintek.Common.AppHelper.AppRemoting.ProxyAddress">
            <summary>
            Gets the value indicating proxy address of the current channel configuration.
            </summary>
            <remarks>
            This method is obsolete when used with a custom channel implementation.
            Result is significant when you have a proxy object, created by the soapsuds.exe.
            </remarks>
        </member>
        <member name="P:Fintek.Common.AppHelper.AppRemoting.RedirectionUrl">
            <summary>
            Gets the current channel configuration's redirection Url.
            </summary>
            <remarks>This method has significant data when custom channel 
            configuration is performed.
            </remarks>
        </member>
        <member name="T:Fintek.Common.AppSettings">
            <summary>
            Uygulamanın ayarları.
            </summary>
            <remarks>
            Bu sınıf tarafından sunulan işlevler, AppHelper kapsamına alınmıştır.
            Bu sınıf geriye uyumluluk için durmaktadır.
            </remarks>
        </member>
        <member name="P:Fintek.Common.AppSettings.DebugMode">
            <summary>
            Debug modda olup olmadığını döndürür.
            </summary>
        </member>
        <member name="P:Fintek.Common.AppSettings.TestEnvironment">
            <summary>
            Test ortamı olup olmadığını alır.
            </summary>
        </member>
        <member name="T:Fintek.Common.AppSettings.LoginEntryInfo">
            <summary>
            Login bilgilerini saklar.
            </summary>
        </member>
        <member name="P:Fintek.Common.AppSettings.LoginEntryInfo.ReplaceLocaleSpecifics">
            <summary>
            ReplaceLocaleSpecifics
            </summary>
        </member>
        <member name="P:Fintek.Common.AppSettings.LoginEntryInfo.CaseStyle">
            <summary>
            CaseStyle
            </summary>
        </member>
        <member name="T:Fintek.Common.AppSettings.Login">
            <summary>
            Login sınıfı.
            </summary>
        </member>
        <member name="P:Fintek.Common.AppSettings.Login.UserName">
            <summary>
            Kullanıcı adını alır.
            </summary>
        </member>
        <member name="P:Fintek.Common.AppSettings.Login.Password">
            <summary>
            Kullanıcı şifresini alır.
            </summary>
        </member>
        <member name="T:Fintek.Common.ArrayHelper">
            <summary>
            Array donusumleri icin yardımcı sınıf
            </summary>
            <remarks>
            Bu sınıf array donusumleri icin yardımci metodlar sunar
            </remarks>
        </member>
        <member name="M:Fintek.Common.ArrayHelper.ToMultiDimensionalArray``1(``0[][])">
            <summary>
            Input jagged arrayi multidimensioanl arraye donusturur.
            Multidimensional arraye donusturulmek istenen jagged arrayin tüm satırlarının kolon sayısı eşit olmalıdır.
            Aksi halde exception fırlatılır
            </summary>
            <typeparam name="T"></typeparam>
            <param name="jaggedArray"></param>
            <returns></returns>
        </member>
        <member name="M:Fintek.Common.ArrayHelper.ToJaggedArray``1(``0[0:,0:])">
            <summary>
            Input multidimensional arrayi jagged arraye cevirir
            </summary>
            <typeparam name="T"></typeparam>
            <param name="mArray"></param>
            <returns></returns>
        </member>
        <member name="T:Fintek.Common.BaseCalendar">
            <summary>
            Yerli (Türk) takvim.
            </summary>
        </member>
        <member name="M:Fintek.Common.BaseCalendar.Load(System.Int32)">
            <summary>
            Takvim verilerini doldurmak içindir.
            </summary>
            <param name="countryCode">Ülke kodu.</param>
        </member>
        <member name="M:Fintek.Common.BaseCalendar.GetOffDayExplanation(Fintek.Common.DateType)">
            <summary>
            Tatil günü açıklamasını döndürür.
            </summary>
            <param name="t">Açıklaması döndürülecek tarih.</param>
            <returns>Açıklama.</returns>
        </member>
        <member name="M:Fintek.Common.BaseCalendar.IsValidDate(System.Int32,System.Int32,System.Int32)">
            <summary>
            Tarihin geçerliliğini döndürür.
            </summary>
            <param name="day">Gün.</param>
            <param name="month">Ay.</param>
            <param name="year">Yıl.</param>
            <returns>Tarih geçerli ise true, değil ise false.</returns>
        </member>
        <member name="M:Fintek.Common.BaseCalendar.IsValidDate(System.String,Fintek.Common.DateTypeFormats)">
            <summary>
            Tarihin geçerliliğini döndürür.
            </summary>
            <param name="dateString">Kontrol edilecek tarihin text değeri.</param>
            <param name="dateFormat">Kontrol edilecek tarihin biçimi.</param>
            <returns>Tarih geçerli ise true, değil ise false.</returns>
        </member>
        <member name="M:Fintek.Common.BaseCalendar.IsWorkingDate">
            <summary>
            İş günü olup olmadığını döndürür.
            </summary>
            <returns>İş günü ise true, değil ise false.</returns>
        </member>
        <member name="M:Fintek.Common.BaseCalendar.IsWorkingDate(Fintek.Common.DateType)">
            <summary>
            İş günü olup olmadığını döndürür.
            </summary>
            <param name="t">Test edilecek DateType olarak tarihsel değer.</param>
            <returns>İş günü ise true, değil ise false.</returns>
        </member>
        <member name="M:Fintek.Common.BaseCalendar.IsHalfWorkingDate">
            <summary>
            Yarım gün olup olmadığını döndürür.
            </summary>
            <returns>Yarım gün ise true, değil ise false.</returns>
        </member>
        <member name="M:Fintek.Common.BaseCalendar.IsHalfWorkingDate(Fintek.Common.DateType)">
            <summary>
            Yarım gün olup olmadığını döndürür.
            </summary>
            <param name="t">Test edilecek DateType olarak tarihsel değer.</param>
            <returns>Yarım gün ise true, değil ise false.</returns>
        </member>
        <member name="M:Fintek.Common.BaseCalendar.IsWorkingDate(System.String,Fintek.Common.DateTypeFormats)">
            <summary>
            Yarım gün olup olmadığını döndürür.
            </summary>
            <param name="dateString">Test edilecek text olarak tarihsel değer.</param>
            <param name="tarihTip">Test edilecek tarihsel değerin biçimi.</param>
            <returns>Yarım gün ise true, değil ise false.</returns>
        </member>
        <member name="M:Fintek.Common.BaseCalendar.IsLeapYear(System.Int32)">
            <summary>
            Artık yıl olup olmadığını döndürür.
            </summary>
            <param name="year">Test edilecek yıl değeri.</param>
            <returns>Artık yıl ise true, değil ise false.</returns>
        </member>
        <member name="M:Fintek.Common.BaseCalendar.IsLeapYear(Fintek.Common.DateType)">
            <summary>
            Artık yıl olup olmadığını döndürür.
            </summary>
            <param name="t">Test edilecek yılın DateType olarak değeri.</param>
            <returns>Artık yıl ise true, değil ise false.</returns>
        </member>
        <member name="M:Fintek.Common.BaseCalendar.ValueDay(Fintek.Common.DateType)">
            <summary>
            Verilen bir tarihin valörünü döndürür.
            </summary>
            <param name="t">Valörü alıncak tarih.</param>
            <returns>Valör değeri.</returns>
        </member>
        <member name="M:Fintek.Common.BaseCalendar.FindWorkingDay(Fintek.Common.DateType,System.Int32)">
            <summary>
            İş gün bulma metodu.
            </summary>
            <param name="t">Hangi tarihten itibaren başlanacağı bilgisi.</param>
            <param name="incDay">Kaç iş günü sonra ya da önce olduğunun bilgisi.</param>
            <returns>İleri ya da geriye doğru bulunması istenen işgünü değeri.</returns>
        </member>
        <member name="M:Fintek.Common.BaseCalendar.FindWorkingDay(System.Int32)">
            <summary>
            İş gün bulma metodu.
            </summary>
            <param name="incDay">Kaç iş günü sonra ya da önce olduğunun bilgisi.</param>
            <returns>İleri ya da geriye doğru bulunması istenen işgünü değeri.</returns>
        </member>
        <member name="M:Fintek.Common.BaseCalendar.BeginningofWeek(Fintek.Common.DateType)">
            <summary>
            Haftanın ilk gününü döndürür.
            </summary>
            <param name="t">Haftasının ilk günü bulunması istenen tarih.</param>
            <returns>Haftanın ilk günü.</returns>
        </member>
        <member name="M:Fintek.Common.BaseCalendar.BeginningofWeekWorkingDate(Fintek.Common.DateType)">
            <summary>
            Haftanın ilk iş gününü döndürür.
            </summary>
            <param name="t">Haftasının ilk iş günü bulunması istenen tarih.</param>
            <returns>Haftanın ilk iş günü.</returns>
        </member>
        <member name="M:Fintek.Common.BaseCalendar.EndofWeek(Fintek.Common.DateType)">
            <summary>
            Haftanın son gününü döndürür.
            </summary>
            <param name="t">Haftasının son günü bulunması istenen tarih.</param>
            <returns>Haftanın son günü.</returns>
        </member>
        <member name="M:Fintek.Common.BaseCalendar.EndofWeekWorkingDate(Fintek.Common.DateType)">
            <summary>
            Haftanın son iş gününü döndürür.
            </summary>
            <param name="t">Haftasının son iş günü bulunması istenen tarih.</param>
            <returns>Haftanın son iş günü.</returns>
        </member>
        <member name="M:Fintek.Common.BaseCalendar.BeginningofMonth(Fintek.Common.DateType)">
            <summary>
            Ayın ilk gününü döndürür.
            </summary>
            <param name="t">Ayın ilk günü bulunması istenen tarih.</param>
            <returns>Ayın ilk günü.</returns>
        </member>
        <member name="M:Fintek.Common.BaseCalendar.BeginningofMonth(System.Int32)">
            <summary>
            Ayın ilk gününü döndürür.
            </summary>
            <param name="month">Ayın ilk günü bulunması istenen ay.</param>
            <returns>Ayın ilk günü.</returns>
        </member>
        <member name="M:Fintek.Common.BaseCalendar.BeginningofMonthWorkingDate(Fintek.Common.DateType)">
            <summary>
            Ayın ilk iş gününü döndürür.
            </summary>
            <param name="t">Ayın ilk iş günü bulunması istenen tarih.</param>
            <returns>Ayın ilk iş günü.</returns>
        </member>
        <member name="M:Fintek.Common.BaseCalendar.BeginningofMonthWorkingDate(System.Int32)">
            <summary>
            Ayın ilk iş gününü döndürür.
            </summary>
            <param name="month">Ayın ilk iş günü bulunması istenen ay.</param>
            <returns>Ayın ilk iş günü.</returns>
        </member>
        <member name="M:Fintek.Common.BaseCalendar.EndofMonth(Fintek.Common.DateType)">
            <summary>
            Ayın son gününü döndürür.
            </summary>
            <param name="t">Ayın son günü bulunması istenen tarih.</param>
            <returns>Ayın son günü.</returns>
        </member>
        <member name="M:Fintek.Common.BaseCalendar.EndofMonth(System.Int32)">
            <summary>
            Ayın son gününü döndürür.
            </summary>
            <param name="month">Ayın son günü bulunması istenen ay.</param>
            <returns>Ayın son günü.</returns>
        </member>
        <member name="M:Fintek.Common.BaseCalendar.EndofMonthWorkingDate(Fintek.Common.DateType)">
            <summary>
            Ayın son iş gününü döndürür.
            </summary>
            <param name="t">Ayın son iş günü bulunması istenen tarih.</param>
            <returns>Ayın son iş günü.</returns>
        </member>
        <member name="M:Fintek.Common.BaseCalendar.EndofMonthWorkingDate(System.Int32)">
            <summary>
            Ayın son iş gününü döndürür.
            </summary>
            <param name="month">Ayın son iş günü bulunması istenen ay.</param>
            <returns>Ayın son iş günü.</returns>
        </member>
        <member name="M:Fintek.Common.BaseCalendar.BeginningofPeriod(Fintek.Common.DateType)">
            <summary>
            Dönemin ilk gününü döndürür.
            </summary>
            <param name="t">Dönemin ilk günü bulunması istenen tarih.</param>
            <returns>Dönemin ilk günü.</returns>
        </member>
        <member name="M:Fintek.Common.BaseCalendar.EndofPeriod(Fintek.Common.DateType)">
            <summary>
            Dönemin son gününü döndürür.
            </summary>
            <param name="t">Dönemin son günü bulunması istenen tarih.</param>
            <returns>Dönemin son günü.</returns>
        </member>
        <member name="M:Fintek.Common.BaseCalendar.BeginningofPeriodWorkingDate(Fintek.Common.DateType)">
            <summary>
            Dönemin ilk iş gününü döndürür.
            </summary>
            <param name="t">Dönemin ilk iş günü bulunması istenen tarih.</param>
            <returns>Dönemin ilk iş günü.</returns>
        </member>
        <member name="M:Fintek.Common.BaseCalendar.EndofPeriodWorkingDate(Fintek.Common.DateType)">
            <summary>
            Dönemin son iş gününü döndürür.
            </summary>
            <param name="t">Dönemin son iş günü bulunması istenen tarih.</param>
            <returns>Dönemin ilk iş günü.</returns>
        </member>
        <member name="M:Fintek.Common.BaseCalendar.BeginningofYear(Fintek.Common.DateType)">
            <summary>
            Yılın ilk gününü döndürür.
            </summary>
            <param name="t">Yılın ilk günü bulunması istenen tarih.</param>
            <returns>Yılın ilk günü.</returns>
        </member>
        <member name="M:Fintek.Common.BaseCalendar.EndofYear(Fintek.Common.DateType)">
            <summary>
            Yılın son gününü döndürür.
            </summary>
            <param name="t">Yılın son günü bulunması istenen tarih.</param>
            <returns>Yılın son günü.</returns>
        </member>
        <member name="M:Fintek.Common.BaseCalendar.BeginningofYearWorkingDate(Fintek.Common.DateType)">
            <summary>
            Yılın ilk iş gününü döndürür.
            </summary>
            <param name="t">Yılın ilk iş günü bulunması istenen tarih.</param>
            <returns>Yılın ilk iş günü.</returns>
        </member>
        <member name="M:Fintek.Common.BaseCalendar.EndofYearWorkingDate(Fintek.Common.DateType)">
            <summary>
            Yılın son iş gününü döndürür.
            </summary>
            <param name="t">Yılın son iş günü bulunması istenen tarih.</param>
            <returns>Yılın son iş günü.</returns>
        </member>
        <member name="M:Fintek.Common.BaseCalendar.GetDatesInYear(System.Int32)">
            <summary>
            Verilen bir yılın kaç gün olduğunu döndürür.
            </summary>
            <param name="year">Yıl.</param>
            <returns>Verilen yılın kaç gün olduğu.</returns>
        </member>
        <member name="M:Fintek.Common.BaseCalendar.GetDatesInYear(Fintek.Common.DateType)">
            <summary>
            Verilen bir tarihin (DateType) kaç gün olduğunu döndürür.
            </summary>
            <param name="t">Yıl.</param>
            <returns>Verilen tarihin (DateType) kaç gün olduğu.</returns>
        </member>
        <member name="M:Fintek.Common.BaseCalendar.CalculateDifference(Fintek.Common.DateType,Fintek.Common.DateType)">
            <summary>
            Verilen iki tarih (DateType) arasındaki gün farkını hesaplar.
            </summary>
            <param name="endDate">Bitiş tarihi.</param>
            <param name="startDate">Başlangıç tarihi.</param>
            <returns>Verilen iki tarih (DateType) arasındaki gün farkı.</returns>
        </member>
        <member name="M:Fintek.Common.BaseCalendar.CalculateDifferenceAsMonth(Fintek.Common.DateType,Fintek.Common.DateType)">
            <summary>
            Verilen iki tarih (DateType) arasındaki ay farkını hesaplar.
            </summary>
            <param name="endDate">Bitiş tarihi.</param>
            <param name="startDate">Başlangıç tarihi.</param>
            <returns>Verilen iki tarih (DateType) arasındaki ay farkı.</returns>
        </member>
        <member name="M:Fintek.Common.BaseCalendar.CalculateWorkingDayDifference(Fintek.Common.DateType,Fintek.Common.DateType)">
            <summary>
            Verilen iki tarih (DateType) arasındaki iş günü farkını hesaplar.
            </summary>
            <param name="endDate">Bitiş tarihi.</param>
            <param name="startDate">Başlangıç tarihi.</param>
            <returns>Verilen iki tarih (DateTyype) arasındaki ay farkı.</returns>
        </member>
        <member name="M:Fintek.Common.BaseCalendar.ChangeCurrentDate(Fintek.Common.DateType)">
            <summary>
            İş günü değerini değiştirir.
            </summary>
            <param name="date"></param>
        </member>
        <member name="P:Fintek.Common.BaseCalendar.Data">
            <summary>
            Takvime ait veri.
            </summary>
        </member>
        <member name="P:Fintek.Common.BaseCalendar.CurrentDate">
            <summary>
            İş günü değeri.
            </summary>
        </member>
        <member name="P:Fintek.Common.BaseCalendar.Loaded">
            <summary>
            Takvim verisinin yüklenme bilgisini döndürür.
            </summary>
        </member>
        <member name="P:Fintek.Common.BaseCalendar.ValueDate">
            <summary>
            Valör tarihinin değeri.
            </summary>
        </member>
        <member name="T:Fintek.Common.BaseException">
            <summary>
            UI katmanı hata sınıfı.
            </summary>
        </member>
        <member name="F:Fintek.Common.BaseException.errorCode">
            <summary>
            Hata kodu.
            </summary>
        </member>
        <member name="F:Fintek.Common.BaseException.title">
            <summary>
            Hatanın başlığı.
            </summary>
        </member>
        <member name="F:Fintek.Common.BaseException.errorDescription">
            <summary>
            Hata açıklaması.
            </summary>
        </member>
        <member name="F:Fintek.Common.BaseException.m_TargetSite">
            <summary>
            Hedef.
            </summary>
        </member>
        <member name="F:Fintek.Common.BaseException.m_Source">
            <summary>
            Hatanın kaynak olduğu nesne.
            </summary>
        </member>
        <member name="F:Fintek.Common.BaseException.m_LogFolder">
            <summary>
            İz klasörünün adı.
            </summary>
        </member>
        <member name="F:Fintek.Common.BaseException.reference">
            <summary>
            Hatanın alındığı zaman.
            </summary>
        </member>
        <member name="F:Fintek.Common.BaseException.Type">
            <summary>
            Exception türü.
            </summary>
        </member>
        <member name="M:Fintek.Common.BaseException.#ctor">
            <summary>
            Yeni bir BaseException yaratır.
            </summary>
        </member>
        <member name="M:Fintek.Common.BaseException.#ctor(System.String,System.Exception)">
            <summary>
            Yeni bir BaseException yaratır.
            </summary>
            <param name="message">Text olarak hata iletisi.</param>
            <param name="inner">Gerçek hata.</param>
        </member>
        <member name="M:Fintek.Common.BaseException.#ctor(System.Int32,System.Exception,Fintek.Common.BaseException.MessageChannels[])">
            <summary>
            Yeni bir BaseException yaratır.
            </summary>
            <param name="errorCode">Hata kodu.</param>
            <param name="inner">Gerçek hata.</param>
            <param name="messageChannel">Kanal listesi.</param>
        </member>
        <member name="M:Fintek.Common.BaseException.#ctor(Fintek.Common.BaseException)">
            <summary>
            Yeni bir BaseException yaratır.
            </summary>
            <param name="bx">Kaynak BaseException.</param>
        </member>
        <member name="M:Fintek.Common.BaseException.#ctor(System.Int32,System.String,System.Reflection.MethodBase,Fintek.Common.BaseException.MessageChannels[])">
            <summary>
            Yeni bir BaseException yaratır.
            </summary>
            <param name="errorCode">Hata kodu.</param>
            <param name="source">Kaynak</param>
            <param name="targetSite">Hedef kanal.</param>
            <param name="messageChannel">Kanal listesi.</param>
        </member>
        <member name="M:Fintek.Common.BaseException.#ctor(System.Int32,System.String,System.Reflection.MethodBase,System.Exception,Fintek.Common.BaseException.MessageChannels[])">
            <summary>
            Yeni bir BaseException yaratır.
            </summary>
            <param name="errorCode">Hata kodu.</param>
            <param name="source">Kaynak.</param>
            <param name="targetSite">Hedef kanal.</param>
            <param name="inner">Gerçek hata.</param>
            <param name="messageChannel">Kanal listesi.</param>
        </member>
        <member name="M:Fintek.Common.BaseException.#ctor(System.Int32,Fintek.Common.BaseException.MessageChannels[])">
            <summary>
            Yeni bir BaseException yaratır.
            </summary>
            <param name="errorCode">Hata kodu.</param>
            <param name="messageChannel">Kanal listesi.</param>
        </member>
        <member name="M:Fintek.Common.BaseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Yeni bir BaseException yaratır.
            </summary>
            <param name="bilgi">SerializationInfo</param>
            <param name="baglam">StreamingContext</param>
        </member>
        <member name="M:Fintek.Common.BaseException.setAppException(System.Int32,System.String,System.Reflection.MethodBase,Fintek.Common.BaseException.MessageChannels[])">
            <summary>
            AppException'ı ayarlamaya yarar.
            </summary>
            <param name="errorCode">Hata kodu.</param>
            <param name="source">Kaynak.</param>
            <param name="targetSite">Hedef kanal.</param>
            <param name="messageChannel">Kanl listesi.</param>
        </member>
        <member name="M:Fintek.Common.BaseException.writeToChannels(Fintek.Common.BaseException.MessageChannels[])">
            <summary>
            Kanallara yazmaya yarar.
            </summary>
            <param name="messageChannel">Kanal kodu listesi.</param>
        </member>
        <member name="M:Fintek.Common.BaseException.writeToLog">
            <summary>
            İz dosyasına yazmaya yarar.
            </summary>
        </member>
        <member name="M:Fintek.Common.BaseException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            GetObjectData.
            </summary>
            <param name="bilgi">SerializationInfo</param>
            <param name="baglam">StreamingContext</param>
        </member>
        <member name="M:Fintek.Common.BaseException.ThrowBaseExcepiton">
            <summary>
            BaseExcepiton yaratmak içindir.
            </summary>
        </member>
        <member name="P:Fintek.Common.BaseException.ErrorCode">
            <summary>
            Hata kodu.
            </summary>
        </member>
        <member name="P:Fintek.Common.BaseException.Title">
            <summary>
            Başlık.
            </summary>
        </member>
        <member name="P:Fintek.Common.BaseException.ErrorDescription">
            <summary>
            Hata açıklaması.
            </summary>
        </member>
        <member name="P:Fintek.Common.BaseException.MTargetSite">
            <summary>
            Hedef.
            </summary>
        </member>
        <member name="P:Fintek.Common.BaseException.MSource">
            <summary>
            Kaynak.
            </summary>
        </member>
        <member name="P:Fintek.Common.BaseException.MLogFolder">
            <summary>
            İz dizini.
            </summary>
        </member>
        <member name="P:Fintek.Common.BaseException.Reference">
            <summary>
            Hatanın oluştuğu zaman.
            </summary>
        </member>
        <member name="P:Fintek.Common.BaseException.MessageType">
            <summary>
            BaseException nesnesine ait hata tipini döndürür.
            Hata Tipleri : None, Warning, Exception, CriticalException, Information, UnknownException
            </summary>
        </member>
        <member name="P:Fintek.Common.BaseException.BaseExceptionType">
            <summary>
            Exception tipi
            </summary>
        </member>
        <member name="P:Fintek.Common.BaseException.Message">
            <summary>
            Text olarak ileti.
            </summary>
        </member>
        <member name="T:Fintek.Common.BaseException.MessageTypeIcons">
            <summary>
            İleti türü simgeleri.
            </summary>
        </member>
        <member name="F:Fintek.Common.BaseException.MessageTypeIcons.Warning">
            <summary>
            Uyarı.
            </summary>
        </member>
        <member name="F:Fintek.Common.BaseException.MessageTypeIcons.Error">
            <summary>
            Hata.
            </summary>
        </member>
        <member name="F:Fintek.Common.BaseException.MessageTypeIcons.Critical">
            <summary>
            Kritik hata.
            </summary>
        </member>
        <member name="F:Fintek.Common.BaseException.MessageTypeIcons.Information">
            <summary>
            Bilgi.
            </summary>
        </member>
        <member name="F:Fintek.Common.BaseException.MessageTypeIcons.Unknown">
            <summary>
            Bilinmeyen.
            </summary>
        </member>
        <member name="T:Fintek.Common.BaseException.MessageChannels">
            <summary>
            İleti kanalları.
            </summary>
        </member>
        <member name="F:Fintek.Common.BaseException.MessageChannels.EventLog">
            <summary>
            Event Log.
            </summary>
        </member>
        <member name="F:Fintek.Common.BaseException.MessageChannels.FileSystem">
            <summary>
            Dosya olarak.
            </summary>
        </member>
        <member name="F:Fintek.Common.BaseException.MessageChannels.Mail">
            <summary>
            E-Posta.
            </summary>
        </member>
        <member name="F:Fintek.Common.BaseException.MessageChannels.Database">
            <summary>
            Veritabanı.
            </summary>
        </member>
        <member name="F:Fintek.Common.BaseException.MessageChannels.WindowsAlert">
            <summary>
            Windows Alarm.
            </summary>
        </member>
        <member name="T:Fintek.Common.BaseExceptionTypes">
            <summary>
            BaseException nesnesine ait hata tipleri
            0-Hiçbiri, 1-Uyarı, 2-Hata 3-Kritik Hata, 4-Bilgi, 5-Bilinmeyen Hata
            </summary>
        </member>
        <member name="F:Fintek.Common.BaseExceptionTypes.None">
            <summary>
            Hiçbiri
            </summary>
        </member>
        <member name="F:Fintek.Common.BaseExceptionTypes.Warning">
            <summary>
            Uyarı
            </summary>
        </member>
        <member name="F:Fintek.Common.BaseExceptionTypes.Exception">
            <summary>
            Hata
            </summary>
        </member>
        <member name="F:Fintek.Common.BaseExceptionTypes.CriticalException">
            <summary>
            Kritik Hata
            </summary>
        </member>
        <member name="F:Fintek.Common.BaseExceptionTypes.Information">
            <summary>
            Bilgi
            </summary>
        </member>
        <member name="F:Fintek.Common.BaseExceptionTypes.UnknownException">
            <summary>
            Bilinmeyen Hata
            </summary>
        </member>
        <member name="T:Fintek.Common.HeaderTypes">
            <summary>
            Define the header types that can be used by ByteArray.AddHeader
            and ByteArray.RemoveHeader.
            </summary>
            <remarks>
            These header types usually used for TCP/IP transmission. Default header size is
            2 bytes. System.Net.IPAddress.HostToNetworkOrder and System.Net.IPAddress.NetworkToHostOrder
            static methods are used for changing from big-endian to little-endian and vice versa.
            </remarks>
        </member>
        <member name="F:Fintek.Common.HeaderTypes.ShortHeader">
            <summary>
            Specifies a short header 2 bytes in length. Can be stored in System.Int16.
            </summary>
        </member>
        <member name="F:Fintek.Common.HeaderTypes.IntHeader">
            <summary>
            Specifies a short header 4 bytes in length. Can be stored in System.Int32.
            </summary>
        </member>
        <member name="F:Fintek.Common.HeaderTypes.LongHeader">
            <summary>
            Specifies a short header 8 bytes in length. Can be stored in System.Int64.
            </summary>
        </member>
        <member name="T:Fintek.Common.ByteArray">
            <summary>
            Supplies several static methods on byte arrays (byte[]).
            </summary>
            <author>Süleyman ÖZ</author>
            <createdon>09.09.2004</createdon>
            <lastupdate>13.10.2004</lastupdate>
        </member>
        <member name="M:Fintek.Common.ByteArray.Pack(System.String)">
            <summary>
            Packs a string into binary byte array
            </summary>
            <exception cref="T:System.FormatException">
            When non-hex digits in hexData
            </exception>
            <exception cref="T:System.ArgumentException">
            When hexData has an odd length
            </exception>
            <param name="hexData">string to convert to byte array</param>
            <returns>byte array, in the same left-to-right order as the hexString</returns>
        </member>
        <member name="M:Fintek.Common.ByteArray.Pack(System.String,System.Int32@)">
            <summary>
            New definition of Pack.
            </summary>
            <param name="hexData">string to convert to byte array</param>
            <param name="discarded">number of characters in string ignored</param>
            <returns>byte array, in the same left-to-right order as the hexString</returns>
        </member>
        <member name="M:Fintek.Common.ByteArray.UnPack(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Unpacks a byte array, within specified positions.
            </summary>
            <param name="binaryData">Data as byte array.</param>
            <param name="offset">Starting index of the unpack operation.</param>
            <param name="length">Count of the bytes to be unpacked.</param>
        </member>
        <member name="M:Fintek.Common.ByteArray.UnPack(System.Byte[])">
            <summary>
            New Definition of UnPack
            </summary>
            <param name="binaryData">Input Packed Byte Array.</param>
            <returns>returns unpacked string.</returns>
        </member>
        <member name="M:Fintek.Common.ByteArray.UnPack(System.Byte[],System.IFormatProvider)">
            <summary>
            Unpack with segmentation
            </summary>
            <param name="binaryData">Input Packed Byte Array.</param>
            <param name="format">Output format provider</param>
            <returns>returns unpacked string, segmented with specified char</returns>
        </member>
        <member name="M:Fintek.Common.ByteArray.Pad(System.Byte[],System.Int32,System.Byte)">
            <summary>
            Pads an array with specified pad byte, to a modulus of the length.
            </summary>
            <param name="source">Array to be padded.</param>
            <param name="length">Padding modulus value.</param>
            <param name="pad">Pad byte.</param>
            <returns>Result array with the padding</returns>
        </member>
        <member name="M:Fintek.Common.ByteArray.XOR(System.Byte[],System.Byte[])">
            <summary>
            Performs XOR operation on the two same length byte array.
            </summary>
            <param name="array1">First parameter for XOR operation.</param>
            <param name="array2">Second parameter for XOR operation.</param>
            <returns>Result of XOR operation.</returns>
        </member>
        <member name="M:Fintek.Common.ByteArray.AddHeader(System.Byte[],Fintek.Common.HeaderTypes)">
            <summary>
            Adds a header (generally IP header) to a byte array.
            </summary>
            <param name="array">Specifies the byte array that header will be added.</param>
            <param name="headerType">
            Specifies the header type (2,4, or 8 bytes) by HeaderTypes enumeration.
            </param>
            <returns>Byte array with header</returns>
            <exception cref="T:System.ArgumentException">
            array is null or array with zero length passed as argument.
            </exception>
        </member>
        <member name="M:Fintek.Common.ByteArray.AddHeader(System.Byte[])">
            <summary>
            Adds a header (generally IP header) to a byte array with default length of 2 bytes.
            </summary>
            <param name="array">Specifies the byte array that header will be added.</param>
            <returns>Byte array with header</returns>
            <exception cref="T:System.ArgumentException">
            array is null or array with zero length passed as argument.
            </exception>
        </member>
        <member name="M:Fintek.Common.ByteArray.RemoveHeader(System.Byte[],Fintek.Common.HeaderTypes)">
            <summary>
            Removes the header from a byte array.
            </summary>
            <param name="array">Byte array with header.</param>
            <param name="headerType">
            Type of the header that is one of HeaderTypes enumeration.
            </param>
            <returns>Byte array without header</returns>
            <exception cref="T:System.ArgumentException">
            array length smaller than header length.
            </exception>
        </member>
        <member name="M:Fintek.Common.ByteArray.RemoveHeader(System.Byte[])">
            <summary>
            Removes the header from a byte array with default length 2-bytes.
            </summary>
            <param name="array">Byte array with header.</param>
            <returns>Byte array without header</returns>
            <exception cref="T:System.ArgumentException">
            array length smaller than header length.
            </exception>
        </member>
        <member name="M:Fintek.Common.ByteArray.LengthInHeader(System.Byte[],Fintek.Common.HeaderTypes)">
            <summary>
            Calculates the length of byte array which is encoded in the header.
            </summary>
            <param name="array">Byte array with header.</param>
            <param name="headerType">
            Type of the header that is one of HeaderTypes enumeration.
            </param>
            <returns>Length of the byte array that is specified in header.</returns>
            <exception cref="T:System.ArgumentNullException">
            Array is null or array length smaller than specified header length
            </exception>
        </member>
        <member name="M:Fintek.Common.ByteArray.LengthInHeader(System.Byte[])">
            <summary>
            Calculate the length of a byte array that is encoded in the
            array's header which have a default header length of 2-bytes.
            </summary>
            <param name="array">Byte array with header</param>
            <returns>Length of the byte array that is specified in header.</returns>
            <exception cref="T:System.ArgumentNullException">
            array is null or array length smaller than 2-bytes
            </exception>
        </member>
        <member name="T:Fintek.Common.CacheException">
            <summary>
            AppFabric Cache Exception
            </summary>
        </member>
        <member name="M:Fintek.Common.CacheException.#ctor(System.String,System.Int32,System.Int32,System.String,System.Exception)">
            <summary>
            CacheException Constructor
            </summary>
            <param name="errorMessage"></param>
            <param name="?"></param>
        </member>
        <member name="M:Fintek.Common.CacheException.#ctor(System.Exception)">
            <summary>
            CacheException Constructor
            </summary>
            <param name="errorMessage"></param>
            <param name="?"></param>
        </member>
        <member name="P:Fintek.Common.CacheException.StackTrace">
            <summary>
            StackTrace
            </summary>
        </member>
        <member name="P:Fintek.Common.CacheException.Description">
            <summary>
            Description
            </summary>
        </member>
        <member name="P:Fintek.Common.CacheException.Message">
            <summary>
            Error Message
            </summary>
        </member>
        <member name="P:Fintek.Common.CacheException.ErrorCode">
            <summary>
            Error Code
            </summary>
        </member>
        <member name="P:Fintek.Common.CacheException.SubStatus">
            <summary>
            Error subStatus
            </summary>
        </member>
        <member name="P:Fintek.Common.CacheException.InnerException">
            <summary>
            Inner Exception
            </summary>
        </member>
        <member name="T:Fintek.Common.BaseCustomContextData">
            <summary>
            Remoting yaparken thread üzerinde LogicalcallContext'i server tarafına geçirmek için
            kullanılan class
            </summary>
        </member>
        <member name="F:Fintek.Common.BaseCustomContextData.m_ChannelId">
            <summary>
            Kanal kodu.
            </summary>
        </member>
        <member name="F:Fintek.Common.BaseCustomContextData.m_BankID">
            <summary>
            Banka kodu.
            </summary>
        </member>
        <member name="F:Fintek.Common.BaseCustomContextData.m_BranchType">
            <summary>
            Şube tipi.
            </summary>
        </member>
        <member name="F:Fintek.Common.BaseCustomContextData.m_BranchId">
            <summary>
            Şube kodu.
            </summary>
        </member>
        <member name="F:Fintek.Common.BaseCustomContextData.m_UserName">
            <summary>
            Kullanıcı kodu.
            </summary>
        </member>
        <member name="F:Fintek.Common.BaseCustomContextData.m_ScreenId">
            <summary>
            Ekran kodu.
            </summary>
        </member>
        <member name="F:Fintek.Common.BaseCustomContextData.m_ScreenVersion">
            <summary>
            Ekran versiyonu.
            </summary>
        </member>
        <member name="F:Fintek.Common.BaseCustomContextData.m_ComputerName">
            <summary>
            Bilgisayar Adı
            </summary>
        </member>
        <member name="F:Fintek.Common.BaseCustomContextData.m_BranchCountryId">
            <summary>
            Şube ülke kodu
            </summary>
        </member>
        <member name="F:Fintek.Common.BaseCustomContextData.m_CurrentDate">
            <summary>
            İş günü değeri.
            </summary>
        </member>
        <member name="F:Fintek.Common.BaseCustomContextData.m_CallId">
            <summary>
            Telefon Bankacılığı Çağrı Numarası
            </summary>
        </member>
        <member name="F:Fintek.Common.BaseCustomContextData.m_ADUserName">
            <summary>
            Kullanıcının Active Directory kullanıcı adı
            </summary>
        </member>
        <member name="F:Fintek.Common.BaseCustomContextData.m_SessionInfo">
            <summary>
            session bilgilerini döner
            </summary>
        </member>
        <member name="F:Fintek.Common.BaseCustomContextData.m_ScreenOpeningMode">
            <summary>
            UI2 ekranlarının hangi modda açıldığı bilgisini döner.
            </summary>
        </member>
        <member name="F:Fintek.Common.BaseCustomContextData.m_CommandInfo">
            <summary>
            UI2 commandlerinden hangisinin çalıştığı bilgisini döner.
            </summary>
        </member>
        <member name="M:Fintek.Common.BaseCustomContextData.#ctor(System.Int32,System.Int32,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            Yeni bir CustomContextData yaratmaya yarar.
            </summary>
            <param name="channelId">Kanal kodu.</param>
            <param name="bankID">Banka tipi.</param>
            <param name="branchType">Şube kodu.</param>
            <param name="branchId">Şube kodu.</param>
            <param name="userName">Kullanıcı kodu.</param>
            <param name="screenId">Ekran kodu.</param>
            <param name="computerName">Bilgisayar Adı.</param>
            <param name="branchCountryId">Şube ülke kodu</param>
            <param name="currentDate">İş günü değeri.</param>
            <param name="callId">Müşteri Numarası</param>
        </member>
        <member name="M:Fintek.Common.BaseCustomContextData.#ctor(System.Int32,System.Int32,System.String,System.Int32,System.String,System.String,System.String,System.String)">
            <summary>
            Yeni bir CustomContextData yaratmaya yarar.
            </summary>
            <param name="channelId">Kanal kodu.</param>
            <param name="bankID">Banka tipi.</param>
            <param name="branchType">Şube kodu.</param>
            <param name="branchId">Şube kodu.</param>
            <param name="userName">Kullanıcı kodu.</param>
            <param name="screenId">Ekran kodu.</param>
            <param name="computerName">Bilgisayar Adı.</param>
            <param name="branchCountryId">Şube ülke kodu</param>
        </member>
        <member name="M:Fintek.Common.BaseCustomContextData.#ctor(System.Int32,System.Int32,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Yeni bir CustomContextData üretilir.
            </summary>
            <param name="channelId">Kanal kodu.</param>
            <param name="bankID">Banka tipi.</param>
            <param name="branchType">Şube kodu.</param>
            <param name="branchId">Şube kodu.</param>
            <param name="userName">Kullanıcı kodu.</param>
            <param name="screenId">Ekran kodu.</param>
            <param name="computerName">Bilgisayar Adı.</param>
            <param name="branchCountryId">Şube ülke kodu</param>
            <param name="activeDirectoryUserName">Active Directory kullanıcı adı</param>
        </member>
        <member name="M:Fintek.Common.BaseCustomContextData.#ctor(System.Int32,System.Int32,System.String,System.Int32,System.String,System.String,System.String)">
            <summary>
            Yeni bir CustomContextData yaratmaya yarar.
            </summary>
            <param name="channelId">Kanal kodu.</param>
            <param name="bankID">Banka tipi.</param>
            <param name="branchType">Şube kodu.</param>
            <param name="branchId">Şube kodu.</param>
            <param name="userName">Kullanıcı kodu.</param>
            <param name="screenId">Ekran kodu.</param>
            <param name="computerName">Bilgisayar Adı.</param>
        </member>
        <member name="M:Fintek.Common.BaseCustomContextData.#ctor(System.Int32,System.Int32,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Boolean,System.String)">
            <summary>
            Yeni bir CustomContextData yaratmaya yarar.
            </summary>
            <param name="channelId">Kanal kodu.</param>
            <param name="bankID">Banka tipi.</param>
            <param name="branchType">Şube kodu.</param>
            <param name="branchId">Şube kodu.</param>
            <param name="userName">Kullanıcı kodu.</param>
            <param name="screenId">Ekran kodu.</param>
            <param name="computerName">Bilgisayar Adı.</param>
            <param name="branchCountryId">Şube ülke kodu</param>
            <param name="currentDate">İş günü değeri.</param>
            <param name="callId">Müşteri Numarası</param>
            <param name="isScreenVersion">Ekran versiyonu kullanılacak mı?.</param>
            <param name="screenVersion">Ekran versiyonu.</param>
        </member>
        <member name="M:Fintek.Common.BaseCustomContextData.#ctor(System.Int32,System.Int32,System.String,System.Int32,System.String,System.String,System.String,System.String,System.Boolean,System.String)">
            <summary>
            Yeni bir CustomContextData yaratmaya yarar.
            </summary>
            <param name="channelId">Kanal kodu.</param>
            <param name="bankID">Banka tipi.</param>
            <param name="branchType">Şube kodu.</param>
            <param name="branchId">Şube kodu.</param>
            <param name="userName">Kullanıcı kodu.</param>
            <param name="screenId">Ekran kodu.</param>
            <param name="computerName">Bilgisayar Adı.</param>
            <param name="branchCountryId">Şube ülke kodu</param>
            <param name="isScreenVersion">Ekran versiyonu kullanılacak mı?.</param>
            <param name="screenVersion">Ekran versiyonu.</param>
        </member>
        <member name="M:Fintek.Common.BaseCustomContextData.#ctor(System.Int32,System.Int32,System.String,System.Int32,System.String,System.String,System.String,System.String,System.Boolean,System.String,System.String)">
            <summary>
            Yeni bir CustomContextData üretir
            </summary>
            <param name="channelId">Kanal kodu.</param>
            <param name="bankID">Banka tipi.</param>
            <param name="branchType">Şube kodu.</param>
            <param name="branchId">Şube kodu.</param>
            <param name="userName">Kullanıcı kodu.</param>
            <param name="screenId">Ekran kodu.</param>
            <param name="computerName">Bilgisayar Adı.</param>
            <param name="branchCountryId">Şube ülke kodu</param>
            <param name="isScreenVersion">Ekran versiyonu kullanılacak mı?.</param>
            <param name="screenVersion">Ekran versiyonu.</param>
            <param name="activeDirectoryUserName">Active Directory username</param>
        </member>
        <member name="M:Fintek.Common.BaseCustomContextData.#ctor(System.Int32,System.Int32,System.String,System.Int32,System.String,System.String,System.String,System.Boolean,System.String)">
            <summary>
            Yeni bir CustomContextData yaratmaya yarar.
            </summary>
            <param name="channelId">Kanal kodu.</param>
            <param name="bankID">Banka tipi.</param>
            <param name="branchType">Şube kodu.</param>
            <param name="branchId">Şube kodu.</param>
            <param name="userName">Kullanıcı kodu.</param>
            <param name="screenId">Ekran kodu.</param>
            <param name="computerName">Bilgisayar Adı.</param>
            <param name="isScreenVersion">Ekran versiyonu kullanılacak mı?.</param>
            <param name="screenVersion">Ekran versiyonu.</param>
        </member>
        <member name="M:Fintek.Common.BaseCustomContextData.#ctor(System.Int32,System.Int32,System.String,System.Int32,System.String,System.String,System.String,System.String,System.Boolean,System.String,System.String,Fintek.Common.ISessionInfo)">
            <summary>
            session bilgilerini de içeren contextdata construct eder
            </summary>
            <param name="channelId"></param>
            <param name="bankID"></param>
            <param name="branchType"></param>
            <param name="branchId"></param>
            <param name="userName"></param>
            <param name="screenId"></param>
            <param name="computerName"></param>
            <param name="branchCountryId"></param>
            <param name="isScreenVersion"></param>
            <param name="screenVersion"></param>
            <param name="activeDirectoryUserName"></param>
            <param name="sessionInfo"></param>
        </member>
        <member name="M:Fintek.Common.BaseCustomContextData.#ctor(System.Int32,System.Int32,System.String,System.Int32,System.String,System.String,System.String,System.String,System.Boolean,System.String,System.String,Fintek.Common.ISessionInfo,Fintek.Common.ICommandInfo,System.String)">
            <summary>
            UI1'de kullanılmaz. UI2 hata almaması için eklendi.
            </summary>
            <param name="channelId"></param>
            <param name="bankID"></param>
            <param name="branchType"></param>
            <param name="branchId"></param>
            <param name="userName"></param>
            <param name="screenId"></param>
            <param name="computerName"></param>
            <param name="branchCountryId"></param>
            <param name="isScreenVersion"></param>
            <param name="screenVersion"></param>
            <param name="activeDirectoryUserName"></param>
            <param name="sessionInfo"></param>
            <param name="commandInfo"></param>
            <param name="screenOpeningMode"></param>
        </member>
        <member name="M:Fintek.Common.BaseCustomContextData.initializeCustomContextData(System.Int32,System.Int32,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,Fintek.Common.ISessionInfo,Fintek.Common.ICommandInfo,System.String)">
            <summary>
            
            </summary>
            <param name="channelId"></param>
            <param name="bankID"></param>
            <param name="branchType"></param>
            <param name="branchId"></param>
            <param name="userName"></param>
            <param name="screenId"></param>
            <param name="screenVersion">Ekran versiyonu.</param>
            <param name="computerName"></param>
            <param name="branchCountryId"></param>
            <param name="currentDate"></param>
            <param name="callId"></param>
        </member>
        <member name="P:Fintek.Common.BaseCustomContextData.ChannelId">
            <summary>
            Kanal kodu.
            </summary>
        </member>
        <member name="P:Fintek.Common.BaseCustomContextData.BankId">
            <summary>
            Banka kodu.
            </summary>
        </member>
        <member name="P:Fintek.Common.BaseCustomContextData.BranchType">
            <summary>
            Şube tipi.
            </summary>
        </member>
        <member name="P:Fintek.Common.BaseCustomContextData.BranchId">
            <summary>
            Şube kodu.
            </summary>
        </member>
        <member name="P:Fintek.Common.BaseCustomContextData.UserName">
            <summary>
            Kullanıcı adı.
            </summary>
        </member>
        <member name="P:Fintek.Common.BaseCustomContextData.ScreenId">
            <summary>
            Ekran kodu.
            </summary>
        </member>
        <member name="P:Fintek.Common.BaseCustomContextData.ScreenVersion">
            <summary>
            Ekran versiyonu.
            </summary>
        </member>
        <member name="P:Fintek.Common.BaseCustomContextData.ComputerName">
            <summary>
            Ekran kodu.
            </summary>
        </member>
        <member name="P:Fintek.Common.BaseCustomContextData.BranchCountryId">
            <summary>
            Şube ülke kodu
            </summary>
        </member>
        <member name="P:Fintek.Common.BaseCustomContextData.CurrentDate">
            <summary>
            İş günü değeri.
            </summary>
        </member>
        <member name="P:Fintek.Common.BaseCustomContextData.CallId">
            <summary>
            Telefon Bankacılığı Çağrı Numarası
            </summary>
        </member>
        <member name="P:Fintek.Common.BaseCustomContextData.ADUserName">
            <summary>
            Active Directory kullanıcı adı
            </summary>
        </member>
        <member name="P:Fintek.Common.BaseCustomContextData.SessionInfo">
            <summary>
            Session bilgilerini döner
            </summary>
        </member>
        <member name="P:Fintek.Common.BaseCustomContextData.CommandInfo">
            <summary>
            UI2 commandlerinden hangisinin çalıştığı bilgisini döner.
            </summary>
        </member>
        <member name="P:Fintek.Common.BaseCustomContextData.ScreenOpeningMode">
            <summary>
            UI2 ekranı açılış modu bilgisini döner.
            </summary>
        </member>
        <member name="T:Fintek.Common.CustomWebContextData">
            <summary>
            Web uygulamalarının kullandığı context sınıfı.
            </summary>
        </member>
        <member name="M:Fintek.Common.CustomWebContextData.#ctor(System.Int32,System.Int32,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            Yeni bir CustomContextData yaratmaya yarar.
            </summary>
            <param name="channelId">Kanal kodu.</param>
            <param name="bankID">Banka tipi.</param>
            <param name="branchType">Şube kodu.</param>
            <param name="branchId">Şube kodu.</param>
            <param name="userName">Kullanıcı kodu.</param>
            <param name="screenId">Ekran kodu.</param>
            <param name="computerName">Bilgisayar Adı.</param>
            <param name="branchCountryId">Şube ülke kodu</param>
            <param name="currentDate">İş günü değeri.</param>
            <param name="callId">Müşteri Numarası</param>
        </member>
        <member name="M:Fintek.Common.CustomWebContextData.#ctor(System.Int32,System.Int32,System.String,System.Int32,System.String,System.String,System.String,System.String)">
            <summary>
            Yeni bir CustomContextData yaratmaya yarar.
            </summary>
            <param name="channelId">Kanal kodu.</param>
            <param name="bankID">Banka tipi.</param>
            <param name="branchType">Şube kodu.</param>
            <param name="branchId">Şube kodu.</param>
            <param name="userName">Kullanıcı kodu.</param>
            <param name="screenId">Ekran kodu.</param>
            <param name="computerName">Bilgisayar Adı.</param>
            <param name="branchCountryId">Şube ülke kodu</param>
        </member>
        <member name="M:Fintek.Common.CustomWebContextData.#ctor(System.Int32,System.Int32,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Yeni bir CustomContextData oluşturmaya yarar.
            </summary>
            <param name="channelId">Kanal kodu.</param>
            <param name="bankID">Banka tipi.</param>
            <param name="branchType">Şube kodu.</param>
            <param name="branchId">Şube kodu.</param>
            <param name="userName">Kullanıcı kodu.</param>
            <param name="screenId">Ekran kodu.</param>
            <param name="computerName">Bilgisayar Adı.</param>
            <param name="branchCountryId">Şube ülke kodu</param>
            /// <param name="ADUserName">Active Directory kullanıcı adı</param>
        </member>
        <member name="M:Fintek.Common.CustomWebContextData.#ctor(System.Int32,System.Int32,System.String,System.Int32,System.String,System.String,System.String)">
            <summary>
            Yeni bir CustomContextData yaratmaya yarar.
            </summary>
            <param name="channelId">Kanal kodu.</param>
            <param name="bankID">Banka tipi.</param>
            <param name="branchType">Şube kodu.</param>
            <param name="branchId">Şube kodu.</param>
            <param name="userName">Kullanıcı kodu.</param>
            <param name="screenId">Ekran kodu.</param>
            <param name="computerName">Bilgisayar Adı.</param>
        </member>
        <member name="M:Fintek.Common.CustomWebContextData.#ctor(System.Int32,System.Int32,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Boolean,System.String)">
            <summary>
            Yeni bir CustomContextData yaratmaya yarar.
            </summary>
            <param name="channelId">Kanal kodu.</param>
            <param name="bankID">Banka tipi.</param>
            <param name="branchType">Şube kodu.</param>
            <param name="branchId">Şube kodu.</param>
            <param name="userName">Kullanıcı kodu.</param>
            <param name="screenId">Ekran kodu.</param>
            <param name="computerName">Bilgisayar Adı.</param>
            <param name="branchCountryId">Şube ülke kodu</param>
            <param name="currentDate">İş günü değeri.</param>
            <param name="callId">Müşteri Numarası</param>
            <param name="isScreenVersion">Ekran versiyonu kullanılacak mı?.</param>
            <param name="screenVersion">Ekran versiyonu.</param>
        </member>
        <member name="M:Fintek.Common.CustomWebContextData.#ctor(System.Int32,System.Int32,System.String,System.Int32,System.String,System.String,System.String,System.String,System.Boolean,System.String)">
            <summary>
            Yeni bir CustomContextData yaratmaya yarar.
            </summary>
            <param name="channelId">Kanal kodu.</param>
            <param name="bankID">Banka tipi.</param>
            <param name="branchType">Şube kodu.</param>
            <param name="branchId">Şube kodu.</param>
            <param name="userName">Kullanıcı kodu.</param>
            <param name="screenId">Ekran kodu.</param>
            <param name="computerName">Bilgisayar Adı.</param>
            <param name="branchCountryId">Şube ülke kodu</param>
            <param name="isScreenVersion">Ekran versiyonu kullanılacak mı?.</param>
            <param name="screenVersion">Ekran versiyonu.</param>
        </member>
        <member name="M:Fintek.Common.CustomWebContextData.#ctor(System.Int32,System.Int32,System.String,System.Int32,System.String,System.String,System.String,System.Boolean,System.String)">
            <summary>
            Yeni bir CustomContextData yaratmaya yarar.
            </summary>
            <param name="channelId">Kanal kodu.</param>
            <param name="bankID">Banka tipi.</param>
            <param name="branchType">Şube kodu.</param>
            <param name="branchId">Şube kodu.</param>
            <param name="userName">Kullanıcı kodu.</param>
            <param name="screenId">Ekran kodu.</param>
            <param name="computerName">Bilgisayar Adı.</param>
            <param name="isScreenVersion">Ekran versiyonu kullanılacak mı?.</param>
            <param name="screenVersion">Ekran versiyonu.</param>
        </member>
        <member name="T:Fintek.Common.CustomContextData">
            <summary>
            Channel üzerinden aktarılan ve tüm işlemler için ortak bilgilerin taşınmasını sağlar.
            </summary>
        </member>
        <member name="M:Fintek.Common.CustomContextData.#ctor(System.Int32,System.Int32,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            Yeni bir CustomContextData yaratmaya yarar.
            </summary>
            <param name="channelId">Kanal kodu.</param>
            <param name="bankID">Banka tipi.</param>
            <param name="branchType">Şube kodu.</param>
            <param name="branchId">Şube kodu.</param>
            <param name="userName">Kullanıcı kodu.</param>
            <param name="screenId">Ekran kodu.</param>
            <param name="computerName">Bilgisayar Adı.</param>
            <param name="branchCountryId">Şube ülke kodu</param>
            <param name="currentDate">İş günü değeri.</param>
            <param name="callId">Müşteri Numarası</param>
        </member>
        <member name="M:Fintek.Common.CustomContextData.#ctor(System.Int32,System.Int32,System.String,System.Int32,System.String,System.String,System.String,System.String)">
            <summary>
            Yeni bir CustomContextData yaratmaya yarar.
            </summary>
            <param name="channelId">Kanal kodu.</param>
            <param name="bankID">Banka tipi.</param>
            <param name="branchType">Şube kodu.</param>
            <param name="branchId">Şube kodu.</param>
            <param name="userName">Kullanıcı kodu.</param>
            <param name="screenId">Ekran kodu.</param>
            <param name="computerName">Bilgisayar Adı.</param>
            <param name="branchCountryId">Şube ülke kodu</param>
        </member>
        <member name="M:Fintek.Common.CustomContextData.#ctor(System.Int32,System.Int32,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Yeni bir CustomContextData oluşturmaya yarar.
            </summary>
            <param name="channelId">Kanal kodu.</param>
            <param name="bankID">Banka tipi.</param>
            <param name="branchType">Şube kodu.</param>
            <param name="branchId">Şube kodu.</param>
            <param name="userName">Kullanıcı kodu.</param>
            <param name="screenId">Ekran kodu.</param>
            <param name="computerName">Bilgisayar Adı.</param>
            <param name="branchCountryId">Şube ülke kodu</param>
            <param name="activeDirectoryUserName">Active Directory kullanıcı adı</param>
        </member>
        <member name="M:Fintek.Common.CustomContextData.#ctor(System.Int32,System.Int32,System.String,System.Int32,System.String,System.String,System.String)">
            <summary>
            Yeni bir CustomContextData yaratmaya yarar.
            </summary>
            <param name="channelId">Kanal kodu.</param>
            <param name="bankID">Banka tipi.</param>
            <param name="branchType">Şube kodu.</param>
            <param name="branchId">Şube kodu.</param>
            <param name="userName">Kullanıcı kodu.</param>
            <param name="screenId">Ekran kodu.</param>
            <param name="computerName">Bilgisayar Adı.</param>
        </member>
        <member name="M:Fintek.Common.CustomContextData.#ctor(System.Int32,System.Int32,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Boolean,System.String)">
            <summary>
            Yeni bir CustomContextData yaratmaya yarar.
            </summary>
            <param name="channelId">Kanal kodu.</param>
            <param name="bankID">Banka tipi.</param>
            <param name="branchType">Şube kodu.</param>
            <param name="branchId">Şube kodu.</param>
            <param name="userName">Kullanıcı kodu.</param>
            <param name="screenId">Ekran kodu.</param>
            <param name="computerName">Bilgisayar Adı.</param>
            <param name="branchCountryId">Şube ülke kodu</param>
            <param name="currentDate">İş günü değeri.</param>
            <param name="callId">Müşteri Numarası</param>
            <param name="isScreenVersion">Ekran versiyonu kullanılacak mı?.</param>
            <param name="screenVersion">Ekran versiyonu.</param>
        </member>
        <member name="M:Fintek.Common.CustomContextData.#ctor(System.Int32,System.Int32,System.String,System.Int32,System.String,System.String,System.String,System.String,System.Boolean,System.String)">
            <summary>
            Yeni bir CustomContextData yaratmaya yarar.
            </summary>
            <param name="channelId">Kanal kodu.</param>
            <param name="bankID">Banka tipi.</param>
            <param name="branchType">Şube kodu.</param>
            <param name="branchId">Şube kodu.</param>
            <param name="userName">Kullanıcı kodu.</param>
            <param name="screenId">Ekran kodu.</param>
            <param name="computerName">Bilgisayar Adı.</param>
            <param name="branchCountryId">Şube ülke kodu</param>
            <param name="isScreenVersion">Ekran versiyonu kullanılacak mı?.</param>
            <param name="screenVersion">Ekran versiyonu.</param>
        </member>
        <member name="M:Fintek.Common.CustomContextData.#ctor(System.Int32,System.Int32,System.String,System.Int32,System.String,System.String,System.String,System.String,System.Boolean,System.String,System.String)">
            <summary>
            Yeni bir CustomContextData üretir
            </summary>
            <param name="channelId">Kanal kodu.</param>
            <param name="bankID">Banka tipi.</param>
            <param name="branchType">Şube kodu.</param>
            <param name="branchId">Şube kodu.</param>
            <param name="userName">Kullanıcı kodu.</param>
            <param name="screenId">Ekran kodu.</param>
            <param name="computerName">Bilgisayar Adı.</param>
            <param name="branchCountryId">Şube ülke kodu</param>
            <param name="isScreenVersion">Ekran versiyonu kullanılacak mı?.</param>
            <param name="screenVersion">Ekran versiyonu.</param>
            <param name="activeDirectoryUserName">Active Directory username</param>
        </member>
        <member name="M:Fintek.Common.CustomContextData.#ctor(System.Int32,System.Int32,System.String,System.Int32,System.String,System.String,System.String,System.Boolean,System.String)">
            <summary>
            Yeni bir CustomContextData yaratmaya yarar.
            </summary>
            <param name="channelId">Kanal kodu.</param>
            <param name="bankID">Banka tipi.</param>
            <param name="branchType">Şube kodu.</param>
            <param name="branchId">Şube kodu.</param>
            <param name="userName">Kullanıcı kodu.</param>
            <param name="screenId">Ekran kodu.</param>
            <param name="computerName">Bilgisayar Adı.</param>
            <param name="isScreenVersion">Ekran versiyonu kullanılacak mı?.</param>
            <param name="screenVersion">Ekran versiyonu.</param>
        </member>
        <member name="M:Fintek.Common.CustomContextData.#ctor(System.Int32,System.Int32,System.String,System.Int32,System.String,System.String,System.String,System.String,System.Boolean,System.String,System.String,Fintek.Common.ISessionInfo,Fintek.Common.ICommandInfo,System.String)">
            <summary>
            
            </summary>
            <param name="channelId"></param>
            <param name="bankID"></param>
            <param name="branchType"></param>
            <param name="branchId"></param>
            <param name="userName"></param>
            <param name="screenId"></param>
            <param name="computerName"></param>
            <param name="branchCountryId"></param>
            <param name="isScreenVersion"></param>
            <param name="screenVersion"></param>
            <param name="activeDirectoryUserName"></param>
            <param name="sessionInfo"></param>
            <param name="commandInfo"></param>
            <param name="screenOpeningMode"></param>
        </member>
        <member name="M:Fintek.Common.CustomContextData.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Custom channel tarafından kullanılır.
            </summary>
            <param name="info">SerializationInfo</param>
            <param name="context">StreamingContext</param>
        </member>
        <member name="M:Fintek.Common.CustomContextData.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Custom channel tarafından kullanılır.
            </summary>
            <param name="info">SerializationInfo</param>
            <param name="context">StreamingContext</param>
        </member>
        <member name="T:Fintek.Common.CallerInfoBag">
            <summary>
            
            </summary>
        </member>
        <member name="F:Fintek.Common.CallerInfoBag.m_LastSetCustomContextData">
            <summary>
            
            </summary>
        </member>
        <member name="M:Fintek.Common.CallerInfoBag.RefreshCallContext">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fintek.Common.CallerInfoBag.LastSetCustomContextData">
            <summary>
            
            </summary>
        </member>
        <member name="T:Fintek.Common.CallerInfo">
            <summary>
            Kullanıcı, ekran kodu, bankası, şubesi gibi bilgilerin içerildiği class.
            </summary>
        </member>
        <member name="M:Fintek.Common.CallerInfo.SetContextTypeWeb">
            <summary>
            
            </summary>
        </member>
        <member name="M:Fintek.Common.CallerInfo.GetChannelName">
            <summary>
            Mevcut kanal kodunun adını döndürür.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fintek.Common.CallerInfo.GetChannelName(Fintek.Common.Channels)">
            <summary>
            Verilen kanal kodunun adını döndürür.
            </summary>
            <param name="channel">Kanal kodu.</param>
            <returns>Kanal adı.</returns>
        </member>
        <member name="M:Fintek.Common.CallerInfo.GetChannelName(System.Int32)">
            <summary>
            Verilen kanal kodunun adını döndürür.
            </summary>
            <param name="channel">Kanal kodu.</param>
            <returns>Kanal adı.</returns>
        </member>
        <member name="P:Fintek.Common.CallerInfo.Available">
            <summary>
            CallerInfo sınıfına ait propertylerin o anda erişilebilir olup olmadığını verir.
            </summary>
        </member>
        <member name="P:Fintek.Common.CallerInfo.UserName">
            <summary>
            Kullanıcı ismini döndürür.
            </summary>
        </member>
        <member name="P:Fintek.Common.CallerInfo.SessionInfo">
            <summary>
            Aktif session bilgisini döner.
            </summary>
        </member>
        <member name="P:Fintek.Common.CallerInfo.CommandInfo">
            <summary>
            UI2 commandlerinden hangisinin çalıştığı bilgisini döner.
            </summary>
        </member>
        <member name="P:Fintek.Common.CallerInfo.ScreenOpeningMode">
            <summary>
            UI2 ekranının açılış modunu döner.
            </summary>
        </member>
        <member name="P:Fintek.Common.CallerInfo.ScreenId">
            <summary>
            Ekran kodu.
            </summary>
        </member>
        <member name="P:Fintek.Common.CallerInfo.ScreenVersion">
            <summary>
            Ekran versiyonu.
            </summary>
        </member>
        <member name="P:Fintek.Common.CallerInfo.BranchType">
            <summary>
            Şube tipi.
            </summary>
        </member>
        <member name="P:Fintek.Common.CallerInfo.BranchId">
            <summary>
            Şube kodu.
            </summary>
        </member>
        <member name="P:Fintek.Common.CallerInfo.BankId">
            <summary>
            Banka kodu.
            </summary>
        </member>
        <member name="P:Fintek.Common.CallerInfo.ChannelId">
            <summary>
            Kanal kodu.
            </summary>
        </member>
        <member name="P:Fintek.Common.CallerInfo.Channel">
            <summary>
            Kanal kodu.
            </summary>
        </member>
        <member name="P:Fintek.Common.CallerInfo.ComputerName">
            <summary>
            Bilgisayar adı  
            </summary>
        </member>
        <member name="P:Fintek.Common.CallerInfo.BranchCountryId">
            <summary>
            Şube ülke kodu.
            </summary>
        </member>
        <member name="P:Fintek.Common.CallerInfo.CurrentDate">
            <summary>
            İş günü değeri.
            </summary>
        </member>
        <member name="P:Fintek.Common.CallerInfo.CallId">
            <summary>
            Telefon Bankacılığı Çağrı Numarası
            </summary>
        </member>
        <member name="P:Fintek.Common.CallerInfo.ADUserName">
            <summary>
            Active Directory kullanıcı adı.
            </summary>
        </member>
        <member name="T:Fintek.Common.Net.ClientSocket">
            <summary>
            TCP/IP client socket connection class. Connects to socket servers.
            Supports transmissions with/without header. Mostly uses asynchronous communication method.
            </summary>
        </member>
        <member name="M:Fintek.Common.Net.ClientSocket.#ctor">
            <summary>
            Creates an instance of ClientSocket class.
            </summary>
        </member>
        <member name="M:Fintek.Common.Net.ClientSocket.ConnectTo(System.String,System.Int32)">
            <summary>
            Establishes a connection to a remote host.
            </summary>
            <param name="serverIP">IP address of remote host in dotted notation.</param>
            <param name="port">Port that remote host accepting connections.</param>
        </member>
        <member name="M:Fintek.Common.Net.ClientSocket.ConnectTo(System.String,System.Int32,System.Boolean)">
            <summary>
            Establishes a connection to a remote host.
            </summary>
            <param name="serverIP">IP address of remote host in dotted notation.</param>
            <param name="port">Port that remote host accepting connections.</param>
            <param name="synchronized">Specifies that connection will be performed in synchronous method or not.</param>
        </member>
        <member name="M:Fintek.Common.Net.ClientSocket.ConnectTo(System.Int64,System.Int32)">
            <summary>
            Establishes a connection to a remote host.
            </summary>
            <param name="serverIP">IP address of remote host in long format.</param>
            <param name="port">Port that remote host accepting connections.</param>
        </member>
        <member name="M:Fintek.Common.Net.ClientSocket.ConnectTo(System.Int64,System.Int32,System.Boolean)">
            <summary>
            Establishes a connection to a remote host.
            </summary>
            <param name="serverIP">IP address of remote host in long format.</param>
            <param name="port">Port that remote host accepting connections.</param>
            <param name="synchronized">Specifies that connection will be performed in synchronous method or not.</param>
        </member>
        <member name="M:Fintek.Common.Net.ClientSocket.ConnectTo(System.Net.IPAddress,System.Int32)">
            <summary>
            Establishes a connection to a remote host.
            </summary>
            <param name="serverIP">IPAddress object that identifies the remote host.</param>
            <param name="port">Port that remote host accepting connections.</param>
        </member>
        <member name="M:Fintek.Common.Net.ClientSocket.ConnectTo(System.Net.IPAddress,System.Int32,System.Boolean)">
            <summary>
            Establishes a connection to a remote host.
            </summary>
            <param name="serverIP">IPAddress object that identifies the remote host.</param>
            <param name="port">Port that remote host accepting connections.</param>
            <param name="synchronized">Specifies that connection will be performed in synchronous method or not.</param>
        </member>
        <member name="M:Fintek.Common.Net.ClientSocket.ConnectTo(System.Net.IPEndPoint)">
            <summary>
            Establishes a connection to a remote host.
            </summary>
            <param name="serverEP">An EndPoint that represents the remote device.</param>
        </member>
        <member name="M:Fintek.Common.Net.ClientSocket.ConnectTo(System.Net.IPEndPoint,System.Boolean)">
            <summary>
            Establishes a connection to a remote host.
            </summary>
            <param name="serverEP">An EndPoint that represents the remote device.</param>
            <param name="synchronized">Specifies that connection will be performed in synchronous method or not.</param>
        </member>
        <member name="M:Fintek.Common.Net.ClientSocket.ConnectCallback(System.IAsyncResult)">
            <summary>
            Asynchronous connection callback.
            </summary>
            <param name="ar">Asynchronous result object.</param>
        </member>
        <member name="M:Fintek.Common.Net.ClientSocket.ReceiveCallback(System.IAsyncResult)">
            <summary>
            Asynchronous receive callback.
            </summary>
            <param name="ar">Asynchronous result object.</param>
        </member>
        <member name="M:Fintek.Common.Net.ClientSocket.SendToServer(System.Byte[])">
            <summary>
            Sends a byte array to the server, over a connection currently established.
            </summary>
            <param name="data">Data to sent.</param>
        </member>
        <member name="M:Fintek.Common.Net.ClientSocket.SendCallback(System.IAsyncResult)">
            <summary>
            Asynchronous send callback.
            </summary>
            <param name="ar">Asynchronous result object.</param>
        </member>
        <member name="M:Fintek.Common.Net.ClientSocket.CloseConnection">
            <summary>
            Closes a connection with the server.
            </summary>
        </member>
        <member name="M:Fintek.Common.Net.ClientSocket.CloseConnection(System.Int32)">
            <summary>
            Closes a connection with the server.
            </summary>
        </member>
        <member name="M:Fintek.Common.Net.ClientSocket.OnConnect(Fintek.Common.Net.ConnectEventArgs)">
            <summary>
            Raises the Connect event.
            </summary>
            <param name="cea">The ConnectEventArgs that contains the event data.</param>
        </member>
        <member name="M:Fintek.Common.Net.ClientSocket.OnDisconnect(Fintek.Common.Net.DisconnectEventArgs)">
            <summary>
            Raises the Disconnect event.
            </summary>
            <param name="dea">The DisconnectEventArgs that contains the event data.</param>
        </member>
        <member name="M:Fintek.Common.Net.ClientSocket.OnReceive(Fintek.Common.Net.ReceiveEventArgs)">
            <summary>
            Raises the Receive event.
            </summary>
            <param name="rea">The ReceiveEventArgs that contains the event data.</param>
        </member>
        <member name="M:Fintek.Common.Net.ClientSocket.OnSend(Fintek.Common.Net.SendEventArgs)">
            <summary>
            Raises the Send event.
            </summary>
            <param name="sea">The SendEventArgs that contains the event data.</param>
        </member>
        <member name="M:Fintek.Common.Net.ClientSocket.OnSocketError(Fintek.Common.Net.SocketErrorEventArgs)">
            <summary>
            Raises the SocketError event.
            </summary>
            <param name="seea">The SocketErrorEventArgs that contains the event data.</param>
        </member>
        <member name="E:Fintek.Common.Net.ClientSocket.Connect">
            <summary>
            Occurs when connection is established.
            </summary>
        </member>
        <member name="E:Fintek.Common.Net.ClientSocket.Receive">
            <summary>
            Occurs when data received from the connection.
            </summary>
        </member>
        <member name="E:Fintek.Common.Net.ClientSocket.Send">
            <summary>
            Occurs when data sent over the connection.
            </summary>
        </member>
        <member name="E:Fintek.Common.Net.ClientSocket.Disconnect">
            <summary>
            Occurs when disconnected from the remote endpoint.
            </summary>
        </member>
        <member name="E:Fintek.Common.Net.ClientSocket.SocketError">
            <summary>
            Occurs whenever an exception or unhandled situation occured on the communication.
            </summary>
        </member>
        <member name="P:Fintek.Common.Net.ClientSocket.IP">
            <summary>
            Gets IP address of the remote end point in dotted notation.
            </summary>
        </member>
        <member name="P:Fintek.Common.Net.ClientSocket.Port">
            <summary>
            Gets the remote port of the current connection. If connection is null then zero (0) returned.
            </summary>
        </member>
        <member name="P:Fintek.Common.Net.ClientSocket.IgnoreErrors">
            <summary>
            Gets or sets the flag indicating, exceptions on the current connection 
            will be ignored.
            </summary>
            <remarks>
            If IgnoreErrors is "true" then any exception catched on the connection will not be
            rethrown. Instead of rethrowing, SocketError event is raised.
            </remarks>
        </member>
        <member name="P:Fintek.Common.Net.ClientSocket.Connected">
            <summary>
            Gets the flag indication communication is established.
            </summary>
            <remarks>
            This property uses Socket.Poll method to determine whether communication is 
            established or not. Broken communications can be detected in this manner.
            </remarks>
        </member>
        <member name="P:Fintek.Common.Net.ClientSocket.AutoConnect">
            <summary>
            Gets or sets the flag indicating communication will be established automatically
            after a broken connection.
            </summary>
        </member>
        <member name="P:Fintek.Common.Net.ClientSocket.ThreadingOption">
            <summary>
            Gets or sets value indicating threading option will be user while raising events.
            </summary>
        </member>
        <member name="P:Fintek.Common.Net.ClientSocket.MaxDelay">
            <summary>
            Gets or sets value indicating the maximum packet delay in communications that 
            has read header, in milliseconds.
            </summary>
        </member>
        <member name="M:Fintek.Common.Commands.ListCommandPolicy.EncodeAutoPagingArguments(System.Boolean,System.Int32,System.Int32)">
            <summary>
            AutoPaging icin verilen parametreleri commandInfo'da gecirmek uzere string olarak encode eder.
            </summary>
            <param name="autoPagingEnabled"></param>
            <param name="pageNumber"></param>
            <param name="pageSize"></param>
            <returns></returns>
        </member>
        <member name="M:Fintek.Common.Commands.ListCommandPolicy.DecodeAutoPagingArguments(System.String[],System.Boolean@,System.Int32@,System.Int32@)">
            <summary>
            CommandInfo'nun commandExtraInfo'sundan gelen string'lerden AutoPaging ile ilgili olan varsa
            onu decode eder ve out parametrelerine atar.
            </summary>
            <param name="commandExtraInfo"></param>
            <param name="autoPagingEnabled"></param>
            <param name="pageNumber"></param>
            <param name="pageSize"></param>
        </member>
        <member name="M:Fintek.Common.Commands.ListCommandPolicy.UpdateAutoPagingArguments(System.String[],System.Boolean,System.Int32,System.Int32)">
            <summary>
            CommandExtraInfo'ya AutoPaging argumani ekler. Zaten mevcut ise onu ezer.
            </summary>
            <param name="commandExtraInfo"></param>
            <param name="autoPagingEnabled"></param>
            <param name="pageNumber"></param>
            <param name="pageSize"></param>
            <returns></returns>
        </member>
        <member name="M:Fintek.Common.Commands.ListCommandPolicy.RemoveAutoPagingArguments(System.String[])">
            <summary>
            CommandExtraInfo'da AutoPaging argumani varsa onu siler.
            </summary>
            <param name="commandExtraInfo"></param>
            <returns></returns>
        </member>
        <member name="T:Fintek.Common.Compression.DataSetCompressor">
            <summary>
            Sıkıştırma ve açma class'ı.
            </summary>
        </member>
        <member name="M:Fintek.Common.Compression.DataSetCompressor.DeCompress(System.Byte[])">
            <summary>
            Sıkıştırılmış bir byte[]'i DataSet olarak döndürmeye yarar.
            </summary>
            <param name="Data">Sıkıştırılmış byte[].</param>
            <returns>Açılmış DataSet.</returns>
        </member>
        <member name="M:Fintek.Common.Compression.DataSetCompressor.Compress(System.Data.DataSet)">
            <summary>
            Verilen bir DataSet'i sıkıştırıp byte[] olarak döndürür.
            </summary>
            <param name="Data">Sıkıştırılacak DataSet.</param>
            <returns>Sıkıştırılmış byte[].</returns>
        </member>
        <member name="T:Fintek.Common.Compression.Compressor">
            <summary>
            Provides data compression algorithms and methods.
            </summary>
        </member>
        <member name="M:Fintek.Common.Compression.Compressor.#ctor">
            <summary>
            Initializes a new instance of Compressor class.
            </summary>
        </member>
        <member name="M:Fintek.Common.Compression.Compressor.Compress(System.String,System.Byte[],System.Int32)">
            <summary>
            Compresses the given data.
            </summary>
            <param name="zipName">Name of the zip file.</param>
            <param name="buffer">Data buffer.</param>
            <param name="compressionLevel">Level of compression 1 to 9.</param>
            <returns>Compressed data.</returns>
        </member>
        <member name="M:Fintek.Common.Compression.Compressor.Decompress(System.Byte[])">
            <summary>
            Decompresses any compresses data.
            </summary>
            <param name="Data">Compressed data.</param>
            <returns>Decompressed data.</returns>
        </member>
        <member name="M:Fintek.Common.Compression.Crc32.Reset">
            <summary>
            Resets the CRC32 data checksum as if no update was ever called.
            </summary>
        </member>
        <member name="M:Fintek.Common.Compression.Crc32.Update(System.Int32)">
            <summary>
            Updates the checksum with the int bval.
            </summary>
            <param name = "bval">
            the byte is taken as the lower 8 bits of bval
            </param>
        </member>
        <member name="M:Fintek.Common.Compression.Crc32.Update(System.Byte[])">
            <summary>
            Updates the checksum with the bytes taken from the array.
            </summary>
            <param name="buffer">
            buffer an array of bytes
            </param>
        </member>
        <member name="M:Fintek.Common.Compression.Crc32.Update(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Adds the byte array to the data checksum.
            </summary>
            <param name = "buf">
            the buffer which contains the data
            </param>
            <param name = "off">
            the offset in the buffer where the data starts
            </param>
            <param name = "len">
            the length of the data
            </param>
        </member>
        <member name="F:Fintek.Common.Compression.Deflater.BEST_COMPRESSION">
            <summary>
            The best and slowest compression level.  This tries to find very
            long and distant string repetitions.
            </summary>
        </member>
        <member name="F:Fintek.Common.Compression.Deflater.BEST_SPEED">
            <summary>
            The worst but fastest compression level.
            </summary>
        </member>
        <member name="F:Fintek.Common.Compression.Deflater.DEFAULT_COMPRESSION">
            <summary>
            The default compression level.
            </summary>
        </member>
        <member name="F:Fintek.Common.Compression.Deflater.NO_COMPRESSION">
            <summary>
            This level won't compress at all but output uncompressed blocks.
            </summary>
        </member>
        <member name="F:Fintek.Common.Compression.Deflater.DEFLATED">
            <summary>
            The compression method.  This is the only method supported so far.
            There is no need to use this constant at all.
            </summary>
        </member>
        <member name="F:Fintek.Common.Compression.Deflater.level">
            <summary>
            Compression level.
            </summary>
        </member>
        <member name="F:Fintek.Common.Compression.Deflater.noHeader">
            <summary>
            should we include a header.
            </summary>
        </member>
        <member name="F:Fintek.Common.Compression.Deflater.state">
            <summary>
            The current state.
            </summary>
        </member>
        <member name="F:Fintek.Common.Compression.Deflater.totalOut">
            <summary>
            The total bytes of output written.
            </summary>
        </member>
        <member name="F:Fintek.Common.Compression.Deflater.pending">
            <summary>
            The pending output.
            </summary>
        </member>
        <member name="F:Fintek.Common.Compression.Deflater.engine">
            <summary>
            The deflater engine.
            </summary>
        </member>
        <member name="M:Fintek.Common.Compression.Deflater.#ctor">
            <summary>
            Creates a new deflater with default compression level.
            </summary>
        </member>
        <member name="M:Fintek.Common.Compression.Deflater.#ctor(System.Int32)">
            <summary>
            Creates a new deflater with given compression level.
            </summary>
            <param name="lvl">
            the compression level, a value between NO_COMPRESSION
            and BEST_COMPRESSION, or DEFAULT_COMPRESSION.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">if lvl is out of range.</exception>
        </member>
        <member name="M:Fintek.Common.Compression.Deflater.#ctor(System.Int32,System.Boolean)">
            <summary>
            Creates a new deflater with given compression level.
            </summary>
            <param name="lvl">
            the compression level, a value between NO_COMPRESSION
            and BEST_COMPRESSION.
            </param>
            <param name="nowrap">
            true, if we should suppress the deflate header at the
            beginning and the adler checksum at the end of the output.  This is
            useful for the GZIP format.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">if lvl is out of range.</exception>
        </member>
        <member name="M:Fintek.Common.Compression.Deflater.Reset">
            <summary>
            Resets the deflater.  The deflater acts afterwards as if it was
            just created with the same compression level and strategy as it
            had before.
            </summary>
        </member>
        <member name="M:Fintek.Common.Compression.Deflater.Flush">
            <summary>
            Flushes the current input block.  Further calls to deflate() will
            produce enough output to inflate everything in the current input
            block.  This is not part of Sun's JDK so I have made it package
            private.  It is used by DeflaterOutputStream to implement
            flush().
            </summary>
        </member>
        <member name="M:Fintek.Common.Compression.Deflater.Finish">
            <summary>
            Finishes the deflater with the current input block.  It is an error
            to give more input after this method was called.  This method must
            be called to force all bytes to be flushed.
            </summary>
        </member>
        <member name="M:Fintek.Common.Compression.Deflater.SetInput(System.Byte[])">
            <summary>
            Sets the data which should be compressed next.  This should be only
            called when needsInput indicates that more input is needed.
            If you call setInput when needsInput() returns false, the
            previous input that is still pending will be thrown away.
            The given byte array should not be changed, before needsInput() returns
            true again.
            This call is equivalent to <code>setInput(input, 0, input.length)</code>.
            </summary>
            <param name="input">
            the buffer containing the input data.
            </param>
            <exception cref="T:System.InvalidOperationException">
            if the buffer was finished() or ended().
            </exception>
        </member>
        <member name="M:Fintek.Common.Compression.Deflater.SetInput(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Sets the data which should be compressed next.  This should be
            only called when needsInput indicates that more input is needed.
            The given byte array should not be changed, before needsInput() returns
            true again.
            </summary>
            <param name="input">
            the buffer containing the input data.
            </param>
            <param name="off">
            the start of the data.
            </param>
            <param name="len">
            the length of the data.
            </param>
            <exception cref="T:System.InvalidOperationException">
            if the buffer was finished() or ended() or if previous input is still pending.
            </exception>
        </member>
        <member name="M:Fintek.Common.Compression.Deflater.SetLevel(System.Int32)">
            <summary>
            Sets the compression level.  There is no guarantee of the exact
            position of the change, but if you call this when needsInput is
            true the change of compression level will occur somewhere near
            before the end of the so far given input.
            </summary>
            <param name="lvl">
            the new compression level.
            </param>
        </member>
        <member name="M:Fintek.Common.Compression.Deflater.SetStrategy(Fintek.Common.Compression.DeflateStrategy)">
            <summary>
            Sets the compression strategy. Strategy is one of
            DEFAULT_STRATEGY, HUFFMAN_ONLY and FILTERED.  For the exact
            position where the strategy is changed, the same as for
            setLevel() applies.
            </summary>
            <param name="stgy">
            the new compression strategy.
            </param>
        </member>
        <member name="M:Fintek.Common.Compression.Deflater.Deflate(System.Byte[])">
            <summary>
            Deflates the current input block to the given array.  It returns
            the number of bytes compressed, or 0 if either
            needsInput() or finished() returns true or length is zero.
            </summary>
            <param name="output">
            the buffer where to write the compressed data.
            </param>
        </member>
        <member name="M:Fintek.Common.Compression.Deflater.Deflate(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Deflates the current input block to the given array.  It returns
            the number of bytes compressed, or 0 if either
            needsInput() or finished() returns true or length is zero.
            </summary>
            <param name="output">
            the buffer where to write the compressed data.
            </param>
            <param name="offset">
            the offset into the output array.
            </param>
            <param name="length">
            the maximum number of bytes that may be written.
            </param>
            <exception cref="T:System.InvalidOperationException">
            if end() was called.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            if offset and/or length don't match the array length.
            </exception>
        </member>
        <member name="M:Fintek.Common.Compression.Deflater.SetDictionary(System.Byte[])">
            <summary>
            Sets the dictionary which should be used in the deflate process.
            This call is equivalent to <code>setDictionary(dict, 0, dict.Length)</code>.
            </summary>
            <param name="dict">
            the dictionary.
            </param>
            <exception cref="T:System.InvalidOperationException">
            if setInput () or deflate () were already called or another dictionary was already set.
            </exception>
        </member>
        <member name="M:Fintek.Common.Compression.Deflater.SetDictionary(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Sets the dictionary which should be used in the deflate process.
            The dictionary should be a byte array containing strings that are
            likely to occur in the data which should be compressed.  The
            dictionary is not stored in the compressed output, only a
            checksum.  To decompress the output you need to supply the same
            dictionary again.
            </summary>
            <param name="dict">
            the dictionary.
            </param>
            <param name="offset">
            an offset into the dictionary.
            </param>
            <param name="length">
            the length of the dictionary.
            </param>
            <exception cref="T:System.InvalidOperationException">
            if setInput () or deflate () were already called or another dictionary was already set.
            </exception>
        </member>
        <member name="P:Fintek.Common.Compression.Deflater.Adler">
            <summary>
            Gets the current adler checksum of the data that was processed so far.
            </summary>
        </member>
        <member name="P:Fintek.Common.Compression.Deflater.TotalIn">
            <summary>
            Gets the number of input bytes processed so far.
            </summary>
        </member>
        <member name="P:Fintek.Common.Compression.Deflater.TotalOut">
            <summary>
            Gets the number of output bytes so far.
            </summary>
        </member>
        <member name="P:Fintek.Common.Compression.Deflater.IsFinished">
            <summary>
            Returns true if the stream was finished and no more output bytes
            are available.
            </summary>
        </member>
        <member name="P:Fintek.Common.Compression.Deflater.IsNeedingInput">
            <summary>
            Returns true, if the input buffer is empty.
            You should then call setInput(). 
            NOTE: This method can also return true when the stream
            was finished.
            </summary>
        </member>
        <member name="F:Fintek.Common.Compression.DeflaterEngine.comprFunc">
            <summary>
            The current compression function.
            </summary>
        </member>
        <member name="F:Fintek.Common.Compression.DeflaterEngine.inputBuf">
            <summary>
            The input data for compression.
            </summary>
        </member>
        <member name="F:Fintek.Common.Compression.DeflaterEngine.totalIn">
            <summary>
            The total bytes of input read.
            </summary>
        </member>
        <member name="F:Fintek.Common.Compression.DeflaterEngine.inputOff">
            <summary>
            The offset into inputBuf, where input data starts.
            </summary>
        </member>
        <member name="F:Fintek.Common.Compression.DeflaterEngine.inputEnd">
            <summary>
            The end offset of the input data.
            </summary>
        </member>
        <member name="F:Fintek.Common.Compression.DeflaterEngine.adler">
            <summary>
            The adler checksum
            </summary>
        </member>
        <member name="M:Fintek.Common.Compression.DeflaterHuffman.BitReverse(System.Int32)">
            <summary>
            Reverse the bits of a 16 bit value.
            </summary>
        </member>
        <member name="F:Fintek.Common.Compression.DeflaterOutputStream.def">
            <summary>
            The deflater which is used to deflate the stream.
            </summary>
        </member>
        <member name="F:Fintek.Common.Compression.DeflaterOutputStream.baseOutputStream">
            <summary>
            base stream the deflater depends on.
            </summary>
        </member>
        <member name="M:Fintek.Common.Compression.DeflaterOutputStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            I needed to implement the abstract member.
            </summary>
        </member>
        <member name="M:Fintek.Common.Compression.DeflaterOutputStream.SetLength(System.Int64)">
            <summary>
            I needed to implement the abstract member.
            </summary>
        </member>
        <member name="M:Fintek.Common.Compression.DeflaterOutputStream.ReadByte">
            <summary>
            I needed to implement the abstract member.
            </summary>
        </member>
        <member name="M:Fintek.Common.Compression.DeflaterOutputStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            I needed to implement the abstract member.
            </summary>
        </member>
        <member name="M:Fintek.Common.Compression.DeflaterOutputStream.deflate">
            <summary>
            Deflates everything in the def's input buffers.  This will call
            <code>def.deflate()</code> until all bytes from the input buffers
            are processed.
            </summary>
        </member>
        <member name="M:Fintek.Common.Compression.DeflaterOutputStream.#ctor(System.IO.Stream)">
            <summary>
            Creates a new DeflaterOutputStream with a default Deflater and default buffer size.
            </summary>
            <param name="baseOutputStream">
            the output stream where deflated output should be written.
            </param>
        </member>
        <member name="M:Fintek.Common.Compression.DeflaterOutputStream.#ctor(System.IO.Stream,Fintek.Common.Compression.Deflater)">
            <summary>
            Creates a new DeflaterOutputStream with the given Deflater and
            default buffer size.
            </summary>
            <param name="baseOutputStream">
            the output stream where deflated output should be written.
            </param>
            <param name="defl">
            the underlying deflater.
            </param>
        </member>
        <member name="M:Fintek.Common.Compression.DeflaterOutputStream.#ctor(System.IO.Stream,Fintek.Common.Compression.Deflater,System.Int32)">
            <summary>
            Creates a new DeflaterOutputStream with the given Deflater and
            buffer size.
            </summary>
            <param name="baseOutputStream">
            the output stream where deflated output should be written.
            </param>
            <param name="defl">
            the underlying deflater.
            </param>
            <param name="bufsize">
            the buffer size.
            </param>
            <exception cref="T:System.InvalidOperationException">
            if bufsize isn't positive.
            </exception>
        </member>
        <member name="M:Fintek.Common.Compression.DeflaterOutputStream.Flush">
            <summary>
            Flushes the stream by calling flush() on the deflater and then
            on the underlying stream.  This ensures that all bytes are
            flushed.
            </summary>
        </member>
        <member name="M:Fintek.Common.Compression.DeflaterOutputStream.Finish">
            <summary>
            Finishes the stream by calling finish() on the deflater. 
            </summary>
        </member>
        <member name="M:Fintek.Common.Compression.DeflaterOutputStream.Close">
            <summary>
            Calls finish () and closes the stream.
            </summary>
        </member>
        <member name="M:Fintek.Common.Compression.DeflaterOutputStream.WriteByte(System.Byte)">
            <summary>
            Writes a single byte to the compressed output stream.
            </summary>
            <param name="bval">
            the byte value.
            </param>
        </member>
        <member name="M:Fintek.Common.Compression.DeflaterOutputStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes a len bytes from an array to the compressed stream.
            </summary>
            <param name="buf">
            the byte array.
            </param>
            <param name="off">
            the offset into the byte array where to start.
            </param>
            <param name="len">
            the number of bytes to write.
            </param>
        </member>
        <member name="P:Fintek.Common.Compression.DeflaterOutputStream.CanRead">
            <summary>
            I needed to implement the abstract member.
            </summary>
        </member>
        <member name="P:Fintek.Common.Compression.DeflaterOutputStream.CanSeek">
            <summary>
            I needed to implement the abstract member.
            </summary>
        </member>
        <member name="P:Fintek.Common.Compression.DeflaterOutputStream.CanWrite">
            <summary>
            I needed to implement the abstract member.
            </summary>
        </member>
        <member name="P:Fintek.Common.Compression.DeflaterOutputStream.Length">
            <summary>
            I needed to implement the abstract member.
            </summary>
        </member>
        <member name="P:Fintek.Common.Compression.DeflaterOutputStream.Position">
            <summary>
            I needed to implement the abstract member.
            </summary>
        </member>
        <member name="M:Fintek.Common.Compression.PendingBuffer.Flush(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Flushes the pending buffer into the given output array.  If the
            output array is to small, only a partial flush is done.
            </summary>
            <param name="output">
            the output array;
            </param>
            <param name="offset">
            the offset into output array;
            </param>
            <param name="length">		
            length the maximum number of bytes to store;
            </param>
            <exception name="ArgumentOutOfRangeException">
            IndexOutOfBoundsException if offset or length are invalid.
            </exception>
        </member>
        <member name="F:Fintek.Common.Compression.Inflater.DECODE_HEADER">
            <summary>
            This are the state in which the inflater can be.
            </summary>
        </member>
        <member name="F:Fintek.Common.Compression.Inflater.CPLENS">
            <summary>
            Copy lengths for literal codes 257..285
            </summary>
        </member>
        <member name="F:Fintek.Common.Compression.Inflater.CPLEXT">
            <summary>
            Extra bits for literal codes 257..285
            </summary>
        </member>
        <member name="F:Fintek.Common.Compression.Inflater.CPDIST">
            <summary>
            Copy offsets for distance codes 0..29
            </summary>
        </member>
        <member name="F:Fintek.Common.Compression.Inflater.CPDEXT">
            <summary>
            Extra bits for distance codes
            </summary>
        </member>
        <member name="F:Fintek.Common.Compression.Inflater.mode">
            <summary>
            This variable contains the current state.
            </summary>
        </member>
        <member name="F:Fintek.Common.Compression.Inflater.readAdler">
            <summary>
            The adler checksum of the dictionary or of the decompressed
            stream, as it is written in the header resp. footer of the
            compressed stream. 
            Only valid if mode is DECODE_DICT or DECODE_CHKSUM.
            </summary>
        </member>
        <member name="F:Fintek.Common.Compression.Inflater.neededBits">
            <summary>
            The number of bits needed to complete the current state.  This
            is valid, if mode is DECODE_DICT, DECODE_CHKSUM,
            DECODE_HUFFMAN_LENBITS or DECODE_HUFFMAN_DISTBITS.
            </summary>
        </member>
        <member name="F:Fintek.Common.Compression.Inflater.isLastBlock">
            <summary>
            True, if the last block flag was set in the last block of the
            inflated stream.  This means that the stream ends after the
            current block.
            </summary>
        </member>
        <member name="F:Fintek.Common.Compression.Inflater.totalOut">
            <summary>
            The total number of inflated bytes.
            </summary>
        </member>
        <member name="F:Fintek.Common.Compression.Inflater.totalIn">
            <summary>
            The total number of bytes set with setInput().  This is not the
            value returned by getTotalIn(), since this also includes the
            unprocessed input.
            </summary>
        </member>
        <member name="F:Fintek.Common.Compression.Inflater.nowrap">
            <summary>
            This variable stores the nowrap flag that was given to the constructor.
            True means, that the inflated stream doesn't contain a header nor the
            checksum in the footer.
            </summary>
        </member>
        <member name="M:Fintek.Common.Compression.Inflater.#ctor">
            <summary>
            Creates a new inflater.
            </summary>
        </member>
        <member name="M:Fintek.Common.Compression.Inflater.#ctor(System.Boolean)">
            <summary>
            Creates a new inflater.
            </summary>
            <param name="nowrap">
            true if no header and checksum field appears in the
            stream.  This is used for GZIPed input.  For compatibility with
            Sun JDK you should provide one byte of input more than needed in
            this case.
            </param>
        </member>
        <member name="M:Fintek.Common.Compression.Inflater.Reset">
            <summary>
            Resets the inflater so that a new stream can be decompressed.  All
            pending input and output will be discarded.
            </summary>
        </member>
        <member name="M:Fintek.Common.Compression.Inflater.DecodeHeader">
            <summary>
            Decodes the deflate header.
            </summary>
            <returns>
            false if more input is needed.
            </returns>
            <exception cref="T:System.FormatException">
            if header is invalid.
            </exception>
        </member>
        <member name="M:Fintek.Common.Compression.Inflater.DecodeDict">
            <summary>
            Decodes the dictionary checksum after the deflate header.
            </summary>
            <returns>
            false if more input is needed.
            </returns>
        </member>
        <member name="M:Fintek.Common.Compression.Inflater.DecodeHuffman">
            <summary>
            Decodes the huffman encoded symbols in the input stream.
            </summary>
            <returns>
            false if more input is needed, true if output window is
            full or the current block ends.
            </returns>
            <exception cref="T:System.FormatException">
            if deflated stream is invalid.
            </exception>
        </member>
        <member name="M:Fintek.Common.Compression.Inflater.DecodeChksum">
            <summary>
            Decodes the adler checksum after the deflate stream.
            </summary>
            <returns>
            false if more input is needed.
            </returns>
            <exception cref="T:System.FormatException">
            DataFormatException, if checksum doesn't match.
            </exception>
        </member>
        <member name="M:Fintek.Common.Compression.Inflater.Decode">
            <summary>
            Decodes the deflated stream.
            </summary>
            <returns>
            false if more input is needed, or if finished.
            </returns>
            <exception cref="T:System.FormatException">
            DataFormatException, if deflated stream is invalid.
            </exception>
        </member>
        <member name="M:Fintek.Common.Compression.Inflater.SetDictionary(System.Byte[])">
            <summary>
            Sets the preset dictionary.  This should only be called, if
            needsDictionary() returns true and it should set the same
            dictionary, that was used for deflating.  The getAdler()
            function returns the checksum of the dictionary needed.
            </summary>
            <param name="buffer">
            the dictionary.
            </param>
            <exception cref="T:System.InvalidOperationException">
            if no dictionary is needed.
            </exception>
            <exception cref="T:System.ArgumentException">
            if the dictionary checksum is wrong.
            </exception>
        </member>
        <member name="M:Fintek.Common.Compression.Inflater.SetDictionary(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Sets the preset dictionary.  This should only be called, if
            needsDictionary() returns true and it should set the same
            dictionary, that was used for deflating.  The getAdler()
            function returns the checksum of the dictionary needed.
            </summary>
            <param name="buffer">
            the dictionary.
            </param>
            <param name="off">
            the offset into buffer where the dictionary starts.
            </param>
            <param name="len">
            the length of the dictionary.
            </param>
            <exception cref="T:System.InvalidOperationException">
            if no dictionary is needed.
            </exception>
            <exception cref="T:System.ArgumentException">
            if the dictionary checksum is wrong.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            if the off and/or len are wrong.
            </exception>
        </member>
        <member name="M:Fintek.Common.Compression.Inflater.SetInput(System.Byte[])">
            <summary>
            Sets the input.  This should only be called, if needsInput()
            returns true.
            </summary>
            <param name="buf">
            the input.
            </param>
            <exception cref="T:System.InvalidOperationException">
            if no input is needed.
            </exception>
        </member>
        <member name="M:Fintek.Common.Compression.Inflater.SetInput(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Sets the input.  This should only be called, if needsInput()
            returns true.
            </summary>
            <param name="buf">
            the input.
            </param>
            <param name="off">
            the offset into buffer where the input starts.
            </param>
            <param name="len">
            the length of the input.
            </param>
            <exception cref="T:System.InvalidOperationException">
            if no input is needed.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            if the off and/or len are wrong.
            </exception>
        </member>
        <member name="M:Fintek.Common.Compression.Inflater.Inflate(System.Byte[])">
            <summary>
            Inflates the compressed stream to the output buffer.  If this
            returns 0, you should check, whether needsDictionary(),
            needsInput() or finished() returns true, to determine why no
            further output is produced.
            </summary>
            <param name="buf">
            the output buffer.
            </param>
            <returns>
            the number of bytes written to the buffer, 0 if no further
            output can be produced.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            if buf has length 0.
            </exception>
            <exception cref="T:System.FormatException">
            if deflated stream is invalid.
            </exception>
        </member>
        <member name="M:Fintek.Common.Compression.Inflater.Inflate(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Inflates the compressed stream to the output buffer.  If this
            returns 0, you should check, whether needsDictionary(),
            needsInput() or finished() returns true, to determine why no
            further output is produced.
            </summary>
            <param name="buf">
            the output buffer.
            </param>
            <param name="off">
            the offset into buffer where the output should start.
            </param>
            <param name="len">
            the maximum length of the output.
            </param>
            <returns>
            the number of bytes written to the buffer, 0 if no further output can be produced.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            if len is &lt;= 0.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            if the off and/or len are wrong.
            </exception>
            <exception cref="T:System.FormatException">
            if deflated stream is invalid.
            </exception>
        </member>
        <member name="P:Fintek.Common.Compression.Inflater.IsNeedingInput">
            <summary>
            Returns true, if the input buffer is empty.
            You should then call setInput(). 
            NOTE: This method also returns true when the stream is finished.
            </summary>
        </member>
        <member name="P:Fintek.Common.Compression.Inflater.IsNeedingDictionary">
            <summary>
            Returns true, if a preset dictionary is needed to inflate the input.
            </summary>
        </member>
        <member name="P:Fintek.Common.Compression.Inflater.IsFinished">
            <summary>
            Returns true, if the inflater has finished.  This means, that no
            input is needed and no output can be produced.
            </summary>
        </member>
        <member name="P:Fintek.Common.Compression.Inflater.Adler">
            <summary>
            Gets the adler checksum.  This is either the checksum of all
            uncompressed bytes returned by inflate(), or if needsDictionary()
            returns true (and thus no output was yet produced) this is the
            adler checksum of the expected dictionary.
            </summary>
            <returns>
            the adler checksum.
            </returns>
        </member>
        <member name="P:Fintek.Common.Compression.Inflater.TotalOut">
            <summary>
            Gets the total number of output bytes returned by inflate().
            </summary>
            <returns>
            the total number of output bytes.
            </returns>
        </member>
        <member name="P:Fintek.Common.Compression.Inflater.TotalIn">
            <summary>
            Gets the total number of processed compressed input bytes.
            </summary>
            <returns>
            the total number of bytes of processed input bytes.
            </returns>
        </member>
        <member name="P:Fintek.Common.Compression.Inflater.RemainingInput">
            <summary>
            Gets the number of unprocessed input.  Useful, if the end of the
            stream is reached and you want to further process the bytes after
            the deflate stream.
            </summary>
            <returns>
            the number of bytes of the input which were not processed.
            </returns>
        </member>
        <member name="M:Fintek.Common.Compression.InflaterHuffmanTree.#ctor(System.Byte[])">
            <summary>
            Constructs a Huffman tree from the array of code lengths.
            </summary>
            <param name = "codeLengths">
            the array of code lengths
            </param>
        </member>
        <member name="M:Fintek.Common.Compression.InflaterHuffmanTree.GetSymbol(Fintek.Common.Compression.StreamManipulator)">
            <summary>
            Reads the next symbol from input.  The symbol is encoded using the
            huffman tree.
            </summary>
            <param name="input">
            input the input source.
            </param>
            <returns>
            the next symbol, or -1 if not enough input is available.
            </returns>
        </member>
        <member name="F:Fintek.Common.Compression.InflaterInputStream.inf">
            <summary>
            Decompressor for this filter
            </summary>
        </member>
        <member name="F:Fintek.Common.Compression.InflaterInputStream.buf">
            <summary>
            Byte array used as a buffer
            </summary>
        </member>
        <member name="F:Fintek.Common.Compression.InflaterInputStream.len">
            <summary>
            Size of buffer
            </summary>
        </member>
        <member name="F:Fintek.Common.Compression.InflaterInputStream.baseInputStream">
            <summary>
            base stream the inflater depends on.
            </summary>
        </member>
        <member name="M:Fintek.Common.Compression.InflaterInputStream.Flush">
            <summary>
            Flushes the baseInputStream
            </summary>
        </member>
        <member name="M:Fintek.Common.Compression.InflaterInputStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            I needed to implement the abstract member.
            </summary>
        </member>
        <member name="M:Fintek.Common.Compression.InflaterInputStream.SetLength(System.Int64)">
            <summary>
            I needed to implement the abstract member.
            </summary>
        </member>
        <member name="M:Fintek.Common.Compression.InflaterInputStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            I needed to implement the abstract member.
            </summary>
        </member>
        <member name="M:Fintek.Common.Compression.InflaterInputStream.WriteByte(System.Byte)">
            <summary>
            I needed to implement the abstract member.
            </summary>
        </member>
        <member name="M:Fintek.Common.Compression.InflaterInputStream.#ctor(System.IO.Stream)">
            <summary>
            Create an InflaterInputStream with the default decompresseor
            and a default buffer size.
            </summary>
            <param name = "baseInputStream">
            the InputStream to read bytes from
            </param>
        </member>
        <member name="M:Fintek.Common.Compression.InflaterInputStream.#ctor(System.IO.Stream,Fintek.Common.Compression.Inflater)">
            <summary>
            Create an InflaterInputStream with the specified decompresseor
            and a default buffer size.
            </summary>
            <param name = "baseInputStream">
            the InputStream to read bytes from
            </param>
            <param name = "inf">
            the decompressor used to decompress data read from baseInputStream
            </param>
        </member>
        <member name="M:Fintek.Common.Compression.InflaterInputStream.#ctor(System.IO.Stream,Fintek.Common.Compression.Inflater,System.Int32)">
            <summary>
            Create an InflaterInputStream with the specified decompresseor
            and a specified buffer size.
            </summary>
            <param name = "baseInputStream">
            the InputStream to read bytes from
            </param>
            <param name = "inf">
            the decompressor used to decompress data read from baseInputStream
            </param>
            <param name = "size">
            size of the buffer to use
            </param>
        </member>
        <member name="M:Fintek.Common.Compression.InflaterInputStream.Close">
            <summary>
            Closes the input stream
            </summary>
        </member>
        <member name="M:Fintek.Common.Compression.InflaterInputStream.Fill">
            <summary>
            Fills the buffer with more data to decompress.
            </summary>
        </member>
        <member name="M:Fintek.Common.Compression.InflaterInputStream.ReadByte">
             <summary>
             Reads one byte of decompressed data.
            
             The byte is baseInputStream the lower 8 bits of the int.
             </summary>
        </member>
        <member name="M:Fintek.Common.Compression.InflaterInputStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Decompresses data into the byte array
            </summary>
            <param name ="b">
            the array to read and decompress data into
            </param>
            <param name ="off">
            the offset indicating where the data should be placed
            </param>
            <param name ="len">
            the number of bytes to decompress
            </param>
        </member>
        <member name="M:Fintek.Common.Compression.InflaterInputStream.Skip(System.Int64)">
            <summary>
            Skip specified number of bytes of uncompressed data
            </summary>
            <param name ="n">
            number of bytes to skip
            </param>
        </member>
        <member name="P:Fintek.Common.Compression.InflaterInputStream.CanRead">
            <summary>
            I needed to implement the abstract member.
            </summary>
        </member>
        <member name="P:Fintek.Common.Compression.InflaterInputStream.CanSeek">
            <summary>
            I needed to implement the abstract member.
            </summary>
        </member>
        <member name="P:Fintek.Common.Compression.InflaterInputStream.CanWrite">
            <summary>
            I needed to implement the abstract member.
            </summary>
        </member>
        <member name="P:Fintek.Common.Compression.InflaterInputStream.Length">
            <summary>
            I needed to implement the abstract member.
            </summary>
        </member>
        <member name="P:Fintek.Common.Compression.InflaterInputStream.Position">
            <summary>
            I needed to implement the abstract member.
            </summary>
        </member>
        <member name="P:Fintek.Common.Compression.InflaterInputStream.Available">
            <summary>
            Returns 0 once the end of the stream (EOF) has been reached.
            Otherwise returns 1.
            </summary>
        </member>
        <member name="M:Fintek.Common.Compression.StreamManipulator.PeekBits(System.Int32)">
            <summary>
            Get the next n bits but don't increase input pointer.  n must be
            less or equal 16 and if you if this call succeeds, you must drop
            at least n-8 bits in the next call.
            </summary>
            <returns>
            the value of the bits, or -1 if not enough bits available.  */
            </returns>
        </member>
        <member name="M:Fintek.Common.Compression.StreamManipulator.DropBits(System.Int32)">
            <summary>
            Drops the next n bits from the input.  You should have called peekBits
            with a bigger or equal n before, to make sure that enough bits are in
            the bit buffer.
            </summary>
        </member>
        <member name="M:Fintek.Common.Compression.StreamManipulator.GetBits(System.Int32)">
            <summary>
            Gets the next n bits and increases input pointer.  This is equivalent
            to peekBits followed by dropBits, except for correct error handling.
            </summary>
            <returns>
            the value of the bits, or -1 if not enough bits available.
            </returns>
        </member>
        <member name="M:Fintek.Common.Compression.StreamManipulator.SkipToByteBoundary">
            <summary>
            Skips to the next byte boundary.
            </summary>
        </member>
        <member name="M:Fintek.Common.Compression.StreamManipulator.CopyBytes(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Copies length bytes from input buffer to output buffer starting
            at output[offset].  You have to make sure, that the buffer is
            byte aligned.  If not enough bytes are available, copies fewer
            bytes.
            </summary>
            <param name="output">
            the buffer.
            </param>
            <param name="offset">
            the offset in the buffer.
            </param>
            <param name="length">
            the length to copy, 0 is allowed.
            </param>
            <returns>
            the number of bytes copied, 0 if no byte is available.
            </returns>
        </member>
        <member name="P:Fintek.Common.Compression.StreamManipulator.AvailableBits">
            <summary>
            Gets the number of bits available in the bit buffer.  This must be
            only called when a previous peekBits() returned -1.
            </summary>
            <returns>
            the number of bits available.
            </returns>
        </member>
        <member name="P:Fintek.Common.Compression.StreamManipulator.AvailableBytes">
            <summary>
            Gets the number of bytes available.
            </summary>
            <returns>
            the number of bytes available.
            </returns>
        </member>
        <member name="T:Fintek.Common.Compression.ZipEntry">
             <summary>
             This class represents a member of a zip archive.  ZipFile and
             ZipInputStream will give you instances of this class as information
             about the members in an archive.  On the other hand ZipOutputStream
             needs an instance of this class to create a new member.
            
             author of the original java version : Jochen Hoenicke
             </summary>
        </member>
        <member name="M:Fintek.Common.Compression.ZipEntry.#ctor(System.String)">
            <summary>
            Creates a zip entry with the given name.
            </summary>
            <param name="name">
            the name. May include directory components separated by '/'.
            </param>
        </member>
        <member name="M:Fintek.Common.Compression.ZipEntry.#ctor(Fintek.Common.Compression.ZipEntry)">
            <summary>
            Creates a copy of the given zip entry.
            </summary>
            <param name="e">
            the entry to copy.
            </param>
        </member>
        <member name="M:Fintek.Common.Compression.ZipEntry.Clone">
            <summary>
            Creates a copy of this zip entry.
            </summary>
        </member>
        <member name="M:Fintek.Common.Compression.ZipEntry.ToString">
            <summary>
            Gets the string representation of this ZipEntry.  This is just
            the name as returned by getName().
            </summary>
        </member>
        <member name="P:Fintek.Common.Compression.ZipEntry.DateTime">
            <summary>
            Gets/Sets the time of last modification of the entry.
            </summary>
        </member>
        <member name="P:Fintek.Common.Compression.ZipEntry.Name">
            <summary>
            Returns the entry name.  The path components in the entry are
            always separated by slashes ('/').
            </summary>
        </member>
        <member name="P:Fintek.Common.Compression.ZipEntry.Size">
            <summary>
            Gets/Sets the size of the uncompressed data.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            if size is not in 0..0xffffffffL
            </exception>
            <returns>
            the size or -1 if unknown.
            </returns>
        </member>
        <member name="P:Fintek.Common.Compression.ZipEntry.CompressedSize">
            <summary>
            Gets/Sets the size of the compressed data.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            if csize is not in 0..0xffffffffL
            </exception>
            <returns>
            the size or -1 if unknown.
            </returns>
        </member>
        <member name="P:Fintek.Common.Compression.ZipEntry.Crc">
            <summary>
            Gets/Sets the crc of the uncompressed data.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            if crc is not in 0..0xffffffffL
            </exception>
            <returns>
            the crc or -1 if unknown.
            </returns>
        </member>
        <member name="P:Fintek.Common.Compression.ZipEntry.CompressionMethod">
            <summary>
            Gets/Sets the compression method. Only DEFLATED and STORED are supported.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            if method is not supported.
            </exception>
            <returns>
            the compression method or -1 if unknown.
            </returns>
            <see cref="F:Fintek.Common.Compression.ZipOutputStream.DEFLATED"/>
            <see cref="F:Fintek.Common.Compression.ZipOutputStream.STORED"/>
        </member>
        <member name="P:Fintek.Common.Compression.ZipEntry.ExtraData">
            <summary>
            Gets/Sets the extra data.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            if extra is longer than 0xffff bytes.
            </exception>
            <returns>
            the extra data or null if not set.
            </returns>
        </member>
        <member name="P:Fintek.Common.Compression.ZipEntry.Comment">
            <summary>
            Gets/Sets the entry comment.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            if comment is longer than 0xffff.
            </exception>
            <returns>
            the comment or null if not set.
            </returns>
        </member>
        <member name="P:Fintek.Common.Compression.ZipEntry.IsDirectory">
            <summary>
            Gets true, if the entry is a directory.  This is solely
            determined by the name, a trailing slash '/' marks a directory.
            </summary>
        </member>
        <member name="M:Fintek.Common.Compression.ZipInputStream.#ctor(System.IO.Stream)">
            <summary>
            Creates a new Zip input stream, reading a zip archive.
            </summary>
        </member>
        <member name="M:Fintek.Common.Compression.ZipInputStream.ReadLeShort">
            <summary>
            Read an unsigned short baseInputStream little endian byte order.
            </summary>
        </member>
        <member name="M:Fintek.Common.Compression.ZipInputStream.ReadLeInt">
            <summary>
            Read an int baseInputStream little endian byte order.
            </summary>
        </member>
        <member name="M:Fintek.Common.Compression.ZipInputStream.ReadLeLong">
            <summary>
            Read an int baseInputStream little endian byte order.
            </summary>
        </member>
        <member name="M:Fintek.Common.Compression.ZipInputStream.GetNextEntry">
            <summary>
            Open the next entry from the zip archive, and return its description.
            If the previous entry wasn't closed, this method will close it.
            </summary>
        </member>
        <member name="M:Fintek.Common.Compression.ZipInputStream.CloseEntry">
            <summary>
            Closes the current zip entry and moves to the next one.
            </summary>
        </member>
        <member name="M:Fintek.Common.Compression.ZipInputStream.ReadByte">
            <summary>
            Reads a byte from the current zip entry.
            </summary>
            <returns>
            the byte or -1 on EOF.
            </returns>
            <exception name="System.IO.IOException">
            IOException if a i/o error occured.
            </exception>
            <exception name="ICSharpCode.SharpZipLib.ZipException">
            ZipException if the deflated stream is corrupted.
            </exception>
        </member>
        <member name="M:Fintek.Common.Compression.ZipInputStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads a block of bytes from the current zip entry.
            </summary>
            <returns>
            the number of bytes read (may be smaller, even before EOF), or -1 on EOF.
            </returns>
            <exception name="Exception">
            IOException if a i/o error occured.
            ZipException if the deflated stream is corrupted.
            </exception>
        </member>
        <member name="M:Fintek.Common.Compression.ZipInputStream.Close">
            <summary>
            Closes the zip file.
            </summary>
            <exception name="Exception">
            if a i/o error occured.
            </exception>
        </member>
        <member name="F:Fintek.Common.Compression.ZipOutputStream.ZIP_STORED_VERSION">
            <summary>
            Our Zip version is hard coded to 1.0 resp. 2.0
            </summary>
        </member>
        <member name="F:Fintek.Common.Compression.ZipOutputStream.STORED">
            <summary>
            Compression method.  This method doesn't compress at all.
            </summary>
        </member>
        <member name="F:Fintek.Common.Compression.ZipOutputStream.DEFLATED">
            <summary>
            Compression method.  This method uses the Deflater.
            </summary>
        </member>
        <member name="M:Fintek.Common.Compression.ZipOutputStream.#ctor(System.IO.Stream)">
            <summary>
            Creates a new Zip output stream, writing a zip archive.
            </summary>
            <param name="baseOutputStream">
            the output stream to which the zip archive is written.
            </param>
        </member>
        <member name="M:Fintek.Common.Compression.ZipOutputStream.SetComment(System.String)">
            <summary>
            Set the zip file comment.
            </summary>
            <param name="comment">
            the comment.
            </param>
            <exception name ="ArgumentException">
            if UTF8 encoding of comment is longer than 0xffff bytes.
            </exception>
        </member>
        <member name="M:Fintek.Common.Compression.ZipOutputStream.SetMethod(System.Int32)">
            <summary>
            Sets default compression method.  If the Zip entry specifies
            another method its method takes precedence.
            </summary>
            <param name = "method">
            the method.
            </param>
            <exception name = "ArgumentException">
            if method is not supported.
            </exception>
        </member>
        <member name="M:Fintek.Common.Compression.ZipOutputStream.SetLevel(System.Int32)">
            <summary>
            Sets default compression level.  The new level will be activated
            immediately.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            if level is not supported.
            </exception>
            <see cref="T:Fintek.Common.Compression.Deflater"/>
        </member>
        <member name="M:Fintek.Common.Compression.ZipOutputStream.writeLeShort(System.Int32)">
            <summary>
            Write an unsigned short in little endian byte order.
            </summary>
        </member>
        <member name="M:Fintek.Common.Compression.ZipOutputStream.writeLeInt(System.Int32)">
            <summary>
            Write an int in little endian byte order.
            </summary>
        </member>
        <member name="M:Fintek.Common.Compression.ZipOutputStream.writeLeLong(System.Int64)">
            <summary>
            Write an int in little endian byte order.
            </summary>
        </member>
        <member name="M:Fintek.Common.Compression.ZipOutputStream.PutNextEntry(Fintek.Common.Compression.ZipEntry)">
            <summary>
            Starts a new Zip entry. It automatically closes the previous
            entry if present.  If the compression method is stored, the entry
            must have a valid size and crc, otherwise all elements (except
            name) are optional, but must be correct if present.  If the time
            is not set in the entry, the current time is used.
            </summary>
            <param name="entry">
            the entry.
            </param>
            <exception cref="T:System.IO.IOException">
            if an I/O error occured.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            if stream was finished
            </exception>
        </member>
        <member name="M:Fintek.Common.Compression.ZipOutputStream.CloseEntry">
            <summary>
            Closes the current entry.
            </summary>
            <exception cref="T:System.IO.IOException">
            if an I/O error occured.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            if no entry is active.
            </exception>
        </member>
        <member name="M:Fintek.Common.Compression.ZipOutputStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes the given buffer to the current entry.
            </summary>
            <exception cref="T:System.IO.IOException">
            if an I/O error occured.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            if no entry is active.
            </exception>
        </member>
        <member name="M:Fintek.Common.Compression.ZipOutputStream.Finish">
            <summary>
            Finishes the stream.  This will write the central directory at the
            end of the zip file and flush the stream.
            </summary>
            <exception cref="T:System.IO.IOException">
            if an I/O error occured.
            </exception>
        </member>
        <member name="T:Fintek.Common.Conversion">
            <summary>
            Conversion işlemleri yapmak için kullanılır.
            </summary>
        </member>
        <member name="M:Fintek.Common.Conversion.ToDataTable(System.Data.DataView)">
            <summary>
            Converts a data view to a datatable.
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:Fintek.Common.Conversion.ToStringArray(System.Data.DataTable,System.Int32)">
            <summary>
            Converts a DataColumn of a given table to a string array with given column index.
            </summary>
            <param name="source">DataTable that includes the DataColumn.</param>
            <param name="columnIndex">Column index in the row.</param>
            <returns>Result string array.</returns>
        </member>
        <member name="M:Fintek.Common.Conversion.ToStringArray(System.Data.DataTable,System.String)">
            <summary>
            Converts a DataColumn of a given table to a string array with given column name.
            </summary>
            <param name="source">DataTable that includes the DataColumn.</param>
            <param name="columnName">Name of the column.</param>
            <returns>Result string array.</returns>
        </member>
        <member name="M:Fintek.Common.Conversion.ToArrayList(System.Data.DataTable,System.Int32)">
            <summary>
            Converts a DataColumn of a given table to an ArrayList with given column index.
            </summary>
            <param name="source">DataTable that includes the DataColumn.</param>
            <param name="columnIndex">Index of the column.</param>
            <returns>Result ArrayList.</returns>
        </member>
        <member name="M:Fintek.Common.Conversion.ToArrayList(System.Data.DataTable,System.String)">
            <summary>
            Converts a DataColumn of a given table to an ArrayList with given column name.
            </summary>
            <param name="source">DataTable that includes the DataColumn.</param>
            <param name="columnName">Name of the column.</param>
            <returns>Result ArrayList.</returns>
        </member>
        <member name="M:Fintek.Common.Conversion.ToArrayList(System.Array)">
            <summary>
            Converts an array to an ArrayList.
            </summary>
            <param name="source">Source array of objects.</param>
            <returns>Converted ArrayList.</returns>
        </member>
        <member name="M:Fintek.Common.Conversion.ToStringArray(System.Collections.ArrayList)">
            <summary>
            Converts the values in an array list to a string array.
            </summary>
            <param name="source">Source ArrayList.</param>
            <returns>Result string array.</returns>
        </member>
        <member name="M:Fintek.Common.Conversion.ToCaseStyle(System.String)">
            <summary>
            Converts a string representation of case style to its enumetation.
            </summary>
            <param name="source">String representation of case style.</param>
            <returns>CaseStyles type equivalent of the source.</returns>
        </member>
        <member name="M:Fintek.Common.Conversion.ToHexDecimalString(System.Byte[])">
            <summary>
            Unpacks a byte array.
            </summary>
            <remarks>
            This function is an equivalent of ByteArray.Unpack()
            </remarks>
            <param name="source">Source byte array.</param>
            <returns>Unpacked string representation of source byte array.</returns>
        </member>
        <member name="M:Fintek.Common.Conversion.ToBase16(System.Byte[])">
            <summary>
            Unpacks a byte array.
            </summary>
            <remarks>
            This function is an equivalent of ByteArray.Unpack() and Convert.ToHexDecimalString().
            </remarks>
            <param name="source">Source byte array.</param>
            <returns>Unpacked string representation of source byte array.</returns>
        </member>
        <member name="M:Fintek.Common.Conversion.ToByteArray(System.String)">
            <summary>
            Converts a unpacked string to byte array.
            </summary>
            <param name="source">Source base-16 string.</param>
            <returns>Packed equivalent of source string.</returns>
        </member>
        <member name="T:Fintek.Common.DebugInfo">
            <summary>
            Carries debug environment information via the Fintek.UI.Loader and
            Fintek.App.Data
            </summary>
        </member>
        <member name="M:Fintek.Common.DebugInfo.#ctor(System.Data.DataRow,System.Data.DataSet)">
            <summary>
            Creates an instance of the DebugInfo class.
            </summary>
            <param name="drSite">Selected DataRow object which contains the site properties.</param>
            <param name="dsSiteList">Configured DataSet object which contains the zonelistener configuration.</param>
        </member>
        <member name="P:Fintek.Common.DebugInfo.SiteName">
            <summary>
            Gets value indicating the name of the site selected in the debug dialog.
            </summary>
        </member>
        <member name="P:Fintek.Common.DebugInfo.SiteVersion">
            <summary>
            Gets the value indicating the debug site version.
            </summary>
        </member>
        <member name="P:Fintek.Common.DebugInfo.SiteFileServer">
            <summary>
            Gets the value indicating the file server name.
            </summary>
        </member>
        <member name="P:Fintek.Common.DebugInfo.SiteAppServer">
            <summary>
            Gets the value indicating the application server name.
            </summary>
        </member>
        <member name="P:Fintek.Common.DebugInfo.ConnStr">
            <summary>
            Gets the connection string will be user for DB connection in debug session.
            </summary>
        </member>
        <member name="P:Fintek.Common.DebugInfo.SiteComment">
            <summary>
            Gets the debugging site comment.
            </summary>
        </member>
        <member name="P:Fintek.Common.DebugInfo.TraceOn">
            <summary>
            Gets value indicating the trace switch is on.
            </summary>
        </member>
        <member name="P:Fintek.Common.DebugInfo.DebugOn">
            <summary>
            Gets value indicating the debug switch is on.
            </summary>
        </member>
        <member name="P:Fintek.Common.DebugInfo.HasChannel">
            <summary>
            Gets value indicating the debug site has channel, on channel configuration will be performed.
            </summary>
        </member>
        <member name="P:Fintek.Common.DebugInfo.SiteIdentifier">
            <summary>
            Identifier for the site
            </summary>
        </member>
        <member name="P:Fintek.Common.DebugInfo.DBs">
            <summary>
            Gets the Collection that lists all the DB connections available in the debug session.
            </summary>
        </member>
        <member name="P:Fintek.Common.DebugInfo.AppDataTeraDataDBs">
            <summary>
            Gets the Collection that lists all the App Data TeraData DB connections available in the debug session.
            </summary>
        </member>
        <member name="P:Fintek.Common.DebugInfo.Item(System.String)">
            <summary>
            Gets the db connection string with the specified dbName.
            </summary>
        </member>
        <member name="P:Fintek.Common.DebugInfo.UIPath">
            <summary>
            Gets the file server path.
            </summary>
        </member>
        <member name="P:Fintek.Common.DebugInfo.AppPath">
            <summary>
            Gets the application server path.
            </summary>
        </member>
        <member name="T:Fintek.Common.Diagnostics.LogTypes">
            <summary>
            Log types enumeration.
            </summary>
        </member>
        <member name="F:Fintek.Common.Diagnostics.LogTypes.Error">
            <summary>Log type of an error.</summary>
        </member>
        <member name="F:Fintek.Common.Diagnostics.LogTypes.Warning">
            <summary>Log type of an warning.</summary>
        </member>
        <member name="F:Fintek.Common.Diagnostics.LogTypes.Information">
            <summary>Log type of an information.</summary>
        </member>
        <member name="F:Fintek.Common.Diagnostics.LogTypes.Diagnostic">
            <summary>Log type of an diagnostic.</summary>
        </member>
        <member name="F:Fintek.Common.Diagnostics.LogTypes.Any">
            <summary>Log type of an any.</summary>
        </member>
        <member name="F:Fintek.Common.Diagnostics.LogTypes.All">
            <summary>Log type of an all.</summary>
        </member>
        <member name="T:Fintek.Common.Diagnostics.Logger">
            <summary>
            logs given messages to a file
            call dispose when the usage is finished
            </summary>
        </member>
        <member name="M:Fintek.Common.Diagnostics.Logger.#ctor(System.String,System.String)">
            <summary>
            ctor - give logPath and logFileName
            </summary>
            <param name="logPath"></param>
            <param name="logFileName"></param>
        </member>
        <member name="M:Fintek.Common.Diagnostics.Logger.Dispose">
            <summary>
            Closes all open streams,and removes from TraceListeners collection
            </summary>
        </member>
        <member name="M:Fintek.Common.Diagnostics.Logger.Write(System.String,Fintek.Common.Diagnostics.LogTypes)">
            <summary>
            Writes a log message.
            </summary>
            <param name="message">Log message.</param>
            <param name="logType">Log type.</param>
        </member>
        <member name="M:Fintek.Common.Diagnostics.Logger.Write(System.String)">
            <summary>
            Logs the message, LogType is Any
            </summary>
            <param name="message"></param>
        </member>
        <member name="P:Fintek.Common.Diagnostics.Logger.LogPath">
            <summary>
            Gets or sets value indicating the logging files will be created in.
            </summary>
        </member>
        <member name="P:Fintek.Common.Diagnostics.Logger.LogFileName">
            <summary>
            Gets or sets value indicating log file name.
            </summary>
        </member>
        <member name="P:Fintek.Common.Diagnostics.Logger.LogFilter">
            <summary>
            log only messages which has this type
            </summary>
        </member>
        <member name="T:Fintek.Common.DLError">
            <summary>
            
            </summary>
        </member>
        <member name="F:Fintek.Common.DLError.DataSource">
            <summary>
            DataSource For DLError Instance
            </summary>
        </member>
        <member name="F:Fintek.Common.DLError.Message">
            <summary>
            Error Message for corresponding Error
            </summary>
        </member>
        <member name="F:Fintek.Common.DLError.Procedure">
            <summary>
            Procedure having error
            </summary>
        </member>
        <member name="F:Fintek.Common.DLError.Number">
            <summary>
            Error number
            </summary>
        </member>
        <member name="M:Fintek.Common.DLError.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Fintek.Common.DLError.#ctor(System.String,System.String,System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="dataSource"></param>
            <param name="message"></param>
            <param name="procedure"></param>
            <param name="number"></param>
        </member>
        <member name="M:Fintek.Common.DLError.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            GetObjectData.
            </summary>
            <param name="serialInfo">SerializationInfo</param>
            <param name="streamingContext">StreamingContext</param>
        </member>
        <member name="M:Fintek.Common.DLError.ToString">
            <summary>
            Custom ToString Oveeride For DLError
            </summary>
            <returns></returns>
        </member>
        <member name="T:Fintek.Common.DLException">
            <summary>
            Data Layer Exception Definition, Valid in App Site
            </summary>
        </member>
        <member name="F:Fintek.Common.DLException.Errors">
            <summary>
            Errors Collected
            </summary>
        </member>
        <member name="F:Fintek.Common.DLException.InnerException">
            <summary>
            Inner exception captured
            </summary>
        </member>
        <member name="F:Fintek.Common.DLException.Number">
            <summary>
            Inner Exception That was captured
            </summary>
        </member>
        <member name="F:Fintek.Common.DLException.Procedure">
            <summary>
            Gets the name of the stored procedure/function or Remote Procedure Call (RPC) that generated the error
            </summary>
        </member>
        <member name="F:Fintek.Common.DLException.Source">
            <summary>
            Gets the name of the provider that generated error
            </summary>
        </member>
        <member name="F:Fintek.Common.DLException.StackTrace">
            <summary>
            Gets the string representation of the frames on call stack, at the time current exception was thrown
            </summary>
        </member>
        <member name="F:Fintek.Common.DLException.TargetSite">
            <summary>
            Gets the method that throws current exception
            </summary>
        </member>
        <member name="M:Fintek.Common.DLException.#ctor(System.Int32,System.String)">
            <summary>
            Public DL Exception Constructor
            </summary>
            <param name="message">Exception Message Message Text</param>
            <param name="errorNumber">Error Number for the Current Exception</param>
        </member>
        <member name="M:Fintek.Common.DLException.#ctor(System.String,System.Exception,System.Int32,System.String,System.String,System.String,System.String,Fintek.Common.DLError[])">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorNumber"></param>
            <param name="procedure"></param>
            <param name="source"></param>
            <param name="stackTrace"></param>
            <param name="targetSite"></param>
            <param name="errors"></param>
        </member>
        <member name="M:Fintek.Common.DLException.#ctor(System.String,Fintek.Common.DLException,System.Int32,System.String,System.String,System.String,System.String,Fintek.Common.DLError[])">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="innerDLException"></param>
            <param name="errorNumber"></param>
            <param name="procedure"></param>
            <param name="source"></param>
            <param name="stackTrace"></param>
            <param name="targetSite"></param>
            <param name="errors"></param>
        </member>
        <member name="M:Fintek.Common.DLException.ToXml">
            <summary>
            Gets the String Representation of The Current DLException
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fintek.Common.DLException.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fintek.Common.DLException.ToException">
            <summary>
            Client'a indirebilmek için kullanılır.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fintek.Common.DLException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            GetObjectData.
            </summary>
            <param name="serialInfo">SerializationInfo</param>
            <param name="streamingContext">StreamingContext</param>
        </member>
        <member name="M:Fintek.Common.DLException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            
            </summary>
            <param name="sInfo"></param>
            <param name="sContext"></param>
        </member>
        <member name="P:Fintek.Common.DLException.InnerDLExcetion">
            <summary>
            innerDLException captured
            </summary>
        </member>
        <member name="P:Fintek.Common.DLException.Message">
            <summary>
            Message
            </summary>
        </member>
        <member name="T:Fintek.Common.Diagnostics.ExceptionMessage">
            <summary>
            Encapsulates any exception occured on the client computer.
            Also gathers several informations about program and client.
            Serializes all of the information for tranmitting over a socket.
            </summary>
        </member>
        <member name="M:Fintek.Common.Diagnostics.ExceptionMessage.#ctor(System.Byte[])">
            <summary>
            Creates an instance of ExceptionMessage by deserializing the exception buffer.
            </summary>
            <param name="packet">Array of bytes to be deserialized.</param>
        </member>
        <member name="M:Fintek.Common.Diagnostics.ExceptionMessage.#ctor(System.Data.DataSet)">
            <summary>
            Creates an instance of ExceptionMessage by extraction information from a DataSet.
            </summary>
            <param name="dataSet">DataSet contains exception information.</param>
        </member>
        <member name="M:Fintek.Common.Diagnostics.ExceptionMessage.#ctor">
            <summary>
            Creates an instance of ExceptionMessage.
            </summary>
        </member>
        <member name="M:Fintek.Common.Diagnostics.ExceptionMessage.ToBytes">
            <summary>
            Serializes the class to a byte array.
            </summary>
            <returns>Serialized data.</returns>
        </member>
        <member name="M:Fintek.Common.Diagnostics.ExceptionMessage.ToDataSet">
            <summary>
            Serializes the class to a DataSet.
            </summary>
            <returns>Prepared DataSet.</returns>
        </member>
        <member name="M:Fintek.Common.Diagnostics.ExceptionMessage.parseDS(System.Data.DataSet)">
            <summary>
            DataSet parser worker function.
            </summary>
            <param name="dataSet">DataSet contains information in detail.</param>
        </member>
        <member name="M:Fintek.Common.Diagnostics.ExceptionMessage.parseBuffer(System.Byte[])">
            <summary>
            ByteArray parser worker function.
            </summary>
            <param name="packet">Serialized buffer of ByteArray.</param>
        </member>
        <member name="M:Fintek.Common.Diagnostics.ExceptionMessage.buildBuffer">
            <summary>
            ByteArray serializer worker function.
            </summary>
            <returns>Data serialized to ByteArray.</returns>
        </member>
        <member name="M:Fintek.Common.Diagnostics.ExceptionMessage.buildDS">
            <summary>
            DataSet serializer worker function.
            </summary>
            <returns>Data serialized to a DataSet.</returns>
        </member>
        <member name="P:Fintek.Common.Diagnostics.ExceptionMessage.Machine">
            <summary>
            Gets or sets value encapsulating the machine info.
            </summary>
        </member>
        <member name="P:Fintek.Common.Diagnostics.ExceptionMessage.Application">
            <summary>
            Gets or sets value encapsulating the application info.
            </summary>
        </member>
        <member name="P:Fintek.Common.Diagnostics.ExceptionMessage.User">
            <summary>
            Gets or sets value encapsulating the user info.
            </summary>
        </member>
        <member name="P:Fintek.Common.Diagnostics.ExceptionMessage.Level">
            <summary>
            Gets or sets value indicating the error level.
            </summary>
        </member>
        <member name="P:Fintek.Common.Diagnostics.ExceptionMessage.Message">
            <summary>
            Gets or sets value indicating the exception.
            Exception text includes all the stack trace by calling Exception.ToString() method.
            </summary>
        </member>
        <member name="P:Fintek.Common.Diagnostics.ExceptionMessage.UserComment">
            <summary>
            Gets or sets value indicating the additional user comment.
            </summary>
        </member>
        <member name="P:Fintek.Common.Diagnostics.ExceptionMessage.DateTime">
            <summary>
            Gets or sets the value indicating the DateTime of the exception occured
            on client machine.
            </summary>
        </member>
        <member name="P:Fintek.Common.Diagnostics.ExceptionMessage.ExceptionType">
            <summary>
            Gets or sets the value indicating the DateTime of the exception occured
            on client machine.
            </summary>
        </member>
        <member name="P:Fintek.Common.Diagnostics.ExceptionMessage.StackTrace">
            <summary>
            Gets or sets the value indicating the DateTime of the exception occured
            on client machine.
            </summary>
        </member>
        <member name="T:Fintek.Common.Diagnostics.ExceptionMessage.MachineInfo">
            <summary>
            Information about the machine which exception occured.
            If any of the following field value cannot be obtained, it will be set to "N/A".
            </summary>
        </member>
        <member name="F:Fintek.Common.Diagnostics.ExceptionMessage.MachineInfo.Name">
            <summary>Network name of the computer.</summary>
        </member>
        <member name="F:Fintek.Common.Diagnostics.ExceptionMessage.MachineInfo.IP">
            <summary>IP address of the host.</summary>
        </member>
        <member name="F:Fintek.Common.Diagnostics.ExceptionMessage.MachineInfo.OSVersion">
            <summary>Windows operating system version.</summary>
        </member>
        <member name="F:Fintek.Common.Diagnostics.ExceptionMessage.MachineInfo.FrameworkVersion">
            <summary>.NET Framework version installed.</summary>
        </member>
        <member name="F:Fintek.Common.Diagnostics.ExceptionMessage.MachineInfo.MDACVersion">
            <summary>MDAC version installed.</summary>
        </member>
        <member name="T:Fintek.Common.Diagnostics.ExceptionMessage.ApplicationInfo">
            <summary>
            Information about the client application including the screen.
            If any of the following field value cannot be obtained, it will be set to "N/A".
            </summary>
        </member>
        <member name="F:Fintek.Common.Diagnostics.ExceptionMessage.ApplicationInfo.ChannelID">
            <summary>Current channel id.</summary>
        </member>
        <member name="F:Fintek.Common.Diagnostics.ExceptionMessage.ApplicationInfo.ScreenID">
            <summary>Current screen id.</summary>
        </member>
        <member name="F:Fintek.Common.Diagnostics.ExceptionMessage.ApplicationInfo.BranchVersion">
            <summary>Fintek.UI.Branch.exe version.</summary>
        </member>
        <member name="F:Fintek.Common.Diagnostics.ExceptionMessage.ApplicationInfo.ScreenVersion">
            <summary>Current screen version.</summary>
        </member>
        <member name="T:Fintek.Common.Diagnostics.ExceptionMessage.UserInfo">
            <summary>
            Information about the user. User means both application user and operating 
            system user.
            If any of the following field value cannot be obtained, it will be set to "N/A".
            </summary>
        </member>
        <member name="F:Fintek.Common.Diagnostics.ExceptionMessage.UserInfo.Name">
            <summary>Application user name.</summary>
        </member>
        <member name="F:Fintek.Common.Diagnostics.ExceptionMessage.UserInfo.WindowsAccount">
            <summary>Windows (operating system) user name.</summary>
        </member>
        <member name="F:Fintek.Common.Diagnostics.ExceptionMessage.UserInfo.BranchID">
            <summary>User branch id.</summary>
        </member>
        <member name="T:Fintek.Common.ExtCalendar">
            <summary>
            Yabancı takvim.
            </summary>
        </member>
        <member name="M:Fintek.Common.ExtCalendar.#ctor">
            <summary>
            ExCalendar sınıfından bir nesne türetir.
            </summary>
        </member>
        <member name="M:Fintek.Common.ExtCalendar.#ctor(System.String,System.Data.DataTable)">
            <summary>
            Yeni bir yabancı takvim yaratılır.
            </summary>
            <param name="countryCode">Ülke kodu.</param>
            <param name="data">Yaratılmış yeni bir yabancı takvim.</param>
        </member>
        <member name="M:Fintek.Common.ExtCalendar.LoadCalendar(System.Data.DataTable)">
            <summary>
            Verilen tablodan takvimi yükler.
            </summary>
            <param name="dataTableTakvim">Takvim tablosu.</param>
        </member>
        <member name="M:Fintek.Common.ExtCalendar.LoadCurrentDate(System.Data.DataTable)">
            <summary>
            İş günü değerini yükler.
            </summary>
            <param name="dataTableBanka"></param>
        </member>
        <member name="M:Fintek.Common.ExtCalendar.ChangeCurrentDate(Fintek.Common.DateType)">
            <summary>
            İş günü değerini değiştirir.
            </summary>
            <param name="date"></param>
        </member>
        <member name="M:Fintek.Common.ExtCalendar.isHalfWorkingDay(Fintek.Common.DateType)">
            <summary>
            
            </summary>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="M:Fintek.Common.ExtCalendar.GetOffDayExplanation(Fintek.Common.DateType)">
            <summary>
            Tatil günü açıklamasını döndürür.
            </summary>
            <param name="t">Açıklaması döndürülecek tarih.</param>
            <returns>Açıklama.</returns>
        </member>
        <member name="M:Fintek.Common.ExtCalendar.IsValidDate(System.Int32,System.Int32,System.Int32)">
            <summary>
            Tarihin geçerliliğini döndürür.
            </summary>
            <param name="day">Gün.</param>
            <param name="month">Ay.</param>
            <param name="year">Yıl.</param>
            <returns>Tarih geçerli ise true, değil ise false.</returns>
        </member>
        <member name="M:Fintek.Common.ExtCalendar.IsValidDate(System.String,Fintek.Common.DateTypeFormats)">
            <summary>
            Tarihin geçerliliğini döndürür.
            </summary>
            <param name="dateString">Kontrol edilecek tarihin text değeri.</param>
            <param name="dateFormat">Kontrol edilecek tarihin biçimi.</param>
            <returns>Tarih geçerli ise true, değil ise false.</returns>
        </member>
        <member name="M:Fintek.Common.ExtCalendar.IsWorkingDate">
            <summary>
            İş günü olup olmadığını döndürür.
            </summary>
            <returns>İş günü ise true, değil ise false.</returns>
        </member>
        <member name="M:Fintek.Common.ExtCalendar.IsWorkingDate(Fintek.Common.DateType)">
            <summary>
            İş günü olup olmadığını döndürür.
            </summary>
            <param name="t">Test edilecek DateType olarak tarihsel değer.</param>
            <returns>İş günü ise true, değil ise false.</returns>
        </member>
        <member name="M:Fintek.Common.ExtCalendar.IsHalfWorkingDate">
            <summary>
            Yarım gün olup olmadığını döndürür.
            </summary>
            <returns>Yarım gün ise true, değil ise false.</returns>
        </member>
        <member name="M:Fintek.Common.ExtCalendar.IsHalfWorkingDate(Fintek.Common.DateType)">
            <summary>
            Yarım gün olup olmadığını döndürür.
            </summary>
            <param name="t">Test edilecek DateType olarak tarihsel değer.</param>
            <returns>Yarım gün ise true, değil ise false.</returns>
        </member>
        <member name="M:Fintek.Common.ExtCalendar.IsWorkingDate(System.String,Fintek.Common.DateTypeFormats)">
            <summary>
            Yarım gün olup olmadığını döndürür.
            </summary>
            <param name="dateString">Test edilecek text olarak tarihsel değer.</param>
            <param name="tarihTip">Test edilecek tarihsel değerin biçimi.</param>
            <returns>Yarım gün ise true, değil ise false.</returns>
        </member>
        <member name="M:Fintek.Common.ExtCalendar.IsLeapYear(System.Int32)">
            <summary>
            Artık yıl olup olmadığını döndürür.
            </summary>
            <param name="year">Test edilecek yıl değeri.</param>
            <returns>Artık yıl ise true, değil ise false.</returns>
        </member>
        <member name="M:Fintek.Common.ExtCalendar.IsLeapYear(Fintek.Common.DateType)">
            <summary>
            Artık yıl olup olmadığını döndürür.
            </summary>
            <param name="t">Test edilecek yılın DateType olarak değeri.</param>
            <returns>Artık yıl ise true, değil ise false.</returns>
        </member>
        <member name="M:Fintek.Common.ExtCalendar.ValueDay(Fintek.Common.DateType)">
            <summary>
            Verilen bir tarihin valörünü döndürür.
            </summary>
            <param name="t">Valörü alıncak tarih.</param>
            <returns>Valör değeri.</returns>
        </member>
        <member name="M:Fintek.Common.ExtCalendar.FindWorkingDay(Fintek.Common.DateType,System.Int32)">
            <summary>
            İş gün bulma metodu.
            </summary>
            <param name="t">Hangi tarihten itibaren başlanacağı bilgisi.</param>
            <param name="incDay">Kaç iş günü sonra ya da önce olduğunun bilgisi.</param>
            <returns>İleri ya da geriye doğru bulunması istenen işgünü değeri.</returns>
        </member>
        <member name="M:Fintek.Common.ExtCalendar.FindWorkingDay(System.Int32)">
            <summary>
            İş gün bulma metodu.
            </summary>
            <param name="incDay">Kaç iş günü sonra ya da önce olduğunun bilgisi.</param>
            <returns>İleri ya da geriye doğru bulunması istenen işgünü değeri.</returns>
        </member>
        <member name="M:Fintek.Common.ExtCalendar.BeginningofWeek(Fintek.Common.DateType)">
            <summary>
            Haftanın ilk gününü döndürür.
            </summary>
            <param name="t">Haftasının ilk günü bulunması istenen tarih.</param>
            <returns>Haftanın ilk günü.</returns>
        </member>
        <member name="M:Fintek.Common.ExtCalendar.BeginningofWeekWorkingDate(Fintek.Common.DateType)">
            <summary>
            Haftanın ilk iş gününü döndürür.
            </summary>
            <param name="t">Haftasının ilk iş günü bulunması istenen tarih.</param>
            <returns>Haftanın ilk iş günü.</returns>
        </member>
        <member name="M:Fintek.Common.ExtCalendar.EndofWeek(Fintek.Common.DateType)">
            <summary>
            Haftanın son gününü döndürür.
            </summary>
            <param name="t">Haftasının son günü bulunması istenen tarih.</param>
            <returns>Haftanın son günü.</returns>
        </member>
        <member name="M:Fintek.Common.ExtCalendar.EndofWeekWorkingDate(Fintek.Common.DateType)">
            <summary>
            Haftanın son iş gününü döndürür.
            </summary>
            <param name="t">Haftasının son iş günü bulunması istenen tarih.</param>
            <returns>Haftanın son iş günü.</returns>
        </member>
        <member name="M:Fintek.Common.ExtCalendar.BeginningofMonth(Fintek.Common.DateType)">
            <summary>
            Ayın ilk gününü döndürür.
            </summary>
            <param name="t">Ayın ilk günü bulunması istenen tarih.</param>
            <returns>Ayın ilk günü.</returns>
        </member>
        <member name="M:Fintek.Common.ExtCalendar.BeginningofMonth(System.Int32)">
            <summary>
            Ayın ilk gününü döndürür.
            </summary>
            <param name="month">Ayın ilk günü bulunması istenen ay.</param>
            <returns>Ayın ilk günü.</returns>
        </member>
        <member name="M:Fintek.Common.ExtCalendar.BeginningofMonthWorkingDate(Fintek.Common.DateType)">
            <summary>
            Ayın ilk iş gününü döndürür.
            </summary>
            <param name="t">Ayın ilk iş günü bulunması istenen tarih.</param>
            <returns>Ayın ilk iş günü.</returns>
        </member>
        <member name="M:Fintek.Common.ExtCalendar.BeginningofMonthWorkingDate(System.Int32)">
            <summary>
            Ayın ilk iş gününü döndürür.
            </summary>
            <param name="month">Ayın ilk iş günü bulunması istenen ay.</param>
            <returns>Ayın ilk iş günü.</returns>
        </member>
        <member name="M:Fintek.Common.ExtCalendar.EndofMonth(Fintek.Common.DateType)">
            <summary>
            Ayın son gününü döndürür.
            </summary>
            <param name="t">Ayın son günü bulunması istenen tarih.</param>
            <returns>Ayın son günü.</returns>
        </member>
        <member name="M:Fintek.Common.ExtCalendar.EndofMonth(System.Int32)">
            <summary>
            Ayın son gününü döndürür.
            </summary>
            <param name="month">Ayın son günü bulunması istenen ay.</param>
            <returns>Ayın son günü.</returns>
        </member>
        <member name="M:Fintek.Common.ExtCalendar.EndofMonthWorkingDate(Fintek.Common.DateType)">
            <summary>
            Ayın son iş gününü döndürür.
            </summary>
            <param name="t">Ayın son iş günü bulunması istenen tarih.</param>
            <returns>Ayın son iş günü.</returns>
        </member>
        <member name="M:Fintek.Common.ExtCalendar.EndofMonthWorkingDate(System.Int32)">
            <summary>
            Ayın son iş gününü döndürür.
            </summary>
            <param name="month">Ayın son iş günü bulunması istenen ay.</param>
            <returns>Ayın son iş günü.</returns>
        </member>
        <member name="M:Fintek.Common.ExtCalendar.BeginningofPeriod(Fintek.Common.DateType)">
            <summary>
            Dönemin ilk gününü döndürür.
            </summary>
            <param name="t">Dönemin ilk günü bulunması istenen tarih.</param>
            <returns>Dönemin ilk günü.</returns>
        </member>
        <member name="M:Fintek.Common.ExtCalendar.EndofPeriod(Fintek.Common.DateType)">
            <summary>
            Dönemin son gününü döndürür.
            </summary>
            <param name="t">Dönemin son günü bulunması istenen tarih.</param>
            <returns>Dönemin son günü.</returns>
        </member>
        <member name="M:Fintek.Common.ExtCalendar.BeginningofPeriodWorkingDate(Fintek.Common.DateType)">
            <summary>
            Dönemin ilk iş gününü döndürür.
            </summary>
            <param name="t">Dönemin ilk iş günü bulunması istenen tarih.</param>
            <returns>Dönemin ilk iş günü.</returns>
        </member>
        <member name="M:Fintek.Common.ExtCalendar.EndofPeriodWorkingDate(Fintek.Common.DateType)">
            <summary>
            Dönemin son iş gününü döndürür.
            </summary>
            <param name="t">Dönemin son iş günü bulunması istenen tarih.</param>
            <returns>Dönemin ilk iş günü.</returns>
        </member>
        <member name="M:Fintek.Common.ExtCalendar.BeginningofYear(Fintek.Common.DateType)">
            <summary>
            Yılın ilk gününü döndürür.
            </summary>
            <param name="t">Yılın ilk günü bulunması istenen tarih.</param>
            <returns>Yılın ilk günü.</returns>
        </member>
        <member name="M:Fintek.Common.ExtCalendar.EndofYear(Fintek.Common.DateType)">
            <summary>
            Yılın son gününü döndürür.
            </summary>
            <param name="t">Yılın son günü bulunması istenen tarih.</param>
            <returns>Yılın son günü.</returns>
        </member>
        <member name="M:Fintek.Common.ExtCalendar.BeginningofYearWorkingDate(Fintek.Common.DateType)">
            <summary>
            Yılın ilk iş gününü döndürür.
            </summary>
            <param name="t">Yılın ilk iş günü bulunması istenen tarih.</param>
            <returns>Yılın ilk iş günü.</returns>
        </member>
        <member name="M:Fintek.Common.ExtCalendar.EndofYearWorkingDate(Fintek.Common.DateType)">
            <summary>
            Yılın son iş gününü döndürür.
            </summary>
            <param name="t">Yılın son iş günü bulunması istenen tarih.</param>
            <returns>Yılın son iş günü.</returns>
        </member>
        <member name="M:Fintek.Common.ExtCalendar.GetDatesInYear(System.Int32)">
            <summary>
            Verilen bir yılın kaç gün olduğunu döndürür.
            </summary>
            <param name="year">Yıl.</param>
            <returns>Verilen yılın kaç gün olduğu.</returns>
        </member>
        <member name="M:Fintek.Common.ExtCalendar.GetDatesInYear(Fintek.Common.DateType)">
            <summary>
            Verilen bir tarihin (DateType) kaç gün olduğunu döndürür.
            </summary>
            <param name="t">Yıl.</param>
            <returns>Verilen tarihin (DateType) kaç gün olduğu.</returns>
        </member>
        <member name="M:Fintek.Common.ExtCalendar.CalculateDifference(Fintek.Common.DateType,Fintek.Common.DateType)">
            <summary>
            Verilen iki tarih (DateTyppe) arasındaki gün farkını hesaplar.
            </summary>
            <param name="endDate">Bitiş tarihi.</param>
            <param name="startDate">Başlangıç tarihi.</param>
            <returns>Verilen iki tarih (DateTyppe) arasındaki gün farkı.</returns>
        </member>
        <member name="M:Fintek.Common.ExtCalendar.CalculateDifferenceAsMonth(Fintek.Common.DateType,Fintek.Common.DateType)">
            <summary>
            Verilen iki tarih (DateType) arasındaki ay farkını hesaplar.
            </summary>
            <param name="endDate">Bitiş tarihi.</param>
            <param name="startDate">Başlangıç tarihi.</param>
            <returns>Verilen iki tarih (DateType) arasındaki ay farkı.</returns>
        </member>
        <member name="M:Fintek.Common.ExtCalendar.CalculateWorkingDayDifference(Fintek.Common.DateType,Fintek.Common.DateType)">
            <summary>
            Verilen iki tarih (DateTyppe) arasındaki iş günü farkını hesaplar.
            </summary>
            <param name="endDate">Bitiş tarihi.</param>
            <param name="startDate">Başlangıç tarihi.</param>
            <returns>Verilen iki tarih (DateTyppe) arasındaki gün farkı.</returns>
        </member>
        <member name="P:Fintek.Common.ExtCalendar.CurrentDate">
            <summary>
            İş günü değeri.
            </summary>
        </member>
        <member name="P:Fintek.Common.ExtCalendar.Loaded">
            <summary>
            Takvim verisinin yüklenme bilgisini döndürür.
            </summary>
        </member>
        <member name="P:Fintek.Common.ExtCalendar.ValueDate">
            <summary>
            Valör tarihinin değeri.
            </summary>
        </member>
        <member name="T:Fintek.Common.Folders">
            <summary>
             Uygulamada kullanılan dizinler.
            </summary>
        </member>
        <member name="M:Fintek.Common.Folders.GetTruePath(System.String)">
            <summary>
            Clears any valid path string. Convert to a traditional format.
            </summary>
            <param name="path">Raw path string.</param>
            <returns>Cleared path string.</returns>
        </member>
        <member name="M:Fintek.Common.Folders.GetCurrentFolder(System.String)">
            <summary>
            Extracts the current folder name from a path string.
            </summary>
            <param name="path">Path string.</param>
            <returns>Current folder.</returns>
        </member>
        <member name="M:Fintek.Common.Folders.GetParentPath(System.String)">
            <summary>
            Extracts the parent folder's full path of a given path.
            </summary>
            <param name="path">Path string.</param>
            <returns>Parent folder's path string.</returns>
        </member>
        <member name="M:Fintek.Common.Folders.GetParentFolder(System.String)">
            <summary>
            Extracts the parent folder's name from a given path.
            </summary>
            <param name="path">Path string.</param>
            <returns>Name of the parent folder.</returns>
        </member>
        <member name="M:Fintek.Common.Folders.GetParentPath(System.String,System.Int32)">
            <summary>
            Extracts the parent folder path with specified level.
            </summary>
            <param name="path">Path string.</param>
            <param name="level">Level of the parent.</param>
            <returns>Path for the specified level.</returns>
        </member>
        <member name="M:Fintek.Common.Folders.GetParentFolder(System.String,System.Int32)">
            <summary>
            Extracts the parent folder name with specified level.
            </summary>
            <param name="path">Path string.</param>
            <param name="level">Level of parent.</param>
            <returns>Name of the parent with level.</returns>
        </member>
        <member name="M:Fintek.Common.Folders.GetUNCPath(System.String)">
            <summary>
            Resolves a UNC path for a mapped drive.
            </summary>
            <param name="mapPath">Path on the mapped drive.</param>
            <returns>UNC equivalent of specified mapped path.</returns>
        </member>
        <member name="P:Fintek.Common.Folders.Application">
            <summary>
            Uygulamanın dizini.
            </summary>
        </member>
        <member name="P:Fintek.Common.Folders.CachedData">
            <summary>
            Cache edilmiş dosyaların dizini.
            </summary>
        </member>
        <member name="P:Fintek.Common.Folders.Config">
            <summary>
            Konfigürasyon dosyalarının dizini.
            </summary>
        </member>
        <member name="P:Fintek.Common.Folders.Interop">
            <summary>
            Interop dosyalarının dizini.
            </summary>
        </member>
        <member name="P:Fintek.Common.Folders.Data">
            <summary>
            Yerel verilerin tutulduğu klasör.
            </summary>
        </member>
        <member name="P:Fintek.Common.Folders.Help">
            <summary>
            Yardım klasörü
            </summary>
        </member>
        <member name="P:Fintek.Common.Folders.Kernel">
            <summary>
            Kernel klasörü.
            </summary>
        </member>
        <member name="P:Fintek.Common.Folders.Temporary">
            <summary>
            Yerel klasör.
            </summary>
        </member>
        <member name="P:Fintek.Common.Folders.Debug">
            <summary>
            Debug klasörü.
            </summary>
        </member>
        <member name="P:Fintek.Common.Folders.Screen">
            <summary>
            Ekran dosyalarının dizini.
            </summary>
        </member>
        <member name="P:Fintek.Common.Folders.Outer">
            <summary>
            Dış kaynaklı ekran dosyalarının dizini.
            </summary>
        </member>
        <member name="T:Fintek.Common.AppTiers">
            <summary>
            Application Tiers
            </summary>
        </member>
        <member name="F:Fintek.Common.AppTiers.Uninitialized">
            <summary>
            Uninitialized.
            </summary>
        </member>
        <member name="F:Fintek.Common.AppTiers.Unknown">
            <summary>
            Unknown tier.
            </summary>
        </member>
        <member name="F:Fintek.Common.AppTiers.UserInterface">
            <summary>
            UserInterface.
            </summary>
        </member>
        <member name="F:Fintek.Common.AppTiers.Application">
            <summary>
            Application tier.
            </summary>
        </member>
        <member name="F:Fintek.Common.AppTiers.Database">
            <summary>
            Database tier.
            </summary>
        </member>
        <member name="T:Fintek.Common.AppEnvironments">
            <summary>
            AppEnvironments
            </summary>
        </member>
        <member name="F:Fintek.Common.AppEnvironments.Uninitialized">
            <summary>
            Uninitialized
            </summary>
        </member>
        <member name="F:Fintek.Common.AppEnvironments.Unknown">
            <summary>
            Unknown environment.
            </summary>
        </member>
        <member name="F:Fintek.Common.AppEnvironments.Production">
            <summary>
            Production environment.
            </summary>
        </member>
        <member name="F:Fintek.Common.AppEnvironments.PreProduction">
            <summary>
            PreProduction environment.
            </summary>
        </member>
        <member name="F:Fintek.Common.AppEnvironments.Simulation">
            <summary>
            Simulation environment.
            </summary>
        </member>
        <member name="F:Fintek.Common.AppEnvironments.Test">
            <summary>
            Test environment.
            </summary>
        </member>
        <member name="F:Fintek.Common.AppEnvironments.Education">
            <summary>
            Education environment.
            </summary>
        </member>
        <member name="F:Fintek.Common.AppEnvironments.Build">
            <summary>
            Build environment.
            </summary>
        </member>
        <member name="F:Fintek.Common.AppEnvironments.Development">
            <summary>
            Development environment.
            </summary>
        </member>
        <member name="F:Fintek.Common.AppEnvironments.Debug">
            <summary>
            Debug environment.
            </summary>
        </member>
        <member name="F:Fintek.Common.AppEnvironments.UserAcceptance">
            <summary>
            User Acceptance Test.
            </summary>
        </member>
        <member name="T:Fintek.Common.CaseStyles">
            <summary>
            Bir metni biçimlendirmek üzere kullanılan sabitler.
            </summary>
        </member>
        <member name="F:Fintek.Common.CaseStyles.FreeCase">
            <summary>
            gelişigüzel.
            </summary>
        </member>
        <member name="F:Fintek.Common.CaseStyles.UPPERCASE">
            <summary>
            HEPSİBÜYÜK.
            </summary>
        </member>
        <member name="F:Fintek.Common.CaseStyles.lowercase">
            <summary>
            hepsiküçük.
            </summary>
        </member>
        <member name="F:Fintek.Common.CaseStyles.Sentence_case">
            <summary>
            Cümle hali.
            </summary>
        </member>
        <member name="F:Fintek.Common.CaseStyles.Title_Case">
            <summary>
            Baş Harfler.
            </summary>
        </member>
        <member name="F:Fintek.Common.CaseStyles.Name_Middlename_SURNAME">
            <summary>
            İsim Ortaisim SOYİSİM.
            </summary>
        </member>
        <member name="T:Fintek.Common.NumberTypeReturnStyles">
            <summary>
            NumberType'da kullanılmak üzere, değişkenin sayısal değerinin ne tür değere dönüşeceğini belirten sabitler.
            </summary>
        </member>
        <member name="F:Fintek.Common.NumberTypeReturnStyles.Text">
            <summary>
            Düz metin.
            </summary>
        </member>
        <member name="F:Fintek.Common.NumberTypeReturnStyles.Number">
            <summary>
            Sayısal.
            </summary>
        </member>
        <member name="T:Fintek.Common.NumberTypeLanguages">
            <summary>
            NumberType'da kullanılmak üzere, değişkenin sayısal değerinin yazısal değere dönüşümünü sağlamak için kullanılan dil sabitleri.
            </summary>
        </member>
        <member name="F:Fintek.Common.NumberTypeLanguages.Turkish">
            <summary>
            Türkçe.
            </summary>
        </member>
        <member name="F:Fintek.Common.NumberTypeLanguages.English">
            <summary>
            İngilizce.
            </summary>
        </member>
        <member name="T:Fintek.Common.NumberTypeCaseStyles">
            <summary>
            NumberType'da kullanılmak üzere, değişkenin sayısal değerinin yazısal değere dönüşümünü sağlamak için kullanılan biçimlendirme sabitleri.
            </summary>
        </member>
        <member name="F:Fintek.Common.NumberTypeCaseStyles.UPPERCASE">
            <summary>
            HEPSİBÜYÜK.
            </summary>
        </member>
        <member name="F:Fintek.Common.NumberTypeCaseStyles.lowercase">
            <summary>
            hepsiküçük.
            </summary>
        </member>
        <member name="F:Fintek.Common.NumberTypeCaseStyles.Title_Case">
            <summary>
            Baş Harfler.
            </summary>
        </member>
        <member name="T:Fintek.Common.DateTypeFormats">
            <summary>
            DateType'da kullanılmak üzere, değişkenin tarihsel değerinin biçimlendirilmesi için kullanılan biçimlendirme sabitleri.
            </summary>
        </member>
        <member name="F:Fintek.Common.DateTypeFormats.YMD">
            <summary>
            YılAyGün.
            </summary>
        </member>
        <member name="F:Fintek.Common.DateTypeFormats.YMDWithSeparator">
            <summary>
            YılAyGün ve ayraç.
            </summary>
        </member>
        <member name="F:Fintek.Common.DateTypeFormats.DMY">
            <summary>
            GünAyYıl.
            </summary>
        </member>
        <member name="F:Fintek.Common.DateTypeFormats.DMYWithSeparator">
            <summary>
            GünAyYıl ve ayraç.
            </summary>
        </member>
        <member name="F:Fintek.Common.DateTypeFormats.MDY">
            <summary>
            AyGünYıl.
            </summary>
        </member>
        <member name="F:Fintek.Common.DateTypeFormats.MDYWithSeparator">
            <summary>
            AyGünYıl ve ayraç.
            </summary>
        </member>
        <member name="T:Fintek.Common.FixedRowTypes">
            <summary>
            ExtCombo için kullanılan otomatik olarak Hepsi ya da Diğer gibi seçeneklere karşı gelen sabitler.
            </summary>
        </member>
        <member name="F:Fintek.Common.FixedRowTypes.All">
            <summary>
            Tümü
            </summary>
        </member>
        <member name="F:Fintek.Common.FixedRowTypes.Other">
            <summary>
            Diğer
            </summary>
        </member>
        <member name="T:Fintek.Common.RoundStyles">
            <summary>
            Math.Round Metodunda Yuvarlamanın Nasıl Yapılacağını Gösterir
            </summary>
        </member>
        <member name="F:Fintek.Common.RoundStyles.RoundUp">
            <summary>
            Herzaman Yukarı Yuvarla Ör: 2,122 prec 2'ye round ederse 2,13 olur
            </summary>
        </member>
        <member name="F:Fintek.Common.RoundStyles.RoundDown">
            <summary>
            Herzaman Aşağı Yuvarla Ör: 2,548 prec 2'ye round ederse 2,54 olur
            </summary>
        </member>
        <member name="T:Fintek.Common.Channels">
            <summary>
            Kanal kodları
            </summary>
        </member>
        <member name="F:Fintek.Common.Channels.Unknown">
            <summary>
            Bilinmeyen
            </summary>
        </member>
        <member name="F:Fintek.Common.Channels.Undefined">
            <summary>
            Tanımsız
            </summary>
        </member>
        <member name="F:Fintek.Common.Channels.Branch">
            <summary>
            Şube
            </summary>
        </member>
        <member name="F:Fintek.Common.Channels.ATM">
            <summary>
            ATM
            </summary>
        </member>
        <member name="F:Fintek.Common.Channels.Internet">
            <summary>
            Internet
            </summary>
        </member>
        <member name="F:Fintek.Common.Channels.ForeignRemises">
            <summary>
            Yurtdışı Havaleler
            </summary>
        </member>
        <member name="F:Fintek.Common.Channels.ScheduledBatches">
            <summary>
            Zamanlanmış Yığın İşler
            </summary>
        </member>
        <member name="F:Fintek.Common.Channels.POS">
            <summary>
            POS
            </summary>
        </member>
        <member name="F:Fintek.Common.Channels.CallCenter">
            <summary>
            Çağrı Merkezi
            </summary>
        </member>
        <member name="F:Fintek.Common.Channels.NetFlow">
            <summary>
            İş Akışı (Kredi Kartı, Bireysel Krediler Başvuru girişleri.)
            </summary>
        </member>
        <member name="F:Fintek.Common.Channels.ScheduledTasks">
            <summary>
            Veritabanı tarafında Zamanlanmış Yığın Görevler
            </summary>
        </member>
        <member name="F:Fintek.Common.Channels.EndOfDay">
            <summary>
            Gün Sonu Uygulaması
            </summary>
        </member>
        <member name="F:Fintek.Common.Channels.Operations">
            <summary>
            Operasyonel Uygulamalar
            </summary>
        </member>
        <member name="F:Fintek.Common.Channels.SMS">
            <summary>
            Kısa Mesaj Servisi (Short Messages Servise)
            </summary>
        </member>
        <member name="F:Fintek.Common.Channels.IVR">
            <summary>
            IVR
            </summary>
        </member>
        <member name="F:Fintek.Common.Channels.ForeignBranchAndSubsidiary">
            <summary>
            Yurtdışı Şube ve İştirakler
            </summary>
        </member>
        <member name="F:Fintek.Common.Channels.Kiosk">
            <summary>
            Kiosk ve Ödematik
            </summary>
        </member>
        <member name="F:Fintek.Common.Channels.AuditWeb">
            <summary>
            Teftiş uygulaması
            </summary>
        </member>
        <member name="F:Fintek.Common.Channels.DepartmentApplications">
            <summary>
            Birim Uygulamaları
            </summary>
        </member>
        <member name="F:Fintek.Common.Channels.InvestmentFunds">
            <summary>
            Yatırım fon uygulaması
            </summary>
        </member>
        <member name="F:Fintek.Common.Channels.TSK">
            <summary>
            TSK
            </summary>
        </member>
        <member name="F:Fintek.Common.Channels.Subsidiaries">
            <summary>
            İştirakler
            </summary>
        </member>
        <member name="F:Fintek.Common.Channels.WebApplications">
            <summary>
            Web Uygulamaları
            </summary>
        </member>
        <member name="F:Fintek.Common.Channels.VTM">
            <summary>
            VTM
            </summary>
        </member>
        <member name="F:Fintek.Common.Channels.Mobile">
            <summary>
            Mobil bankacılık uygulaması
            </summary>
        </member>
        <member name="F:Fintek.Common.Channels.SGKWeb">
            <summary>
            SGK WebServisleri
            </summary>
        </member>
        <member name="F:Fintek.Common.Channels.SGKWebKK">
            <summary>
            SGK Web Kredi Kartı Tahsilat Kanalı
            </summary>
        </member>
        <member name="F:Fintek.Common.Channels.Documentum">
            <summary>
            Documentum Kanalı
            </summary>
        </member>
        <member name="F:Fintek.Common.Channels.OperationCenter">
            <summary>
            Operasyon Merkezi Kanalı
            </summary>
        </member>
        <member name="F:Fintek.Common.Channels.ZiraatMobilMobilephone">
            <summary>
            Ziraat Mobil Telefon Kanalı
            </summary>
        </member>
        <member name="F:Fintek.Common.Channels.ZiraatMobilTablet">
            <summary>
            Ziraat Mobil Tablet Kanalı
            </summary>
        </member>
        <member name="T:Fintek.Common.GlobalizationInfo">
            <summary>
            Culture specific methods and properties.
            </summary>
        </member>
        <member name="P:Fintek.Common.GlobalizationInfo.UsersCultureInfo">
            <summary>
            Retrieving user's CultureInfo property.
            </summary>
            <returns>CultureInfo</returns>
        </member>
        <member name="T:Fintek.Common.InitializeHandler">
            <summary>
            Represents the method that will handle the initialization event.
            </summary>
        </member>
        <member name="T:Fintek.Common.Initializer">
            <summary>
            Static class initializer.
            </summary>
            <remarks>
            Exposes a new way for the static constructors of the .NET classes.
            </remarks>
        </member>
        <member name="M:Fintek.Common.Initializer.#ctor(Fintek.Common.InitializeHandler)">
            <summary>
            Default contructor for Ininitializer class.
            </summary>
            <param name="initializerMethod">Target static classes initialization method</param>
        </member>
        <member name="M:Fintek.Common.Initializer.#ctor(Fintek.Common.InitializeHandler,System.Int32,System.Int32)">
            <summary>
            Creates an instance for Initializer class.
            </summary>
            <param name="initializerMethod">Inializer method handler.</param>
            <param name="timeout">Initialization timeout.</param>
            <param name="checkInterval">Check interval of initialization to be completed.</param>
        </member>
        <member name="M:Fintek.Common.Initializer.Initialize">
            <summary>
            Performs initialization if necessary.
            </summary>
        </member>
        <member name="P:Fintek.Common.Initializer.Initialized">
            <summary>
            Gets flag indicating the initialization completed or not.
            </summary>
        </member>
        <member name="P:Fintek.Common.Initializer.Initializing">
            <summary>
            Gets flag indicating the initailization is in progress.
            </summary>
        </member>
        <member name="P:Fintek.Common.Initializer.InitializeMethod">
            <summary>
            Gets function handle that represents initialization.
            </summary>
        </member>
        <member name="P:Fintek.Common.Initializer.Timeout">
            <summary>
            Gets or sets value indicating timeout of the initialization.
            </summary>
        </member>
        <member name="P:Fintek.Common.Initializer.CheckInterval">
            <summary>
            Gets or sets value indicating check interval for initialization check.
            </summary>
        </member>
        <member name="T:Fintek.Common.Mathematic">
            <summary>
            Matematiksel metodların yer aldığı class.
            </summary>
        </member>
        <member name="M:Fintek.Common.Mathematic.Round(System.Decimal,System.Int32)">
            <summary>
            Decimal olarak verilen bir değerin yuvarlatılmasını sağlar.
            </summary>
            <param name="number">Yuvarlanacak değer.</param>
            <param name="precision">Kaç haneye kadar yuvarlama yapılacağı bilgisi.</param>
            <returns>Sayının yuvarlatılmış hali.</returns>
        </member>
        <member name="M:Fintek.Common.Mathematic.Round(Fintek.Common.NumberType,System.Int32)">
            <summary>
            NumberType olarak verilen bir değerin yuvarlatılmasını sağlar.
            </summary>
            <param name="number">Yuvarlanacak değer.</param>
            <param name="precision">Kaç haneye kadar yuvarlama yapılacağı bilgisi.</param>
            <returns>Sayının yuvarlatılmış hali.</returns>
        </member>
        <member name="M:Fintek.Common.Mathematic.Round(System.Decimal,System.Int32,Fintek.Common.RoundStyles)">
            <summary>
            Decimal olarak verilen bir değerin yuvarlatılmasını sağlar.
            </summary>
            <param name="number">Yuvarlanacak değer.</param>
            <param name="precision">Kaç haneye kadar yuvarlama yapılacağı bilgisi.</param>
            <param name="roundStyle">Round İşleminin Hangi Yönde Yapılacağını gösterir</param>
            <returns>Sayının yuvarlatılmış hali.</returns>
        </member>
        <member name="M:Fintek.Common.Mathematic.CalculateCheckDigit(System.Decimal)">
            <summary>
            Decimal olarak verilen sayının Mode-10 (Luhn) algoritmasına göre check digitini hesaplar.
            </summary>
            <param name="number">Check digit hesaplanacak sayı</param>
            <returns>Check digit</returns>
        </member>
        <member name="M:Fintek.Common.Mathematic.ValidateCheckDigit(System.Decimal)">
            <summary>
            Decimal olarak verilen sayının Mode-10 (Luhn) algoritmasına göre check digitinin doğru olup olmadığını kontrol eder.
            </summary>
            <param name="number">Check digit kontrol edilecek sayı</param>
            <returns>Doğru/Yanlış</returns>
        </member>
        <member name="T:Fintek.Common.MoneyInfo">
            <summary>
            Sistem para bilgileri sınıfı.
            </summary>
        </member>
        <member name="M:Fintek.Common.MoneyInfo.Equals(System.String)">
            <summary>
            Verilen swift kodunun sistem swift koduna eşitliğini kontrol eder.
            </summary>
            <param name="swiftCode">Swift kodu string değeri.</param>
            <returns>Eşit ise "true" değilse "false".</returns>
        </member>
        <member name="M:Fintek.Common.MoneyInfo.Equals(System.Int32)">
            <summary>
            Verilen nümerik para kodunun sistem para koduna eşitliğini kontrol eder.
            </summary>
            <param name="code">Karşılaştırılacak para kodu.</param>
            <returns>Eşit ise "true" değilse "false".</returns>
        </member>
        <member name="M:Fintek.Common.MoneyInfo.#ctor(System.String,System.Int32,System.Int32,System.Byte,System.String,Fintek.Common.DateType,System.String,System.Byte)">
            <summary>
            Money info sınıfından bir nesne türetir.
            </summary>
            <param name="swiftCode">Swift kodu.</param>
            <param name="isoCode">ISO kodu.</param>
            <param name="code">Para kodu.</param>
            <param name="precision">Kuruş hassasiyeti.</param>
            <param name="fullName">Uzun ismi.</param>
            <param name="startingDate">Kullanıma başlama tarihi.</param>
            <param name="shortName">Kısaltması.</param>
            <param name="accuracy">Döviz hassasiyeti.</param>
        </member>
        <member name="P:Fintek.Common.MoneyInfo.SwiftCode">
            <summary>
            Swift kodunu getirir.
            </summary>
        </member>
        <member name="P:Fintek.Common.MoneyInfo.ISOCode">
            <summary>
            Sistem para biriminin ISO kodunu getirir.
            </summary>
        </member>
        <member name="P:Fintek.Common.MoneyInfo.Code">
            <summary>
            Sistemdeki para birim kodu.
            </summary>
        </member>
        <member name="P:Fintek.Common.MoneyInfo.Precision">
            <summary>
            Para birimdeki kuruş sayısı.
            </summary>
        </member>
        <member name="P:Fintek.Common.MoneyInfo.FullName">
            <summary>
            Para biriminin uzun ismi.
            </summary>
        </member>
        <member name="P:Fintek.Common.MoneyInfo.StartingDate">
            <summary>
            Para birimine ait ilk kullanıma geçme zamanı.
            </summary>
        </member>
        <member name="P:Fintek.Common.MoneyInfo.ShortName">
            <summary>
            Para birimine ait kısaltma.
            </summary>
        </member>
        <member name="P:Fintek.Common.MoneyInfo.Accuracy">
            <summary>
            Dövizli işlemler için ondalık hassasiye değeri.
            </summary>
        </member>
        <member name="T:Fintek.Common.RegistryManager">
            <summary>
            Summary description for RegistryManager.
            </summary>
        </member>
        <member name="M:Fintek.Common.RegistryManager.RenameSubKey(Microsoft.Win32.RegistryKey,System.String,System.String)">
            <summary>
            Renames a subkey of the passed in registry key since 
            the frame work totally forgot to include such a handy feature.
            </summary>
            <param name="parentKey">The RegistryKey that contains the subkey 
            you want to rename (must be writeable)</param>
            <param name="subKeyName">The name of the subkey that you want to rename</param>
            <param name="newSubKeyName">The new name of the RegistryKey</param>
            <returns>True if succeeds</returns>
        </member>
        <member name="M:Fintek.Common.RegistryManager.CopyKey(Microsoft.Win32.RegistryKey,System.String,System.String)">
            <summary>
            Copy a registry key.  The parentKey must be writeable.
            </summary>
            <param name="parentKey"></param>
            <param name="keyNameToCopy"></param>
            <param name="newKeyName"></param>
            <returns></returns>
        </member>
        <member name="M:Fintek.Common.RegistryManager.GetMimeTypeFromFileName(System.String)">
            <summary>
            Verilen dosya ismine göre uygun MIME Type dönülür.
            </summary>
            <param name="fileName">Dosya ismi</param>
            <returns></returns>
        </member>
        <member name="M:Fintek.Common.RegistryManager.GetMimeTypeFromExtention(System.String)">
            <summary>
            Verilen dosya uzantısına göre uygun MIME Type dönülür.
            </summary>
            <param name="extention">Dosya uzantısı</param>
            <returns></returns>
        </member>
        <member name="M:Fintek.Common.RegistryManager.GetDefaultExtension(System.String)">
            <summary>
            Verilen MIME Type'a göre defualt dosya uzantısı dönülür.
            </summary>
            <param name="mimeType"></param>
            <returns></returns>
        </member>
        <member name="M:Fintek.Common.RegistryManager.recurseCopyKey(Microsoft.Win32.RegistryKey,Microsoft.Win32.RegistryKey)">
            <summary>
            
            </summary>
            <param name="sourceKey"></param>
            <param name="destinationKey"></param>
        </member>
        <member name="T:Fintek.Common.RegularExpression">
            <summary>
            RegularExpression class
            </summary>
        </member>
        <member name="M:Fintek.Common.RegularExpression.Match(System.String,Fintek.Common.ReqularExpressionPattern)">
            <summary>
            String değişkenin seçilen pattern'a uygun olup olmadığının kontrolünü yapar.
            </summary>
            <param name="input">Input string</param>
            <param name="pattern">Pattern(EMail, IP Adres, Numeric ..)</param>
            <returns>Input string eğer pattern'a uygunsa true değeri, uygun değilse false değeri döner</returns>
        </member>
        <member name="M:Fintek.Common.RegularExpression.Match(System.String,System.String)">
            <summary>
            String değişkenin verilmiş pattern'a uygun olup olmadığının kontrolünü yapar.
            </summary>
            <param name="input">Input string</param>
            <param name="expressionPattern">Regular expression pattern değeri</param>
            <returns>Input string eğer pattern'a uygunsa true değeri, uygun değilse false değeri döner</returns>
        </member>
        <member name="M:Fintek.Common.RegularExpression.match(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="pattern"></param>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="T:Fintek.Common.ReqularExpressionPattern">
            <summary>
            Regular Expression pattern değerleri
            EMail, IPAddress, URLAddress, ...
            </summary>
        </member>
        <member name="F:Fintek.Common.ReqularExpressionPattern.None">
            <summary>
            Default Expression Pattern
            </summary>
        </member>
        <member name="F:Fintek.Common.ReqularExpressionPattern.EMail">
            <summary>
            Email Expression Pattern
            </summary>
        </member>
        <member name="F:Fintek.Common.ReqularExpressionPattern.IPAddress">
            <summary>
            IPAddress Expression Pattern
            </summary>
        </member>
        <member name="F:Fintek.Common.ReqularExpressionPattern.URLAddress">
            <summary>
            URLAddress Expression Pattern
            </summary>
        </member>
        <member name="F:Fintek.Common.ReqularExpressionPattern.Numeric">
            <summary>
            Numeric Expression Pattern
            </summary>
        </member>
        <member name="T:Fintek.Common.Security.Des3">
            <summary>
            Decryption - Encryption Algorithms
            Use Fintek.Common.Security instead.
            </summary>
        </member>
        <member name="M:Fintek.Common.Security.Des3.Encrypt(System.String,System.String)">
            <summary>
            Encrypts Given String using TripleDES with a given password
            </summary>
            <param name="source">String value to be encrypted</param>
            <param name="key">encryption password to be used</param>
            <returns>encrypted string in Base64</returns>
        </member>
        <member name="M:Fintek.Common.Security.Des3.Decrypt(System.String,System.String)">
            <summary>
            Decrypts given Base64 string with specified password.
            </summary>
            <param name="source">encrypted string</param>
            <param name="key">password to be used for decryption</param>
            <returns>string</returns>
        </member>
        <member name="T:Fintek.Common.Security.Hash">
            <summary>
            Hash algorithms.
            Use Fintek.Common.Security instead.
            </summary>
        </member>
        <member name="M:Fintek.Common.Security.Hash.HashString(System.String)">
            <summary>
            Calculates hash value for a string
            </summary>
            <param name="s">String for hash calculation.</param>
            <returns>Hash value.</returns>
        </member>
        <member name="T:Fintek.Common.Net.ServerSocket">
            <summary>
            Opens a TCP/IP for a listening socket.
            Manages client connections.
            Performs communications in a asysnchronous maner.
            </summary>
        </member>
        <member name="M:Fintek.Common.Net.ServerSocket.#ctor(System.Int32)">
            <summary>
            Creates an instance for ServerSocket class.
            </summary>
            <param name="maxClients">Maximum number of clients allowed for this server.</param>
        </member>
        <member name="M:Fintek.Common.Net.ServerSocket.startListening">
            <summary>
            Server starter worker function.
            </summary>
        </member>
        <member name="M:Fintek.Common.Net.ServerSocket.SendToClient(Fintek.Common.Net.ClientSocket,System.Byte[])">
            <summary>
            Sends a data packet to a client.
            </summary>
            <param name="clientSocket">Target client socket.</param>
            <param name="data">Data to send.</param>
        </member>
        <member name="M:Fintek.Common.Net.ServerSocket.SendToClient(System.Net.Sockets.Socket,System.Byte[])">
            <summary>
            Sends a data packet to a client.
            </summary>
            <param name="socket">Target client connection socket.</param>
            <param name="data">Data to send.</param>
        </member>
        <member name="M:Fintek.Common.Net.ServerSocket.IsConnected(System.Net.Sockets.Socket)">
            <summary>
            Checks a socket connection is active.
            </summary>
            <param name="socket">Socket to check.</param>
            <returns>Connection state.</returns>
        </member>
        <member name="M:Fintek.Common.Net.ServerSocket.DisconnectClient(Fintek.Common.Net.ClientSocket)">
            <summary>
            Disconnects and removes a client from the client list.
            </summary>
            <param name="client">Client socket to disconnect.</param>
        </member>
        <member name="M:Fintek.Common.Net.ServerSocket.DisconnectAll">
            <summary>
            Disconnects from all clients.
            </summary>
        </member>
        <member name="M:Fintek.Common.Net.ServerSocket.DisconnectAll(System.Int32)">
            <summary>
            Disconnects from all clients.
            </summary>
        </member>
        <member name="M:Fintek.Common.Net.ServerSocket.BroadCast(System.Byte[])">
            <summary>
            Send a message packet to all clients.
            </summary>
            <param name="data">Data packet.</param>
        </member>
        <member name="M:Fintek.Common.Net.ServerSocket.SendCallback(System.IAsyncResult)">
            <summary>
            Asynchronous send callback function.
            </summary>
            <param name="ar">Asynchronous result object.</param>
        </member>
        <member name="M:Fintek.Common.Net.ServerSocket.ShutdownServer(System.Int32)">
            <summary>
            Stops listening and shutdowns the server.
            </summary>
        </member>
        <member name="M:Fintek.Common.Net.ServerSocket.ShutdownServer">
            <summary>
            Stops listening and shutdowns the server.
            </summary>
        </member>
        <member name="M:Fintek.Common.Net.ServerSocket.StartListening(System.Int32)">
            <summary>
            Starts listening on specified port.
            </summary>
            <param name="serverPort">Listener port.</param>
        </member>
        <member name="M:Fintek.Common.Net.ServerSocket.AcceptCallback(System.IAsyncResult)">
            <summary>
            Asynchronous accept callback function.
            </summary>
            <param name="ar">Asynchronous result object.</param>
        </member>
        <member name="M:Fintek.Common.Net.ServerSocket.ReceiveCallback(System.IAsyncResult)">
            <summary>
            Asynchronous receive callback function.
            </summary>
            <param name="ar">Asynchronous result object.</param>
        </member>
        <member name="M:Fintek.Common.Net.ServerSocket.OnAccept(Fintek.Common.Net.AcceptEventArgs)">
            <summary>
            Raises the accept event.
            </summary>
            <param name="aea"></param>
        </member>
        <member name="M:Fintek.Common.Net.ServerSocket.OnDisconnect(Fintek.Common.Net.DisconnectEventArgs)">
            <summary>
            Raises the disconnect event.
            </summary>
            <param name="dea"></param>
        </member>
        <member name="M:Fintek.Common.Net.ServerSocket.OnReceive(Fintek.Common.Net.ReceiveEventArgs)">
            <summary>
            Raises the receive event.
            </summary>
            <param name="rea"></param>
        </member>
        <member name="M:Fintek.Common.Net.ServerSocket.OnSend(Fintek.Common.Net.SendEventArgs)">
            <summary>
            Raises the send event.
            </summary>
            <param name="sea"></param>
        </member>
        <member name="M:Fintek.Common.Net.ServerSocket.OnSocketError(Fintek.Common.Net.SocketErrorEventArgs)">
            <summary>
            Raises the socket error event.
            </summary>
            <param name="seea"></param>
        </member>
        <member name="P:Fintek.Common.Net.ServerSocket.ServerPort">
            <summary>
            Gets or sets value indicating listening server port.
            </summary>
        </member>
        <member name="P:Fintek.Common.Net.ServerSocket.ServerIP">
            <summary>
            Gets or sets value indicating the local server IP address.
            </summary>
        </member>
        <member name="P:Fintek.Common.Net.ServerSocket.MaxClients">
            <summary>
            Gets or sets value indicating maximum client count allowed.
            </summary>
        </member>
        <member name="P:Fintek.Common.Net.ServerSocket.IgnoreErrors">
            <summary>
            Gets or sets flag indicating any exception will be thrown or ignored.
            </summary>
        </member>
        <member name="P:Fintek.Common.Net.ServerSocket.IsStarted">
            <summary>
            Gets flag indicating the server is listening or not.
            </summary>
        </member>
        <member name="P:Fintek.Common.Net.ServerSocket.LingeringOn">
            <summary>
            Gets or set flag indicating lingering option of the socket is on or off.
            </summary>
        </member>
        <member name="P:Fintek.Common.Net.ServerSocket.LingerTime">
            <summary>
            Gets or sets the value indicating the linger time option on the socket.
            </summary>
        </member>
        <member name="P:Fintek.Common.Net.ServerSocket.SendTimeout">
            <summary>
            Gets or sets value indicating send timeout option on socket.
            </summary>
        </member>
        <member name="P:Fintek.Common.Net.ServerSocket.KeepAlive">
            <summary>
            Gets or set value indicating keep alive option of the socket is on or off.
            </summary>
        </member>
        <member name="P:Fintek.Common.Net.ServerSocket.ThreadingOption">
            <summary>
            Gets or sets value indicating threading option when raising events on the class.
            </summary>
        </member>
        <member name="P:Fintek.Common.Net.ServerSocket.MaxDelay">
            <summary>
            Gets or sets the value indicating the timeout value when using read header.
            </summary>
        </member>
        <member name="E:Fintek.Common.Net.ServerSocket.Accept">
            <summary>
            Occurs when new client connection accepted.
            </summary>
        </member>
        <member name="E:Fintek.Common.Net.ServerSocket.Receive">
            <summary>
            Occurs when a data received from any client.
            </summary>
        </member>
        <member name="E:Fintek.Common.Net.ServerSocket.Send">
            <summary>
            Occurs when a data sent to any client.
            </summary>
        </member>
        <member name="E:Fintek.Common.Net.ServerSocket.Disconnect">
            <summary>
            Occurs when any of the clients disconnected from listener.
            </summary>
        </member>
        <member name="E:Fintek.Common.Net.ServerSocket.SocketError">
            <summary>
            Occurs when an exception cathced and IgnoreErrors flag is on.
            </summary>
        </member>
        <member name="T:Fintek.Common.SessionManager">
            <summary>
            Summary description for SessionManager.
            </summary>
        </member>
        <member name="M:Fintek.Common.SessionManager.OnSessionRightsChanged">
            <summary>
            
            </summary>
        </member>
        <member name="E:Fintek.Common.SessionManager.SessionRightsChanged">
            <summary>
            
            </summary>
        </member>
        <member name="T:Fintek.Common.Net.ThreadingOptions">
            <summary>
            Classifies threading styles when raising errors.
            </summary>
        </member>
        <member name="F:Fintek.Common.Net.ThreadingOptions.NonThreaded">
            <summary>
            No thread created for any event.
            </summary>
        </member>
        <member name="F:Fintek.Common.Net.ThreadingOptions.SyncThreaded">
            <summary>
            Use syschronous threads.
            </summary>
        </member>
        <member name="F:Fintek.Common.Net.ThreadingOptions.AsyncThreaded">
            <summary>
            Use asynchronous threads.
            </summary>
        </member>
        <member name="T:Fintek.Common.Net.AcceptEventHandler">
            <summary>
            Represents a method to be called when an accept event raised.
            </summary>
        </member>
        <member name="T:Fintek.Common.Net.ConnectEventHandler">
            <summary>
            Represents a method to be called when an connect event raised.
            </summary>
        </member>
        <member name="T:Fintek.Common.Net.DisconnectEventHandler">
            <summary>
            Represents a method to be called when an disconnect event raised.
            </summary>
        </member>
        <member name="T:Fintek.Common.Net.ReceiveEventHandler">
            <summary>
            Represents a method to be called when an receive event raised.
            </summary>
        </member>
        <member name="T:Fintek.Common.Net.SendEventHandler">
            <summary>
            Represents a method to be called when an send event raised.
            </summary>
        </member>
        <member name="T:Fintek.Common.Net.SocketErrorEventHandler">
            <summary>
            Represents a method to be called when an socket error event raised.
            </summary>
        </member>
        <member name="T:Fintek.Common.Net.SocketEventArgs">
            <summary>
            Base class for socket event argument classes.
            </summary>
        </member>
        <member name="F:Fintek.Common.Net.SocketEventArgs.m_EventSocket">
            <summary>
            Event socket member.
            </summary>
        </member>
        <member name="P:Fintek.Common.Net.SocketEventArgs.EventSocket">
            <summary>
            Gets the socket which event occured.
            </summary>
        </member>
        <member name="T:Fintek.Common.Net.AcceptEventArgs">
            <summary>
            Provides data for Accept event.
            </summary>
        </member>
        <member name="M:Fintek.Common.Net.AcceptEventArgs.#ctor(System.Net.Sockets.Socket)">
            <summary>
            Initializes a new instance of the AcceptEventArgs.
            </summary>
            <param name="eventSocket">Socket instance that event occured.</param>
        </member>
        <member name="P:Fintek.Common.Net.AcceptEventArgs.ManualReceive">
            <summary>
            Gets or sets flag indicating asynchoronous receiving will be performed on the socket.
            </summary>
        </member>
        <member name="T:Fintek.Common.Net.ReceiveEventArgs">
            <summary>
            Provides data for Receive event.
            </summary>
        </member>
        <member name="M:Fintek.Common.Net.ReceiveEventArgs.#ctor(System.Net.Sockets.Socket,System.Byte[])">
            <summary>
            Initializes a new instance of the ReceiveEventArgs.
            </summary>
            <param name="eventSocket">Socket instance that event occured.</param>
            <param name="data"></param>
        </member>
        <member name="P:Fintek.Common.Net.ReceiveEventArgs.Data">
            <summary>
            Gets byte array of received data.
            </summary>
        </member>
        <member name="P:Fintek.Common.Net.ReceiveEventArgs.ContinueReceiving">
            <summary>
            Gets or sets flag indicating asynchoronous receiving will continue on the socket.
            </summary>
        </member>
        <member name="T:Fintek.Common.Net.ConnectEventArgs">
            <summary>
            Provides data for Connect event.
            </summary>
        </member>
        <member name="M:Fintek.Common.Net.ConnectEventArgs.#ctor(System.Net.Sockets.Socket)">
            <summary>
            Initializes a new instance of the ConnectEventArgs.
            </summary>
            <param name="eventSocket">Socket instance that event occured.</param>
        </member>
        <member name="T:Fintek.Common.Net.DisconnectEventArgs">
            <summary>
            Provides data for Disconnect event.
            </summary>
        </member>
        <member name="M:Fintek.Common.Net.DisconnectEventArgs.#ctor(System.Net.Sockets.Socket)">
            <summary>
            Initializes a new instance of the DisconnectEventArgs.
            </summary>
            <param name="eventSocket">Socket instance that event occured.</param>
        </member>
        <member name="T:Fintek.Common.Net.SendEventArgs">
            <summary>
            Provides data for Send event.
            </summary>
        </member>
        <member name="M:Fintek.Common.Net.SendEventArgs.#ctor(System.Net.Sockets.Socket,System.Int32)">
            <summary>
            Initializes a new instance of the SendEventArgs.
            </summary>
            <param name="eventSocket">Socket instance that event occured.</param>
            <param name="length">Length of the sent data.</param>
        </member>
        <member name="P:Fintek.Common.Net.SendEventArgs.Length">
            <summary>
            Gets flag indicating length of the data transmitted over the socket.
            </summary>
        </member>
        <member name="T:Fintek.Common.Net.SocketErrorEventArgs">
            <summary>
            Provides data for SocketError event.
            </summary>
        </member>
        <member name="M:Fintek.Common.Net.SocketErrorEventArgs.#ctor(System.Net.Sockets.Socket,System.Net.Sockets.SocketException,System.String)">
            <summary>
            Initializes a new instance of the SendEventArgs.
            </summary>
            <param name="eventSocket">Socket instance that event occured.</param>
            <param name="socketException">Custom socket exception.</param>
            <param name="additionalDescription">Additional error comment by the application.</param>
        </member>
        <member name="P:Fintek.Common.Net.SocketErrorEventArgs.SocketException">
            <summary>
            Gets instance of the exception catched on the error.
            </summary>
        </member>
        <member name="P:Fintek.Common.Net.SocketErrorEventArgs.AdditionalDescription">
            <summary>
            Gets additional error information set by the raise object.
            </summary>
        </member>
        <member name="T:Fintek.Common.Net.CustomSocketException">
            <summary>
            Exception class for socket implementation helper classes
            </summary>
        </member>
        <member name="M:Fintek.Common.Net.CustomSocketException.#ctor">
            <summary>
            Initializes a new instance for CustomSocketException class
            </summary>
        </member>
        <member name="M:Fintek.Common.Net.CustomSocketException.#ctor(System.String)">
            <summary>
            Initializes a new instance for CustomSocketException class
            with an error message
            </summary>
            <param name="message">Error message text</param>
        </member>
        <member name="M:Fintek.Common.Net.CustomSocketException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance for CustomSocketException class
            with a message and an inner exception
            </summary>
            <param name="message">Error message text</param>
            <param name="innerException">Inner exception handled by previous catch block</param>
        </member>
        <member name="T:Fintek.Common.Net.Sockets.MessageSocket">
            <summary>
            Message Socket Abstract Code
            </summary>
        </member>
        <member name="P:Fintek.Common.Net.Sockets.MessageSocket.From">
            <summary>
            Message Originator
            </summary>
        </member>
        <member name="T:Fintek.Common.Net.Sockets.MessageNotification">
            <summary>
            Class MessageNotification
            </summary>
        </member>
        <member name="M:Fintek.Common.Net.Sockets.MessageNotification.#ctor(System.String,System.String,System.String,System.Int32,System.Int64,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Fintek.Common.Net.Sockets.MessageNotification"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="screenId">The screen id.</param>
            <param name="messageHeader">The message header.</param>
            <param name="messageType">Type of the message.</param>
            <param name="messageQueueId">The message queue id.</param>
            <param name="snoozeable">if set to <c>true</c> [snoozeable].</param>
            <param name="notificationColor">Color of the notification.</param>
        </member>
        <member name="P:Fintek.Common.Net.Sockets.MessageNotification.Message">
            <summary>
            Gets or sets the message.
            </summary>
            <value>The message.</value>
        </member>
        <member name="P:Fintek.Common.Net.Sockets.MessageNotification.ScreenId">
            <summary>
            Gets or sets the screen id.
            </summary>
            <value>The screen id.</value>
        </member>
        <member name="P:Fintek.Common.Net.Sockets.MessageNotification.MessageHeader">
            <summary>
            Gets or sets the message header.
            </summary>
            <value>The message header.</value>
        </member>
        <member name="P:Fintek.Common.Net.Sockets.MessageNotification.MessageType">
            <summary>
            Gets or sets the type of the message.
            </summary>
            <value>The type of the message.</value>
        </member>
        <member name="P:Fintek.Common.Net.Sockets.MessageNotification.MessageQueueId">
            <summary>
            Gets or sets the message queue id.
            </summary>
            <value>The message queue id.</value>
        </member>
        <member name="P:Fintek.Common.Net.Sockets.MessageNotification.Snoozeable">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Fintek.Common.Net.Sockets.MessageNotification"/> is snoozeable.
            </summary>
            <value><c>true</c> if snoozeable; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Fintek.Common.Net.Sockets.MessageApprovement">
            <summary>
            Message Approvement Class Definition
            </summary>
        </member>
        <member name="M:Fintek.Common.Net.Sockets.MessageApprovement.#ctor(System.String,System.String)">
            <summary>
            Message Approvement Default Constructor
            </summary>
            <param name="from">UserID</param>
            <param name="screenID">Approved Screen ID</param>
        </member>
        <member name="P:Fintek.Common.Net.Sockets.MessageApprovement.ScreenID">
            <summary>
            Approved Screen ID
            </summary>
        </member>
        <member name="T:Fintek.Common.Net.Sockets.MessageBroadcast">
            <summary>
            Brodacast Message Class
            </summary>
        </member>
        <member name="M:Fintek.Common.Net.Sockets.MessageBroadcast.#ctor(System.String,System.String)">
            <summary>
            Brodcast Message Method
            </summary>
            <param name="from">Message Originator</param>
            <param name="message">Message Text</param>
        </member>
        <member name="P:Fintek.Common.Net.Sockets.MessageBroadcast.Message">
            <summary>
            Socket Message String
            </summary>
        </member>
        <member name="T:Fintek.Common.Net.Sockets.TCPSocketClient">
            <summary>
            TCPSocketclient Class definition
            </summary>
        </member>
        <member name="M:Fintek.Common.Net.Sockets.TCPSocketClient.createRequest(System.Object)">
            <summary>
            Creates the request.
            </summary>
            <param name="data">The data.</param>
            <returns>System.Byte[][].</returns>
        </member>
        <member name="M:Fintek.Common.Net.Sockets.TCPSocketClient.SendTo(System.String,System.Object)">
            <summary>
            Sends required Object to Server
            </summary>
            <param name="server">Required Server</param>
            <param name="item">Required Object</param>
        </member>
        <member name="M:Fintek.Common.Net.Sockets.TCPSocketClient.SendTo(System.String,System.Object,System.Int32)">
            <summary>
            
            </summary>
            <param name="server"></param>
            <param name="item"></param>
            <param name="port"></param>
        </member>
        <member name="T:Fintek.Common.TRACING">
            <summary>
            Trace struct.
            </summary>
        </member>
        <member name="F:Fintek.Common.TRACING.NO">
            <summary>No tracing.</summary>
        </member>
        <member name="F:Fintek.Common.TRACING.ERRORS">
            <summary>Trace only errors.</summary>
        </member>
        <member name="F:Fintek.Common.TRACING.PROFILER">
            <summary>Trace errors and profiler messages.</summary>
        </member>
        <member name="F:Fintek.Common.TRACING.INFOMESSAGES">
            <summary>Trace everything including information messages.</summary>
        </member>
        <member name="T:Fintek.Common.TraceManager">
            <summary>
            Summary description for Tracing.
            </summary>
        </member>
        <member name="M:Fintek.Common.TraceManager.GetTraceLevelTable">
            <summary>
            Returns Tracing Levels Within a table, Columns Level(int), Info(string)
            </summary>
            <returns></returns>
        </member>
        <member name="T:Fintek.Common.Net.UDPReceiver">
            <summary>
            Provides UDP socket receiving.
            </summary>
        </member>
        <member name="M:Fintek.Common.Net.UDPReceiver.#ctor(System.Net.IPEndPoint)">
            <summary>
            Initializes a new instance for UDPReceiver.
            </summary>
            <param name="serverEP">UDP socket end point.</param>
        </member>
        <member name="M:Fintek.Common.Net.UDPReceiver.#ctor(System.Net.IPAddress,System.Int32)">
            <summary>
            Initializes a new instance for UDPReceiver.
            </summary>
            <param name="ip">Host IP address.</param>
            <param name="port">UDP port to listen.</param>
        </member>
        <member name="M:Fintek.Common.Net.UDPReceiver.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new instance for UDPReceiver.
            </summary>
            <param name="ip">Host IP address in dotted string notation.</param>
            <param name="port">UDP port to listen.</param>
        </member>
        <member name="M:Fintek.Common.Net.UDPReceiver.#ctor(System.Int32)">
            <summary>
            Initializes a new instance for UDPReceiver on local host.
            </summary>
            <param name="port">UDP port to listen.</param>
        </member>
        <member name="M:Fintek.Common.Net.UDPReceiver.OnReceive(System.Byte[])">
            <summary>
            Raises the Receive event.
            </summary>
            <param name="data">Data received by the event.</param>
        </member>
        <member name="M:Fintek.Common.Net.UDPReceiver.Start">
            <summary>
            Starts the listener.
            </summary>
        </member>
        <member name="M:Fintek.Common.Net.UDPReceiver.receiveCallback(System.IAsyncResult)">
            <summary>
            Asynchronous receive callback method.
            </summary>
            <param name="ar">Asynchronous result object.</param>
        </member>
        <member name="M:Fintek.Common.Net.UDPReceiver.Stop">
            <summary>
            Stops the listening UDP socket.
            </summary>
        </member>
        <member name="E:Fintek.Common.Net.UDPReceiver.Receive">
            <summary>
            Occurs when a datagram packet received on the listening socket.
            </summary>
        </member>
        <member name="P:Fintek.Common.Net.UDPReceiver.EndPoint">
            <summary>
            Fully qualified host address of the server.
            </summary>
        </member>
        <member name="P:Fintek.Common.Net.UDPReceiver.ServerIP">
            <summary>
            Host IP address.
            </summary>
        </member>
        <member name="P:Fintek.Common.Net.UDPReceiver.Port">
            <summary>
            Listening UDP server port.
            </summary>
        </member>
        <member name="P:Fintek.Common.Net.UDPReceiver.MulticastIP">
            <summary>
            Gets or set the multicast routing IP.
            </summary>
        </member>
        <member name="P:Fintek.Common.Net.UDPReceiver.UseHeader">
            <summary>
            Gets or set the header option for the messages.
            </summary>
        </member>
        <member name="T:Fintek.Common.UserSettingDataTypes">
            <summary>
            UserSetting Data Types: Like text, color, etc...
            </summary>
        </member>
        <member name="F:Fintek.Common.UserSettingDataTypes.Text">
            <summary>
            Any text field.
            </summary>
        </member>
        <member name="F:Fintek.Common.UserSettingDataTypes.Numerical">
            <summary>
            Only 0 to 9 digits.
            </summary>
        </member>
        <member name="F:Fintek.Common.UserSettingDataTypes.Color">
            <summary>
            Color value as integer.
            </summary>
        </member>
        <member name="F:Fintek.Common.UserSettingDataTypes.Boolean">
            <summary>
            Boolean value (True or False) as string.
            </summary>
        </member>
        <member name="T:Fintek.Common.UserSettings">
            <summary>
            general User Settings class. Registry path: HKEY_CURRENT_USER\Software\Tempest
            </summary>
        </member>
        <member name="M:Fintek.Common.UserSettings.#ctor(System.String)">
            <summary>
            Constructors for UserSettings
            </summary>
            <param name="keyRoot"></param>
        </member>
        <member name="M:Fintek.Common.UserSettings.AddKey(System.String)">
            <summary>
            
            </summary>
            <param name="keyName"></param>
        </member>
        <member name="M:Fintek.Common.UserSettings.AddValue(System.String,System.String,System.String,Fintek.Common.UserSettingDataTypes)">
            <summary>
            
            </summary>
            <param name="keyName"></param>
            <param name="valueName"></param>
            <param name="defaultValue"></param>
            <param name="registryDataType"></param>
        </member>
        <member name="M:Fintek.Common.UserSettings.Read">
            <summary>
            
            </summary>
        </member>
        <member name="M:Fintek.Common.UserSettings.Write">
            <summary>
            
            </summary>
        </member>
        <member name="M:Fintek.Common.UserSettings.DiscardChanges">
            <summary>
            
            </summary>
        </member>
        <member name="M:Fintek.Common.UserSettings.RestoreToDefaults">
            <summary>
            
            </summary>
        </member>
        <member name="M:Fintek.Common.UserSettings.ControlUserSettings(System.String)">
            <summary>
            
            </summary>
            <param name="userCode"></param>
        </member>
        <member name="M:Fintek.Common.UserSettings.MigratePrinterSettings(System.String)">
            <summary>
            
            </summary>
            <param name="userCode"></param>
        </member>
        <member name="P:Fintek.Common.UserSettings.DataSource">
            <summary>
            User Settings Data Source
            </summary>
        </member>
        <member name="P:Fintek.Common.UserSettings.Item(System.String,System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="T:Fintek.Common.UserSettingInfo">
            <summary>
            
            </summary>
        </member>
        <member name="M:Fintek.Common.UserSettingInfo.#ctor(System.String,System.String,Fintek.Common.UserSettingDataTypes)">
            <summary>
            
            </summary>
            <param name="valueName"></param>
            <param name="defaultData"></param>
            <param name="registryDataType"></param>
        </member>
        <member name="M:Fintek.Common.UserSettingInfo.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fintek.Common.UserSettingInfo.ToInt32">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fintek.Common.UserSettingInfo.ToColor">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fintek.Common.UserSettingInfo.ToBoolean">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fintek.Common.UserSettingInfo.SetAsBoolean(System.Boolean)">
            <summary>
            
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:Fintek.Common.UserSettingInfo.SetAsColor(System.Drawing.Color)">
            <summary>
            
            </summary>
            <param name="data"></param>
        </member>
        <member name="P:Fintek.Common.UserSettingInfo.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fintek.Common.UserSettingInfo.Data">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fintek.Common.UserSettingInfo.Changed">
            <summary>
            
            </summary>
        </member>
        <member name="T:Fintek.Common.DateType">
            <summary>
            Yeni bir DateType değişkeni yaratılır.
            </summary>
        </member>
        <member name="M:Fintek.Common.DateType.#ctor">
            <summary>
            Yeni bir DateType yaratmak içindir.
            </summary>
        </member>
        <member name="M:Fintek.Common.DateType.#ctor(System.DateTime)">
            <summary>
            Yeni bir DateType yaratmak içindir.
            </summary>
            <param name="dateTime">DateTime olarak tarih değeri.</param>
        </member>
        <member name="M:Fintek.Common.DateType.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Yeni bir DateType yaratmak içindir.
            </summary>
            <param name="day">Gün.</param>
            <param name="month">Ay.</param>
            <param name="year">Yıl.</param>
        </member>
        <member name="M:Fintek.Common.DateType.#ctor(System.String,Fintek.Common.DateTypeFormats)">
            <summary>
            Yeni bir DateType yaratmak içindir.
            </summary>
            <param name="dateString">String olarak tarih değeri.</param>
            <param name="dateFormat">Tarih değerin formatı.</param>
        </member>
        <member name="M:Fintek.Common.DateType.#ctor(System.String,Fintek.Common.DateTypeFormats,System.Boolean)">
            <summary>
            Yeni bir DateType yaratmak içindir.
            </summary>
            <param name="dateString">String olarak tarih değeri.</param>
            <param name="dateFormat">Tarih değerin formatı.</param>
            <param name="isHalfDay">Yarım gün olup olmadığı.</param>
        </member>
        <member name="M:Fintek.Common.DateType.#ctor(System.String,Fintek.Common.DateTypeFormats,System.Boolean,System.String)">
            <summary>
            Yeni bir DateType yaratmak içindir.
            </summary>
            <param name="dateString">String olarak tarih değeri.</param>
            <param name="dateFormat">Tarih değerin formatı.</param>
            <param name="isHalfDay">Yarım gün olup olmadığı.</param>
            <param name="aciklama">Açıklama</param>
        </member>
        <member name="M:Fintek.Common.DateType.Clone">
            <summary>
            Taarihsel değerin yeni bir kopyasını yaratır.
            </summary>
            <returns>Tarihsel değerin yeni bir kopyası.</returns>
        </member>
        <member name="M:Fintek.Common.DateType.Assign(System.Int32,System.Int32,System.Int32)">
            <summary>
            Tarihsel değerin atanmasını sağlar.
            </summary>
            <param name="day">Gün.</param>
            <param name="month">Ay.</param>
            <param name="year">Yıl.</param>
        </member>
        <member name="M:Fintek.Common.DateType.Assign(System.DateTime)">
            <summary>
            Tarihsel değerin atanmasını sağlar.
            </summary>
            <param name="tDate">Atanacak tarihsel değer.</param>
        </member>
        <member name="M:Fintek.Common.DateType.Assign(System.String,Fintek.Common.DateTypeFormats)">
            <summary>
            Tarihsel değerin atanmasını sağlar.
            </summary>
            <param name="dateString">Atanacak tarihsel değer.</param>
            <param name="dateFormat">Atanacak tarihsel değerin biçimi.</param>
            <returns>Tarihsel değer, eğer başarılı bir şekilde atanmış ise true, değil ise false.</returns>
        </member>
        <member name="M:Fintek.Common.DateType.Assign(System.String,Fintek.Common.DateTypeFormats,System.String)">
            <summary>
            Tarihsel değerin atanmasını sağlar.
            </summary>
            <param name="dateString">Atanacak tarihsel değer.</param>
            <param name="dateFormat">Atanacak tarihsel değerin biçimi.</param>
            <param name="dateSeparator">Tarihsel değerin separatörü.</param>
            <returns>Tarihsel değer, eğer başarılı bir şekilde atanmış ise true, değil ise false.</returns>
        </member>
        <member name="M:Fintek.Common.DateType.Clear">
            <summary>
            Tarihsel değeri silip olabilecek en küçük tarihi ayarlar.
            </summary>
        </member>
        <member name="M:Fintek.Common.DateType.IsBlank">
            <summary>
            Tarihsel değerin boş olup olmadığını döndürür.
            </summary>
            <returns>Tarihsel değer boş ise true, değil ise false.</returns>
        </member>
        <member name="M:Fintek.Common.DateType.IsValid">
            <summary>
            Tarihsel değerin geçerliliğini döndürür.
            </summary>
            <returns>Geçerli ise true, değil ise false.</returns>
        </member>
        <member name="M:Fintek.Common.DateType.AddDays(System.Int32)">
            <summary>
            Tarih değerinin verilen değer kadar gün ileri ya da geri değerini hesaplayıp döndürür.
            </summary>
            <param name="difference">İlerletilmesi ya da geriletilmesi istenen gün.</param>
        </member>
        <member name="M:Fintek.Common.DateType.Compare(Fintek.Common.DateType)">
            <summary>
            Verilen bir tarihsel değer göre küçük (-1), eşit (0) ya da büyük (1) olduğunu döndürür.
            </summary>
            <param name="digerTarih">Karşılaştırılacak tarihsel değer.</param>
            <returns>Küçük (-1), eşit (0) ya da büyük (1) ise dönen değer.</returns>
        </member>
        <member name="M:Fintek.Common.DateType.ToString(Fintek.Common.DateTypeFormats)">
            <summary>
            Tarih değerini biçimlendirir.
            </summary>
            <param name="dateFormat">Biçimlemek için gerekli tarih formatı.</param>
            <returns>Tarihsel değerin biçimlenmiş text değeri.</returns>
        </member>
        <member name="M:Fintek.Common.DateType.WeekOfDay">
            <summary>
            Tarih değerinin haftanın kaçıncı gün olduğunu döndürür.
            </summary>
            <returns>Haftanın hangi günü olduğunun değeri.</returns>
        </member>
        <member name="M:Fintek.Common.DateType.ToString">
            <summary>
            Yerel dile (Türkçe) göre tarih değerini çevirir.
            </summary>
            <returns>DMYWithSeparator olarak tarih değeri.</returns>
        </member>
        <member name="M:Fintek.Common.DateType.AddMonths(System.Int32)">
            <summary>
            Tarih değerinin verilen değer kadar ay ileri ya da geri değerini hesaplayıp döndürür.
            </summary>
            <param name="difference">İlerletilmesi ya da geriletilmesi istenen ay.</param>
        </member>
        <member name="M:Fintek.Common.DateType.ToDateTime">
            <summary>
            Tarih içeren değer DateTime olarak döndürülür.
            </summary>
            <returns>DateTime olarak tarih değeri.</returns>
        </member>
        <member name="P:Fintek.Common.DateType.Day">
            <summary>
            Tarihin gün değeri.
            </summary>
        </member>
        <member name="P:Fintek.Common.DateType.Month">
            <summary>
            Tarihin ay değeri.
            </summary>
        </member>
        <member name="P:Fintek.Common.DateType.Year">
            <summary>
            Tarihin yıl değeri.
            </summary>
        </member>
        <member name="P:Fintek.Common.DateType.IsHalfDay">
            <summary>
            Tarihin yarım gün olup olmadığı.
            </summary>
        </member>
        <member name="P:Fintek.Common.DateType.Aciklama">
            <summary>
            Tarihin açıklaması.
            </summary>
        </member>
        <member name="P:Fintek.Common.DateType.Value">
            <summary>
            Tarihini, veritabanında kullanılmak üzere değeri.
            </summary>
        </member>
        <member name="T:Fintek.Common.NumberType">
            <summary>
            NumnerType değişken tipinin class'ı.
            </summary>
        </member>
        <member name="M:Fintek.Common.NumberType.#ctor">
            <summary>
            Yeni bir NumberType değişkeni.
            Değeri 0 olarak ayarlanır.
            </summary>
        </member>
        <member name="M:Fintek.Common.NumberType.#ctor(System.Decimal)">
            <summary>
            Yeni bir NumberType değişkeni.
            </summary>
            <param name="number">NumberType için sayısal değer.</param>
        </member>
        <member name="M:Fintek.Common.NumberType.op_Addition(Fintek.Common.NumberType,Fintek.Common.NumberType)">
            <summary>
            NumberType için + operasyonu.
            </summary>
            <param name="n1">Birinci eleman.</param>
            <param name="n2">İkinci eleman.</param>
            <returns>Dönen değer.</returns>
        </member>
        <member name="M:Fintek.Common.NumberType.op_Subtraction(Fintek.Common.NumberType,Fintek.Common.NumberType)">
            <summary>
            NumberType için - operasyonu.
            </summary>
            <param name="n1">Birinci eleman.</param>
            <param name="n2">İkinci eleman.</param>
            <returns>Dönen değer.</returns>
        </member>
        <member name="M:Fintek.Common.NumberType.op_Multiply(Fintek.Common.NumberType,Fintek.Common.NumberType)">
            <summary>
            NumberType için * operasyonu.
            </summary>
            <param name="n1">Birinci eleman.</param>
            <param name="n2">İkinci eleman.</param>
            <returns>Dönen değer.</returns>
        </member>
        <member name="M:Fintek.Common.NumberType.op_Division(Fintek.Common.NumberType,Fintek.Common.NumberType)">
            <summary>
            NumberType için / operasyonu.
            </summary>
            <param name="n1">Birinci eleman.</param>
            <param name="n2">İkinci eleman.</param>
            <returns>Dönen değer.</returns>
        </member>
        <member name="M:Fintek.Common.NumberType.Clone">
            <summary>
            Değişkenin yeni bir kopyasını döndürür.
            </summary>
            <returns>Kopya olarak dönen değer.</returns>
        </member>
        <member name="M:Fintek.Common.NumberType.Round(System.Byte)">
            <summary>
            İstediğiniz duyarlılığa göre rakamı yuvarlar.
            </summary>
            <param name="precision">duyarlılık</param>
            <returns></returns>
        </member>
        <member name="M:Fintek.Common.NumberType.ToString">
            <summary>
            NumberType'ın içerdiği sayısal değeri biçimlendirmeye yarar.
            </summary>
            <returns>Biçimlenmiş olarak dönen değer.</returns>
        </member>
        <member name="M:Fintek.Common.NumberType.ToString(System.Int32)">
            <summary>
            NumberType'ın içerdiği sayısal değeri biçimlendirmeye yarar.
            </summary>
            <param name="kurusSayisi">Ondalıklı kısmın hane sayısı.</param>
            <returns>Biçimlenmiş olarak dönen değer.</returns>
        </member>
        <member name="M:Fintek.Common.NumberType.ToString(Fintek.Common.NumberTypeLanguages,Fintek.Common.NumberTypeCaseStyles)">
            <summary>
            NumberType'ın içerdiği sayısal değeri yazı olarak çevirmeye yarar.
            </summary>
            <param name="language">Dil kodu.</param>
            <param name="caseStyle">Biçim.</param>
            <returns>Yazı olarak dönen değer.</returns>
        </member>
        <member name="M:Fintek.Common.NumberType.ToString(Fintek.Common.NumberTypeLanguages,Fintek.Common.NumberTypeCaseStyles,System.Boolean)">
            <summary>
            NumberType'ın içerdiği sayısal değeri yazı olarak çevirmeye yarar.
            </summary>
            <param name="language">Dil kodu.</param>
            <param name="caseStyle">Biçim.</param>
            <param name="isBlank">Her kelime arasında boşluk olup olmadığı.</param>
            <returns>Yazı olarak dönen değer.</returns>
        </member>
        <member name="P:Fintek.Common.NumberType.Value">
            <summary>
            Veritabanına yazılmak üzere kullanılacak değer.
            </summary>
        </member>
        <member name="T:Fintek.Common.TightDataRow">
            <summary>
            A tight version of DataRow class.
            </summary>
        </member>
        <member name="M:Fintek.Common.TightDataRow.ToBytes(System.Data.DataRow)">
            <summary>
            Converts a data row to a byte array.
            </summary>
            <param name="dataRow">Source DataRow.</param>
            <returns>Prepared byte array.</returns>
        </member>
        <member name="M:Fintek.Common.TightDataRow.ToDataRow(System.Byte[])">
            <summary>
            Converts a previously prepared TightDataRow array to a DataRow.
            </summary>
            <param name="source">Source byte array.</param>
            <returns>DataRow equivalent to source byte array.</returns>
        </member>
        <member name="T:Fintek.Common.TightDataTable">
            <summary>
            A tight version of DataTable class.
            </summary>
        </member>
        <member name="M:Fintek.Common.TightDataTable.ToBytes(System.Data.DataTable)">
            <summary>
            Converts a DataTable to a byte array.
            </summary>
            <param name="dataTable">Source DataTable.</param>
            <returns>Prepared byte array.</returns>
        </member>
        <member name="M:Fintek.Common.TightDataTable.ToDataTable(System.Byte[])">
            <summary>
            Converts a previously prepared TightDataTable array to a DataTable.
            </summary>
            <param name="source">Source byte array.</param>
            <returns>DataTable equivalent to source byte array.</returns>
        </member>
        <member name="T:Fintek.Common.TightDataSet">
            <summary>
            A tight version of DataSet class.
            </summary>
        </member>
        <member name="M:Fintek.Common.TightDataSet.ToBytes(System.Data.DataSet)">
            <summary>
            Converts a DataSet to a byte array.
            </summary>
            <param name="dataSet">Source DataSet.</param>
            <returns>Prepared byte array.</returns>
        </member>
        <member name="M:Fintek.Common.TightDataSet.ToDataSet(System.Byte[])">
            <summary>
            Converts a previously prepared TightDataSet array to a DataSet.
            </summary>
            <param name="source">Source byte array.</param>
            <returns>DataSet equivalent to source byte array.</returns>
        </member>
        <member name="T:Fintek.Common.Vector">
            <summary>
            Supplies several static methods on single dimention arrays (Vector).
            </summary>
            <author>Süleyman ÖZ</author>
            <createdon>09.09.2004</createdon>
            <lastupdate>09.10.2004</lastupdate>
        </member>
        <member name="M:Fintek.Common.Vector.Tail(System.Array,System.Array)">
            <summary>
            Concatenates two vectors with same element types.
            </summary>
            <param name="mainArray">Main array that tailing will be performed.</param>
            <param name="tailArray">Tail array will be added to the main array.</param>
            <returns>Concatenation of two arrays</returns>
            <remarks>
            You must perform an explicit cast on the return of this function.
            </remarks>
            <exception cref="T:System.NotSupportedException">
            mainArray of tailArray has a rank that is not equal to 1.
            </exception>
            <exception cref="T:System.ArrayTypeMismatchException">
            Element types of the arrays are different.
            </exception>
        </member>
        <member name="M:Fintek.Common.Vector.Tail``1(``0[],``0[])">
            <summary>
            Concatenates two generic vectors.
            </summary>
            <typeparam name="T">Array element type.</typeparam>
            <param name="mainArray">First array.</param>
            <param name="tailArray">Second array.</param>
            <returns>Concatenation of two arrays.</returns>
        </member>
        <member name="M:Fintek.Common.Vector.SubVector(System.Array,System.Int32,System.Int32)">
            <summary>
            Retreives a subvector of a vector.
            </summary>
            <param name="array">Source array.</param>
            <param name="start">Start index.</param>
            <param name="length">Length of the subvector.</param>
            <returns>Specified subvector.</returns>
            <remarks>This function behaves like string.SubString</remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            start is negative or bigger than array length.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">,
            length smaller than or equal to zero.
            </exception>
            <exception cref="T:System.NotSupportedException">
            array has rank other than 1.
            </exception>
        </member>
        <member name="M:Fintek.Common.Vector.SubVector``1(``0[],System.Int32,System.Int32)">
            <summary>
            Retreives a subvector of a vector with generic type.
            </summary>
            <typeparam name="T">Generic type</typeparam>
            <param name="array">Generic type array</param>
            <param name="start">Start index</param>
            <param name="length">Length of the subvector</param>
            <returns>Generic typed subvector</returns>
            <remarks>This function behaves like string.SubString</remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">Start value is not in the array length.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Length value less than zero.</exception>
        </member>
        <member name="M:Fintek.Common.Vector.Linearize(System.Array[])">
            <summary>
            Linearize an array of arrays (matrix) to a vector.
            </summary>
            <param name="bufferHolder">Matrix to be linearized</param>
            <returns>Linearized single dimention array.</returns>
            <exception cref="T:System.ArgumentException">bufferHolder's is not an array of arrays.</exception>
        </member>
        <member name="M:Fintek.Common.Vector.Reverse(System.Array)">
            <summary>
            Creates a new array, which has elements in reverse order of the given array.
            </summary>
            <param name="array">Source array to be reversed.</param>
            <returns>Reverse array.</returns>
        </member>
        <member name="M:Fintek.Common.Vector.IsEqual(System.Array,System.Array)">
            <summary>
            Compares two arrays in element level.
            </summary>
            <param name="array1">First array.</param>
            <param name="array2">Second array</param>
            <returns>"true" if array lengths and elements are equal, else "false".</returns>
        </member>
        <member name="T:Fintek.Common.WordProcessing">
            <summary>
            Kelime işlem metodlarının yer aldığı class.
            </summary>
        </member>
        <member name="M:Fintek.Common.WordProcessing.ChangeCase(System.String,Fintek.Common.CaseStyles)">
            <summary>
            Verilen bir metni biçimlendirmek içindir.
            </summary>
            <param name="sourceString">Kaynak metin.</param>
            <param name="myCaseStyles">Biçimlendirme tipi.</param>
            <returns>Biçimlendirilmiş metin.</returns>
        </member>
        <member name="M:Fintek.Common.WordProcessing.ChangeCase(System.String,Fintek.Common.CaseStyles,System.String)">
            <summary>
            Verilen bir metni biçimlendirmek içindir.
            </summary>
            <param name="sourceString">Kaynak metin.</param>
            <param name="myCaseStyles">Biçimlendirme tipi.</param>
            <param name="cultureName">Ülke kodu.</param>
            <returns>Biçimlendirilmiş metin.</returns>
        </member>
        <member name="M:Fintek.Common.WordProcessing.RemoveExtraBlanks(System.String)">
            <summary>
            Verilen bir metnin içinde yer alan birden fazla boşluk karakterini tek boşluk ile değiştirir.
            </summary>
            <param name="sourceString">Kaynak metin.</param>
            <returns>Değiştirilmiş metin.</returns>
        </member>
        <member name="M:Fintek.Common.WordProcessing.ReplaceChars(System.String,System.Char[],System.Char[])">
            <summary>
            Verilen bir metnin içinde, verilen char[] içindeki karakterleri, verilen char[] karakterler ile değiştirir.
            </summary>
            <param name="sourceString">Kaynak metin.</param>
            <param name="findChars">Bulunması istenilen karakterler.</param>
            <param name="replaceChars">Değiştirilmesi istenilen karakterler.</param>
            <returns>Değiştirilmiş metin.</returns>
        </member>
        <member name="M:Fintek.Common.WordProcessing.GetOccurrenceNumber(System.String,System.String)">
            <summary>
            Bir text'in içinde bir başka text'in me kadar tekrarlandığını döndürür.
            </summary>
            <param name="sourceString">Kaynak text.</param>
            <param name="seekingString">Aranacak text.</param>
            <returns>Tekrarlanma sayısı.</returns>
        </member>
        <member name="M:Fintek.Common.WordProcessing.ConvertToInt(System.String)">
            <summary>
            String olarak verilen bir sayısal değeri int32 değerine çevirir.
            </summary>
            <param name="inputString">Int32 olarak çevrilecek sayısal text.</param>
            <returns>Sayısal text'tin Int32'ye çevrilmiş hali.</returns>
        </member>
        <member name="M:Fintek.Common.WordProcessing.PutCommas(System.String)">
            <summary>
            String olarak verilen bir sayıyı binlik olarak ayırıp formatlar.
            </summary>
            <param name="sourceString">Formatlanacak sayısal metin.</param>
            <returns>Formatlanmış sayısal metin.</returns>
        </member>
        <member name="M:Fintek.Common.WordProcessing.GenerateRandom(System.String)">
            <summary>
            Verieln bir metni encrypt eder.
            </summary>
            <param name="input">Normal metin.</param>
            <returns>Encrypt edilmiş metin.</returns>
        </member>
        <member name="T:Fintek.Common.Zone">
            <summary>
            Provides static methods and properties for a "Tempest" project zone.
            </summary>
        </member>
        <member name="M:Fintek.Common.Zone.ReadParameterSet(System.String)">
            <summary>
            Reads an XML based parameter file on the zone server and returns the DateSet.
            </summary>
            <param name="setName">Name of the parameter set.</param>
            <returns>DataSet of parameters.</returns>
        </member>
        <member name="P:Fintek.Common.Zone.Name">
            <summary>
            Gets that represents the name of this zone.
            </summary>
        </member>
        <member name="P:Fintek.Common.Zone.Address">
            <summary>
            Gets the value indicating IP address and port of the zone server.
            </summary>
        </member>
    </members>
</doc>
